import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as d,c as r,d as e,b as s,e as a,a as i}from"./app-aed80e01.js";const o="/images/iterm2/iterm-01.png",c="/images/iterm2/iterm-02.png",h="/images/iterm2/iterm-03.png",u="/images/iterm2/iterm-04.png",m="/images/iterm2/iterm-05.png",p={},b=i('<blockquote><p>个人认为迄今为止mac平台最好用的终端</p></blockquote><h2 id="iterm2介绍" tabindex="-1"><a class="header-anchor" href="#iterm2介绍" aria-hidden="true">#</a> iterm2介绍</h2><p><code>Mac OS</code>自带的终端，用起来虽然有些不太方便，界面也不够友好,<code>iTerm2</code>是一款相对比较好用的终端工具.<code>iTerm2</code>常用操作包括主题选择、声明高亮、自动填充建议、隐藏用户名和主机名、分屏效果等，当然还有许多的插件和字体提供用户使用。</p><p>效果图如下：</p><div align="center"><img src="'+o+'" style="zoom:70%;"><div style="font-size:14px;color:#C0C0C0;padding-bottom:5px;line-height:0.9;">iterm2</div></div>',5),v=i(`<ul><li>使用Homebrew进行下载安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> <span class="token parameter variable">--cask</span> iterm2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),g={href:"https://iterm2.com/downloads.html",target:"_blank",rel:"noopener noreferrer"},_=s("li",null,"下载的是压缩文件，解压后直接双击执行程序文件，或者直接将它拖到 Applications 目录下。",-1),z=s("h2",{id:"配置iterm2-主题",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#配置iterm2-主题","aria-hidden":"true"},"#"),e(" 配置iterm2 主题")],-1),k={href:"https://draculatheme.com",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/dracula/iterm.git",target:"_blank",rel:"noopener noreferrer"},y=s("li",null,[s("p",null,"下载主题")],-1),x=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 将主题下载到本地</span>
<span class="token function">git</span> clone https://github.com/dracula/iterm.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置主题</li></ul><p>打开 iTerm2，按 <code>Command</code> +<code> ，</code>键，打开打开 Preferences 配置界面，然后Profiles -&gt; Colors -&gt; Color Presets,在下拉列表中选择 Import，选择刚才clone下的文件夹里面的Dracula.itermcolors文件，导入成功后,在 Color Presets下选择 Dracula 主题，就可以了。</p><div align="center"><img src="`+c+'" style="zoom:50%;"><div style="font-size:14px;color:#C0C0C0;padding-bottom:5px;line-height:0.9;">导入插件</div><img src="'+h+'" style="zoom:50%;"><div style="font-size:14px;color:#C0C0C0;padding-bottom:5px;line-height:0.9;">主题</div></div><h2 id="设置iterm2背景图片" tabindex="-1"><a class="header-anchor" href="#设置iterm2背景图片" aria-hidden="true">#</a> 设置iterm2背景图片</h2><p>打开 iTerm2，按<code>Command</code> +<code>,</code>键，打开 Preferences 配置界面Profiles -&gt; Window-&gt;Background mage,选择一张自己喜欢的背景图.（我选择的事默认的）</p><div align="center"><img src="'+u+`" style="zoom:50%;"><div style="font-size:14px;color:#C0C0C0;padding-bottom:5px;line-height:0.9;">配置界面</div></div><h2 id="配置-oh-my-zsh" tabindex="-1"><a class="header-anchor" href="#配置-oh-my-zsh" aria-hidden="true">#</a> 配置 Oh My Zsh</h2><h3 id="安装oh-my-zsh" tabindex="-1"><a class="header-anchor" href="#安装oh-my-zsh" aria-hidden="true">#</a> 安装oh-my-zsh</h3><h4 id="步骤一" tabindex="-1"><a class="header-anchor" href="#步骤一" aria-hidden="true">#</a> 步骤一</h4><blockquote><p>如果步骤一不存在，则执行步骤二的内容</p></blockquote><ul><li><p>查看shell</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> /etc/shells

<span class="token comment"># 输出</span>
/bin/bash
/bin/csh
/bin/dash
/bin/ksh
/bin/sh
/bin/tcsh
/bin/zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查看当前窗口使用的shell版本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token environment constant">$SHELL</span>

<span class="token comment"># 输出</span>
/bin/zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="步骤二" tabindex="-1"><a class="header-anchor" href="#步骤二" aria-hidden="true">#</a> 步骤二</h4>`,13),C=i(`<li><p>安装并设置zsh</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> <span class="token function">zsh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>要将zsh设置为默认shell</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>chsh <span class="token parameter variable">-s</span> /usr/local/bin/zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,2),w=s("p",null,"安装Oh My Zsh:",-1),S={href:"https://github.com/ohmyzsh/ohmyzsh/wiki",target:"_blank",rel:"noopener noreferrer"},O=s("li",null,"安装方法",-1),T=s("thead",null,[s("tr",null,[s("th",null,[s("strong",null,"方式")]),s("th",null,[s("strong",null,"命令")])])],-1),q=s("td",null,[s("code",null,"curl")],-1),H={href:"https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh",target:"_blank",rel:"noopener noreferrer"},M=s("td",null,[s("code",null,"wget")],-1),P={href:"https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh",target:"_blank",rel:"noopener noreferrer"},$=s("td",null,[s("code",null,"fetch")],-1),L={href:"https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh",target:"_blank",rel:"noopener noreferrer"},Z=i(`<ul><li><p>本地安装方法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul>`,1),B=i(`<h3 id="配置oh-my-zsh" tabindex="-1"><a class="header-anchor" href="#配置oh-my-zsh" aria-hidden="true">#</a> 配置oh-my-zsh</h3><ul><li><p>备份您现有的<code>~/.zshrc</code>文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> ~/.zshrc ~/.zshrc.orig
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建一个新的zsh配置文件</p><p>可以通过复制我们包含的模板来创建一个新的zsh配置文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>初始化新zsh配置</p></li></ul><blockquote><p>一旦您打开一个新的终端窗口，它应该使用Oh My Zsh的配置加载zsh。</p></blockquote><h3 id="卸载oh-my-zsh" tabindex="-1"><a class="header-anchor" href="#卸载oh-my-zsh" aria-hidden="true">#</a> 卸载oh-my-zsh</h3><p>如果您想卸载<code>oh-my-zsh</code>，只需从命令行运行<code>uninstall_oh_my_zsh</code>。它将删除自己，并恢复您之前的<code>bash</code>或<code>zsh</code>配置。</p><h3 id="插件" tabindex="-1"><a class="header-anchor" href="#插件" aria-hidden="true">#</a> 插件</h3><p>插件下载目录：<code>.oh-my-zsh/custom/plugins</code></p><h4 id="高亮显示" tabindex="-1"><a class="header-anchor" href="#高亮显示" aria-hidden="true">#</a> 高亮显示</h4><ul><li><p>方式一</p><ul><li>使用homebrew进行安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> zsh-syntax-highlighting
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>安装成功之后，编辑vim ~/.zshrc文件，在最后一行增加下面配置：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>重新启动zsh（例如打开终端模拟器的新实例）</li></ul></li><li><p>方式二</p><ul><li><p>执行下面指令自动安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="token variable">\${ZSH_CUSTOM<span class="token operator">:-</span>~<span class="token operator">/</span>.oh-my-zsh<span class="token operator">/</span>custom}</span>/plugins/zsh-syntax-highlighting
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>然后编辑vim ~/.zshrc文件， 找到plugins=(git)这一行，如果没有添加。更改为如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span>git zsh-syntax-highlighting<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>重新启动zsh（例如打开终端模拟器的新实例）</p></li></ul></li></ul><h4 id="自动补全插件" tabindex="-1"><a class="header-anchor" href="#自动补全插件" aria-hidden="true">#</a> 自动补全插件</h4><ul><li>下载插件</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone git://github.com/zsh-users/zsh-autosuggestions <span class="token variable">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>编辑.zshrc文件<br> 找到plugins=(git)这一行，如果没有添加。更改为如下</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span>git zsh-autosuggestions<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>重新启动zsh（例如打开终端模拟器的新实例）</li></ul><div align="center"><img src="`+m+`" style="zoom:70%;"></div><h2 id="设置vim可配色" tabindex="-1"><a class="header-anchor" href="#设置vim可配色" aria-hidden="true">#</a> 设置vim可配色</h2><p>终端输入 <code>vim .vimrc</code><br> 设置如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> syntax on
 <span class="token builtin class-name">set</span> number
 <span class="token builtin class-name">set</span> ruler
 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iterm2-快捷键" tabindex="-1"><a class="header-anchor" href="#iterm2-快捷键" aria-hidden="true">#</a> iterm2 快捷键</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">command</span> + enter 进入与返回全屏模式
<span class="token builtin class-name">command</span> + t 新建标签
<span class="token builtin class-name">command</span> + w 关闭标签
<span class="token builtin class-name">command</span> + 数字 <span class="token builtin class-name">command</span> + 左右方向键    切换标签
<span class="token builtin class-name">command</span> + enter 切换全屏
<span class="token builtin class-name">command</span> + f 查找
<span class="token builtin class-name">command</span> + d 水平分屏
<span class="token builtin class-name">command</span> + <span class="token builtin class-name">shift</span> + d 垂直分屏
<span class="token builtin class-name">command</span> + option + 方向键 <span class="token builtin class-name">command</span> + <span class="token punctuation">[</span> 或 <span class="token builtin class-name">command</span> + <span class="token punctuation">]</span>    切换屏幕
<span class="token builtin class-name">command</span> + <span class="token punctuation">;</span> 查看历史命令
<span class="token builtin class-name">command</span> + <span class="token builtin class-name">shift</span> + h 查看剪贴板历史
ctrl + u    清除当前行
ctrl + l    清屏
ctrl + a    到行首
ctrl + e    到行尾
ctrl + f/b  前进后退
ctrl + p    上一条命令
ctrl + r    搜索命令历史
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21);function E(N,V){const n=t("ExternalLinkIcon");return d(),r("div",null,[b,e(" ## 下载及其安装 "),v,s("ul",null,[s("li",null,[e("去官网下载 "),s("ul",null,[s("li",null,[e("地址："),s("a",g,[e("https://iterm2.com/downloads.html"),a(n)])]),_])])]),z,s("ul",null,[s("li",null,[s("p",null,[e("主题地址："),s("a",k,[e("https://draculatheme.com"),a(n)]),e(" 需要翻墙才能打开")])]),s("li",null,[s("p",null,[e("GitHub地址 ："),s("a",f,[e("https://github.com/dracula/iterm.git"),a(n)])])]),y]),x,s("ul",null,[C,s("li",null,[w,s("ul",null,[s("li",null,[e("GitHub地址："),s("a",S,[e("https://github.com/ohmyzsh/ohmyzsh/wiki"),a(n)])]),O]),s("table",null,[T,s("tbody",null,[s("tr",null,[q,s("td",null,[e('sh -c "$(curl -fsSL '),s("a",H,[e("https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh"),a(n)]),e(')"')])]),s("tr",null,[M,s("td",null,[e('sh -c "$(wget -O- '),s("a",P,[e("https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh"),a(n)]),e(')"')])]),s("tr",null,[$,s("td",null,[e('sh -c "$(fetch -o - '),s("a",L,[e("https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh"),a(n)]),e(')"')])])])]),Z])]),B])}const G=l(p,[["render",E],["__file","iterm2.html.vue"]]);export{G as default};
