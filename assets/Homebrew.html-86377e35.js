import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c,e as s,w as i,d as a,b as e,a as r}from"./app-7daefdb5.js";const p="/LearnData/images/homebrew/homebrew-01.png",u="/LearnData/images/homebrew/homebrew-03.png",b="/LearnData/images/homebrew/homebrew-02.png",m="/LearnData/images/homebrew/homebrew-04.png",h="/LearnData/images/homebrew/homebrew-05.png",v="/LearnData/images/homebrew/homebrew-06.png",g="/LearnData/images/homebrew/homebrew-07.png",k="/LearnData/images/homebrew/homebrew-08.png",w="/LearnData/images/homebrew/homebrew-09.png",f="/LearnData/images/homebrew/homebrew-10.png",x="/LearnData/images/homebrew/homebrew-11.png",_="/LearnData/images/homebrew/homebrew-12.png",y={},q=r(`<h1 id="homebrew-使用指南" tabindex="-1"><a class="header-anchor" href="#homebrew-使用指南" aria-hidden="true">#</a> Homebrew 使用指南</h1><p>对于习惯了使用命令来完成一切的程序员来说，安装软件这种小事，自然是能够用命令解决，就不用图形界面选择。但是在 Linux 中，我们有 <code>yum</code>、<code>apt</code>、<code>dnf</code>、<code>pkg</code>等命令来完成软件的安装，macOS 却并未为我们提供一个好用的包管理器，帮助我们更好的使用 macOS。</p><p>好在，虽然官方没有提供，我们却可以使用 <strong>Homebrew</strong> 这一神器，来完成类似的工作，就如同 Homebrew 的 Slogan ：“The missing package manager for macOS (or Linux)”</p><h2 id="homebrew介绍" tabindex="-1"><a class="header-anchor" href="#homebrew介绍" aria-hidden="true">#</a> Homebrew介绍</h2><p>Homebrew 由开发者 Max Howell 开发，并基于 BSD 开源，是一个非常方便的包管理器工具。在早期， Homebrew 仅有 macOS 的版本，后续随着用户的增多，Homebrew 还提供了 Linux 的版本，帮助开发者在 Linux 同样使用 Homebrew 来配置环境。</p><h2 id="homebrew-的几个核心概念" tabindex="-1"><a class="header-anchor" href="#homebrew-的几个核心概念" aria-hidden="true">#</a> Homebrew 的几个核心概念</h2><p>在正式介绍 Homebrew 的使用之前，我先为你介绍一下 Homebrew 中的一些核心的概念，了解这些概念，就可以帮助你更好的去使用 Homebrew。</p><table><thead><tr><th style="text-align:left;">词汇</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:left;">formula (e)</td><td style="text-align:left;">安装包的描述文件，formulae 为复数</td></tr><tr><td style="text-align:left;">cellar</td><td style="text-align:left;">安装好后所在的目录</td></tr><tr><td style="text-align:left;">keg</td><td style="text-align:left;">具体某个包所在的目录，keg 是 cellar 的子目录</td></tr><tr><td style="text-align:left;">bottle</td><td style="text-align:left;">预先编译好的包，不需要现场下载编译源码，速度会快很多；官方库中的包大多都是通过 bottle 方式安装</td></tr><tr><td style="text-align:left;">tap</td><td style="text-align:left;">下载源，可以类比于 Linux 下的包管理器 repository</td></tr><tr><td style="text-align:left;">cask</td><td style="text-align:left;">安装 macOS native 应用的扩展，你也可以理解为有图形化界面的应用。</td></tr><tr><td style="text-align:left;">bundle</td><td style="text-align:left;">描述 Homebrew 依赖的扩展</td></tr></tbody></table><p>其中，最关键的是 tap 、cask，我们在后续会经常用到。</p><h2 id="homebrew-常用操作" tabindex="-1"><a class="header-anchor" href="#homebrew-常用操作" aria-hidden="true">#</a> Homebrew 常用操作</h2><h3 id="安装-homebrew" tabindex="-1"><a class="header-anchor" href="#安装-homebrew" aria-hidden="true">#</a> 安装 Homebrew</h3><h4 id="要求" tabindex="-1"><a class="header-anchor" href="#要求" aria-hidden="true">#</a> 要求</h4><ul><li>64-bit Intel CPU 或者 Apple Silicon CPU(苹果自己研发的CPU)</li><li>macOS版本为Mojave（10.14）或者以上</li><li>Xcode命令行工具（安装Command Line Tools）<br><code>安装xcode命令</code><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>xcode-select <span class="token parameter variable">--install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>支持shell (zsh或者bash) 在macOS 10.15 之后 默认shell是zsh<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看当前使用的shell</span>
<span class="token builtin class-name">echo</span> <span class="token environment constant">$SHELL</span>
<span class="token comment"># 查看所有的shell</span>
<span class="token function">cat</span> /etc/shells
<span class="token comment"># 修改默认shell为zsh</span>
chsh <span class="token parameter variable">-s</span> /bin/zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="安装和卸载" tabindex="-1"><a class="header-anchor" href="#安装和卸载" aria-hidden="true">#</a> 安装和卸载</h4><ul><li><p>安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拉脚本</span>
/bin/bash <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class="token variable">)</span></span>&quot;</span>
<span class="token comment"># 检查brew是否安装成功</span>
brew <span class="token builtin class-name">help</span>
<span class="token comment"># 替换brew.git</span>
<span class="token builtin class-name">cd</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>brew <span class="token parameter variable">--repo</span><span class="token variable">)</span></span>&quot;</span>
<span class="token function">git</span> remote set-url origin https://mirrors.ustc.edu.cn/brew.git
<span class="token comment"># homebrew-core.git</span>
<span class="token builtin class-name">cd</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>brew <span class="token parameter variable">--repo</span><span class="token variable">)</span></span>/Library/Taps/homebrew/homebrew-core&quot;</span>
<span class="token function">git</span> remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git
<span class="token comment"># 替换Bottles源</span>

<span class="token comment"># zsh</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc
<span class="token comment"># 全局配置</span>
<span class="token builtin class-name">source</span> ~/.zshrc

<span class="token comment"># bash</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.bash_profile
<span class="token builtin class-name">source</span> ~/.bash_profile

<span class="token comment"># 更新brew</span>
brew update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>卸载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/bin/bash <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong><code>tip:</code></strong> Homebrew 会将软件包安装到独立目录，并将其文件软链接至 <code>/usr/local</code></p></li></ul><h3 id="安装软件" tabindex="-1"><a class="header-anchor" href="#安装软件" aria-hidden="true">#</a> 安装软件</h3><p>当你完成了 Homebrew 以后，就可以使用 Homebrew 来完成软件的安装了，安装命令行软件的时候非常简单，只需要执行 <code>brew install [软件名]</code> 就可以安装软件了，比如说，我们要安装 wget，那么只需要执行 <code>brew install wget</code> 就可以了。</p><h3 id="搜索软件" tabindex="-1"><a class="header-anchor" href="#搜索软件" aria-hidden="true">#</a> 搜索软件</h3><p>很多时候，我们不知道自己想要的软件是否有，或者说具体的名字是什么，这个时候你有两种方式来完成搜索</p><h4 id="_1-使用命令搜索" tabindex="-1"><a class="header-anchor" href="#_1-使用命令搜索" aria-hidden="true">#</a> 1. 使用命令搜索</h4><p>在命令行中，你可以直接使用 <code>brew search [关键词]</code> 来进行搜索<br><img src="`+p+'" alt="关键字搜索" loading="lazy"></p>',21),H=e("h4",{id:"_2-使用网页搜索",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-使用网页搜索","aria-hidden":"true"},"#"),a(" 2. 使用网页搜索")],-1),C={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fformulae.brew.sh%2F",target:"_blank",rel:"noopener noreferrer"},E=e("br",null,null,-1),A=e("img",{src:u,alt:"img",loading:"lazy"},null,-1),L=e("figure",null,[e("img",{src:b,alt:"img",tabindex:"0",loading:"lazy"}),e("figcaption",null,"img")],-1),B=e("h3",{id:"查看已经安装的包",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#查看已经安装的包","aria-hidden":"true"},"#"),a(" 查看已经安装的包")],-1),D=e("p",null,[a("如果你想要查看你都安装了哪些包，你可以执行 "),e("code",null,"brew list"),a(" 命令，来查看所有你已经安装的软件。"),e("br"),e("img",{src:m,alt:"img",loading:"lazy"})],-1),j=e("h3",{id:"更新一个已经安装的包",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#更新一个已经安装的包","aria-hidden":"true"},"#"),a(" 更新一个已经安装的包")],-1),z=e("p",null,"我们安装的软件并不会自动更新，因此，我们可以根据自己的需求，批量更新软件，或者更新单个软件。",-1),O=e("p",null,[a("你可以先使用 "),e("code",null,"brew outdated"),a(" 来查看所有有更新版本的软件。")],-1),F=e("figure",null,[e("img",{src:h,alt:"img",tabindex:"0",loading:"lazy"}),e("figcaption",null,"img")],-1),S=e("h3",{id:"卸载某个已经安装的包",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#卸载某个已经安装的包","aria-hidden":"true"},"#"),a(" 卸载某个已经安装的包")],-1),M=e("p",null,[a("如果你想要卸载某个包，你可以执行 "),e("code",null,"brew uninstall [软件名]"),a(" 来卸载一个特定的软件，比如卸载 wget 是这样的。"),e("br"),e("img",{src:v,alt:"img",loading:"lazy"})],-1),J=e("h3",{id:"查看包的信息",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#查看包的信息","aria-hidden":"true"},"#"),a(" 查看包的信息")],-1),T=e("p",null,[a("如果你想要查看某个特定软件的信息，你可以执行命令 "),e("code",null,"brew info [软件名]"),a(" 来查看该软件的详情。"),e("br"),e("img",{src:g,alt:"img",loading:"lazy"})],-1),V=e("h3",{id:"清理软件的旧版",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#清理软件的旧版","aria-hidden":"true"},"#"),a(" 清理软件的旧版")],-1),$=e("p",null,[a("Homebrew 用久了，会有一些历史版本的软件遗留在系统里，这个时候，你可以使用 "),e("code",null,"brew cleanup"),a(" 命令来清理系统中所有软件的历史版本，或者可以使用 "),e("code",null,"brew cleanup [软件名]"),a("来清理特定软件的旧版。"),e("br"),e("img",{src:k,alt:"img",loading:"lazy"})],-1),N=r('<h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h3><h4 id="管理后台软件命令" tabindex="-1"><a class="header-anchor" href="#管理后台软件命令" aria-hidden="true">#</a> 管理后台软件命令</h4><blockquote><p>诸如 Nginx、MySQL 等软件，都是有一些服务端软件在后台运行，如果你希望对这些软件进行管理，可以使用 <code>brew services</code> 命令来进行管理</p></blockquote><ul><li><code>brew services list</code>: 查看所有服务</li><li><code>brew services run [服务名]</code>: 单次运行某个服务</li><li><code>brew services start [服务名]</code>: 运行某个服务，并设置开机自动运行。</li><li><code>brew services stop [服务名]</code>：停止某个服务</li><li><code>brew services restart</code>：重启某个服务</li></ul><h4 id="其他命令" tabindex="-1"><a class="header-anchor" href="#其他命令" aria-hidden="true">#</a> 其他命令</h4><ul><li><code>brew -v</code>: 查看homebrew版本</li><li><code>brew list</code>: 查看已安装的包</li><li><code>brew install packageName</code>: 安装某个软件</li><li><code>brew uninstall packageName</code>: 卸载某个软件</li><li><code>brew searck packageName</code>: 查找某个软件</li><li><code>brew info packageName</code>: 查看软件包的信息</li><li><code>brew update</code>: 更新homebrew</li><li><code>brew doctor</code>: 诊断homebrew</li><li><code>brew -h</code>: 查看帮助信息</li><li><code>brew cleanup</code>: 清理旧版本</li><li><code>brew upgrade </code>: 全部更新</li><li><code>brew upgrade packageName</code>: 更新指定包</li><li><code>brew outdated</code>: 查询可更新的包</li><li><code>brew install --cask packageName</code>: 安装 macOS 应用程序、字体和插件以及其他非开源软件</li><li><code>brew uninstall --cask packageName</code>: 卸载 macOS 应用程序、字体和插件以及其他非开源软件</li><li><code>brew tap</code>: 列出当前的存储库</li></ul><h3 id="检查-hombrew-环境" tabindex="-1"><a class="header-anchor" href="#检查-hombrew-环境" aria-hidden="true">#</a> 检查 Hombrew 环境</h3><p>如果你的 Hombrew 没有办法正常的工作，你可以执行 <code>brew doctor</code> 来开启 Homebrew 自带的检查，从而确认有哪些问题，并进行修复。<br><img src="'+w+'" alt="img" loading="lazy"></p>',8),P=r(`<h3 id="更新-homebrew" tabindex="-1"><a class="header-anchor" href="#更新-homebrew" aria-hidden="true">#</a> 更新 Homebrew</h3><p>Homebrew 经常会在执行命令的时候触发更新，不过如果你想要主动检查更新，可以执行 <code>brew update</code> 来唤起 Homebrew 的更新。</p><h3 id="添加一个新的-tap" tabindex="-1"><a class="header-anchor" href="#添加一个新的-tap" aria-hidden="true">#</a> 添加一个新的 tap</h3><p>homebrew 官方在安装的时候会有一些 tap 但是在使用时，依然会需要安装一些特殊的 tap ，这个时候，我们就要用到 tap 的命令来添加新的 tap.</p><p>在添加 tap 时，输入命令 <code>brew tap [user/repo]</code> ，就可以完成添加 tap 了</p><h2 id="常用-tap" tabindex="-1"><a class="header-anchor" href="#常用-tap" aria-hidden="true">#</a> 常用 tap</h2><p>在使用 homebrew 时，我们一般会添加几个常用的 tap，来确保我们有足够的软件来安装。</p><h3 id="_1-caskroom" tabindex="-1"><a class="header-anchor" href="#_1-caskroom" aria-hidden="true">#</a> 1. Caskroom</h3><p>Caskroom 是 Homebrew 下一个非常出名的 tap ，有了 caskroom，我们就可以安装一些有图形化界面的软件了，比如 VSCode、Typora 等软件。</p><p>使用起来也非常简单，最新版 Homebrew 中，你可以直接使用 <code>brew cask install [软件名]</code> 来安装特定的软件，homebrew 会自动安装 Caskroom。</p><h3 id="_2-homebrew-cask-fonts" tabindex="-1"><a class="header-anchor" href="#_2-homebrew-cask-fonts" aria-hidden="true">#</a> 2. homebrew-cask-fonts</h3><p>程序员难免要安装一些代码字体，这样才能更好的写代码，Homebrew 也提供了方便我们安装字体的 tap。</p><p>在使用时，你需要先添加对应的 tap ，然后执行安装即可了，比如我们要安装 source code pro ，只需要执行如下命令。</p><div class="language-undefined line-numbers-mode" data-ext="undefined"><pre class="language-undefined"><code>brew tap homebrew/cask-fonts
brew cask install font-source-code-pro
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用技巧" tabindex="-1"><a class="header-anchor" href="#使用技巧" aria-hidden="true">#</a> 使用技巧</h2><h3 id="切换国内的镜像源" tabindex="-1"><a class="header-anchor" href="#切换国内的镜像源" aria-hidden="true">#</a> 切换国内的镜像源</h3><p>Homebrew 默认使用的是国外的源，在下载时速度可能会比较慢。好在国内的清华大学和中科大提供了 Homebrew 的镜像源，我们可以很轻松的切换源，从而提升我们的下载速度。</p><h4 id="使用中科大的镜像" tabindex="-1"><a class="header-anchor" href="#使用中科大的镜像" aria-hidden="true">#</a> 使用中科大的镜像</h4><p>执行如下命令，即可切换为中科大的镜像</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>brew <span class="token parameter variable">--repo</span><span class="token variable">)</span></span>&quot;</span>
<span class="token function">git</span> remote set-url origin git://mirrors.ustc.edu.cn/brew.git
<span class="token builtin class-name">cd</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>brew <span class="token parameter variable">--repo</span><span class="token variable">)</span></span>/Library/Taps/homebrew/homebrew-core&quot;</span>
<span class="token function">git</span> remote set-url origin git://mirrors.ustc.edu.cn/homebrew-core.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用清华大学的镜像" tabindex="-1"><a class="header-anchor" href="#使用清华大学的镜像" aria-hidden="true">#</a> 使用清华大学的镜像</h4><p>执行如下命令，即可切换为清华大学的镜像</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token parameter variable">-C</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>brew <span class="token parameter variable">--repo</span><span class="token variable">)</span></span>&quot;</span> remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git

<span class="token function">git</span> <span class="token parameter variable">-C</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>brew <span class="token parameter variable">--repo</span> homebrew/core<span class="token variable">)</span></span>&quot;</span> remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-brewfile-完成环境迁移" tabindex="-1"><a class="header-anchor" href="#使用-brewfile-完成环境迁移" aria-hidden="true">#</a> 使用 Brewfile 完成环境迁移</h3><p>设备永久了，我们的电脑中会有大量的软件，如果你需要迁移环境，重新安装会是一个大麻烦，好在 Homebrew 本身为我们提供了一个非常好用的环境迁移的工具 —— Homebrew Bundle</p><p>你首先需要在之前的电脑中执行 <code>brew bundle dump</code> 来完成当前环境的导出,导出完成后，你会得到一个 <em>Brewfile</em>。</p><figure><img src="`+f+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>然后将 <em>Brewfile</em> 复制到新的电脑中，并执行 <code>brew bundle</code> 来开始安装的过程。</p><h3 id="使用网页搜索-caskroom-的软件" tabindex="-1"><a class="header-anchor" href="#使用网页搜索-caskroom-的软件" aria-hidden="true">#</a> 使用网页搜索 Caskroom 的软件</h3>',29),R={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fformulae.brew.sh%2Fcask%2F",target:"_blank",rel:"noopener noreferrer"},I=e("figure",null,[e("img",{src:x,alt:"img",tabindex:"0",loading:"lazy"}),e("figcaption",null,"img")],-1),U=e("p",null,"在这个页面，你可以看到所有被收录的页面，在命令行中输入对应的软件就可以安装了。",-1),K={href:"https://links.jianshu.com/go?to=http%3A%2F%2Fmacappstore.org%2F%EF%BC%8C%E5%9C%A8%E7%BD%91%E7%AB%99%E4%B8%AD%E8%BE%93%E5%85%A5%E4%BD%A0%E8%A6%81%E5%AE%89%E8%A3%85%E7%9A%84%E8%BD%AF%E4%BB%B6%EF%BC%8C%E7%82%B9%E5%87%BB%E6%90%9C%E7%B4%A2%EF%BC%8C%E5%9C%A8%E5%BC%B9%E5%87%BA%E7%9A%84%E9%A1%B5%E9%9D%A2%E4%B8%AD%EF%BC%8C%E6%9F%A5%E7%9C%8B%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97%E5%8D%B3%E5%8F%AF%E3%80%82",target:"_blank",rel:"noopener noreferrer"},G=e("br",null,null,-1),Q=e("img",{src:_,alt:"img",loading:"lazy"},null,-1),Y=r(`<h2 id="辅助软件" tabindex="-1"><a class="header-anchor" href="#辅助软件" aria-hidden="true">#</a> 辅助软件</h2><p>除了命令行，还有两款软件可以帮助我们更好的使用 Homebrew ，他们分别是 Cakebrew 和 launchrocket。</p><h3 id="cakebrew" tabindex="-1"><a class="header-anchor" href="#cakebrew" aria-hidden="true">#</a> Cakebrew</h3><p>Cakebrew 是 Homebrew 的 GUI 管理器，在 Cakebrew 中，你可以看到当前所有已经安装的软件，并可以在 Caskbrew 中对其他软件执行升级等操作。</p><p>你只需要执行 <code>brew cask install cakebrew</code> 就可以完成 Cakebrew 的安装。</p><p>安装完成后，在 LaunchPad 中打开即可。</p><h3 id="launchrocket" tabindex="-1"><a class="header-anchor" href="#launchrocket" aria-hidden="true">#</a> launchrocket</h3><p>launchrocket 可以用于管理 Homebrew 安装的服务，在使用时，你需要先添加对应的tap，然后再安装软件。</p><div class="language-undefined line-numbers-mode" data-ext="undefined"><pre class="language-undefined"><code>brew tap jimbojsb/launchrocket
brew cask install launchrocket
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>安装完成后，在 LaunchPad 中打开即可。</p><h2 id="安装配置开发环境" tabindex="-1"><a class="header-anchor" href="#安装配置开发环境" aria-hidden="true">#</a> 安装配置开发环境</h2><h3 id="jdk的安装与环境变量的配置" tabindex="-1"><a class="header-anchor" href="#jdk的安装与环境变量的配置" aria-hidden="true">#</a> JDK的安装与环境变量的配置</h3><h4 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h4><ul><li>搜索软件</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew  search adoptopenjdk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>安装软件 <ul><li>安装源（我使用的是第二个） <ul><li>homebrew/cask-versions/adoptopenjdk8</li><li>adoptopenjdk/openjdk/adoptopenjdk8</li></ul></li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> <span class="token parameter variable">--cask</span> adoptopenjdk/openjdk/adoptopenjdk8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>安装完毕后，输入下面的指令</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看java版本号</span>
<span class="token function">java</span> <span class="token parameter variable">-version</span>
<span class="token comment"># 回显版本号的相关信息</span>
openjdk version <span class="token string">&quot;1.8.0_292&quot;</span>
OpenJDK Runtime Environment <span class="token punctuation">(</span>AdoptOpenJDK<span class="token punctuation">)</span><span class="token punctuation">(</span>build <span class="token number">1.8</span>.0_292-b10<span class="token punctuation">)</span>
OpenJDK <span class="token number">64</span>-Bit Server VM <span class="token punctuation">(</span>AdoptOpenJDK<span class="token punctuation">)</span><span class="token punctuation">(</span>build <span class="token number">25.292</span>-b10, mixed mode<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="环境变量的配置" tabindex="-1"><a class="header-anchor" href="#环境变量的配置" aria-hidden="true">#</a> 环境变量的配置</h4><ul><li>查看jdk安装地址</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看地址</span>
/usr/libexec/java_home
<span class="token comment"># 回显</span>
Matching Java Virtual Machines <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>:
    <span class="token number">1.8</span>.0_292 <span class="token punctuation">(</span>x86_64<span class="token punctuation">)</span> <span class="token string">&quot;AdoptOpenJDK&quot;</span> - <span class="token string">&quot;AdoptOpenJDK 8&quot;</span> /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home
/Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>从终端输出结果可以得出：JAVA_HOME路径</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查看是否配置了环境变量</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token variable">$JAVA_HOME</span>
如果出现空白，说明还没有配置
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置环境变量（在.zshrc添加下面几行）</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>/usr/libexec/java_home<span class="token variable">)</span></span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token environment constant">$PATH</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">CLASS_PATH</span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/lib
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使修改的文件生效</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查看环境变量是否生效</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token variable">$JAVA_HOME</span>
如果出现空白，说明还没有生效

<span class="token comment"># 如果能正确输出Java安装目录，则说明配置已生效</span>
/Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maven的安装" tabindex="-1"><a class="header-anchor" href="#maven的安装" aria-hidden="true">#</a> maven的安装</h3><ul><li>brew查找maven版本</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew search maven
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> maven@3.5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>maven在zsh环境变量配置，安装完了有提示的，直接复制就行</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;export PATH=&quot;/usr/local/opt/maven@3.5/bin:$PATH&quot;&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查看是否安装成功</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看是否安装成功</span>
mvn <span class="token parameter variable">-v</span>
<span class="token comment"># 回显</span>
Maven home: /usr/local/Cellar/maven@3.5/3.5.4_1/libexec
Java version: <span class="token number">1.8</span>.0_292, vendor: AdoptOpenJDK, runtime: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/jre
Default locale: zh_CN, platform encoding: UTF-8
OS name: <span class="token string">&quot;mac os x&quot;</span>, version: <span class="token string">&quot;10.16&quot;</span>, arch: <span class="token string">&quot;x86_64&quot;</span>, family: <span class="token string">&quot;mac&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="git的安装" tabindex="-1"><a class="header-anchor" href="#git的安装" aria-hidden="true">#</a> git的安装</h3><ul><li>brew 查找git版本</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew search <span class="token function">git</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>brew 安装Git</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> <span class="token function">git</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>安装完毕后查看版本号</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看git的版本号</span>
<span class="token function">git</span> <span class="token parameter variable">--verison</span>
<span class="token comment"># 回显</span>
<span class="token function">git</span> version <span class="token number">2.33</span>.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="node的安装" tabindex="-1"><a class="header-anchor" href="#node的安装" aria-hidden="true">#</a> node的安装</h3><ul><li>brew 查找node版本</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew search <span class="token function">node</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>brew 安装node</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> node@12
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>node在zsh环境变量配置，安装完了有提示的，直接复制就行</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;export PATH=&quot;/usr/local/opt/node@12/bin:$PATH&quot;&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>配置npm</li></ul><blockquote><p>遇到过 cnpm 的 bug，所以不适用 cnpm，直接配置淘宝镜像</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org <span class="token parameter variable">--global</span>
<span class="token function">npm</span> config <span class="token builtin class-name">set</span> disturl https://npm.taobao.org/dist <span class="token parameter variable">--global</span>

<span class="token comment"># 查看镜像源是否配置成功</span>
<span class="token function">npm</span> config get registry
<span class="token function">npm</span> config get disturl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mysql的安装" tabindex="-1"><a class="header-anchor" href="#mysql的安装" aria-hidden="true">#</a> mysql的安装</h3><ul><li>brew查找mysql版本</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew search mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> mysql@5.7
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>开机自动启动</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew services start mysql@5.7

<span class="token comment"># 如果你不想/不需要后台服务，你可以运行:</span>
/usr/local/opt/mysql@5.7/bin/mysqld_safe <span class="token parameter variable">--datadir</span><span class="token operator">=</span>/usr/local/var/mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>mysql在zsh环境变量配置，安装完了有提示的，直接复制就行</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;/usr/local/opt/mysql@5.7/bin:<span class="token environment constant">$PATH</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>连接mysql，root用户无初始密码，直接回车</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span>

ERROR <span class="token number">2002</span> <span class="token punctuation">(</span>HY000<span class="token punctuation">)</span>: Can<span class="token string">&#39;t connect to local MySQL server through socket &#39;</span>/tmp/mysql.sock&#39; <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>  ---这个情况是mysql还没有被启动
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>设置root用户初始密码，为&#39;root&#39;</li></ul><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>set password for &#39;root&#39;@&#39;localhost&#39; = &#39;root&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>mysql创建新的用户（必须在root用户下执行）</li></ul><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>// 语句
CREATE USER &#39;用户名&#39;@&#39;ip&#39; IDENTIFIED BY &#39;密码&#39;;
// 样列
CREATE USER &#39;wangfeng&#39;@&#39;LOCALHOST&#39; IDENTIFIED BY &#39;wangfeng&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>mysql新用户赋予权限（必须在root用户下执行）</li></ul><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>grant 权限 on *.* to &#39;用户&#39;@&#39;ip&#39;; //  *.* 代表所有库下的所有表

// 比如给该用户下所有的库赋予查询的权限
grant select on *.* to &#39;用户&#39;@&#39;ip&#39;;

// 给用户赋予crud的权限
grant select,delete,update,create,drop on *.* to &#39;wangfeng&#39;@&#39;localhost&#39; identified by &quot;wangfeng&quot;;

// 赋予所有的权限
grant all privileges on *.* to &#39;用户&#39;@&#39;ip&#39;;

赋权限后记得刷新： flush privileges;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>mysql 删除权限</li></ul><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>// 查看用户的权限
show grants for &#39;wangfeng&#39;@&#39;localhost&#39;;

// 删除用户的权限
revoke all privileges on *.* from &#39;用户&#39;@&#39;ip&#39;;

// 刷新权限
flush privileges;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>删除用户</li></ul><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code># 要查看MySQL服务器中的数据库:mysql的所有用户信息
USE mysql;
SELECT user, host FROM mysql.user;

# 假设您要删除用户帐户：\`wangfeng\`，请使用以下语句：
1、DROP USER &#39;wangfeng&#39;;
2、再次从[mysql.user]表中查询数据，您将看到用户ip@localhost已被删除。

# 要删除数据库中的两个用户：remote_user和auditor的帐户，请使用以下语句：
DROP USER user1, user2;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2>`,80),W={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fbrew.sh",target:"_blank",rel:"noopener noreferrer"},X={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FHomebrew%2Fbrew",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fdocs.brew.sh%2FManpage",target:"_blank",rel:"noopener noreferrer"};function ee(ae,se){const n=t("center"),l=t("ExternalLinkIcon");return o(),c("div",null,[q,s(n,{style:{"font-size":"14px",color:"#C0C0C0","padding-bottom":"5px","line-height":"0.9"}},{default:i(()=>[a("搜索软件")]),_:1}),a(" > 命令行搜索软件 输入你想要的关键词，来搜索即可得到结果。 > 在搜索时应当遵循宁可少字，不能错字的原则来搜索。 "),H,e("p",null,[a("除了使用命令行搜索以外，你可以使用网页端的搜索工具来辅助你进行搜索。在 Homebrew 的官网，你可以找到 formulae 的链接，或者直接访问 "),e("a",C,[a("https://formulae.brew.sh/"),s(l)]),a(" 来进行搜索。你只需要在界面的输入框中输入你要搜索的命令，然后就会出现对应的候选命令"),E,A]),s(n,{style:{"font-size":"14px",color:"#C0C0C0","padding-bottom":"5px","line-height":"0.9"}},{default:i(()=>[a("搜索软件")]),_:1}),a(" 选择其中你要使用的那个，点击就会进入到软件的介绍页面 "),L,s(n,{style:{"font-size":"14px",color:"#C0C0C0","padding-bottom":"5px","line-height":"0.9"}},{default:i(()=>[a("查看软件介绍")]),_:1}),a(" 你就可以看到 Homebrew 中的软件具体信息。 "),B,D,s(n,{style:{"font-size":"14px",color:"#C0C0C0","padding-bottom":"5px","line-height":"0.9"}},{default:i(()=>[a("查看所有软件")]),_:1}),j,z,O,F,s(n,{style:{"font-size":"14px",color:"#C0C0C0","padding-bottom":"5px","line-height":"0.9"}},{default:i(()=>[a("查看需要更新的软件")]),_:1}),a(" 然后使用 `brew upgrade` 来更新所有的软件，或者是使用 `brew upgrade [软件名]`来更新单个软件。 "),S,M,s(n,{style:{"font-size":"14px",color:"#C0C0C0","padding-bottom":"5px","line-height":"0.9"}},{default:i(()=>[a("卸载某个已经安装的包")]),_:1}),J,T,s(n,{style:{"font-size":"14px",color:"#C0C0C0","padding-bottom":"5px","line-height":"0.9"}},{default:i(()=>[a("查看包的信息")]),_:1}),V,$,s(n,{style:{"font-size":"14px",color:"#C0C0C0","padding-bottom":"5px","line-height":"0.9"}},{default:i(()=>[a("清理软件的旧版")]),_:1}),N,s(n,{style:{"font-size":"14px",color:"#C0C0C0","padding-bottom":"5px","line-height":"0.9"}},{default:i(()=>[a("检查 Hombrew 环境")]),_:1}),P,e("p",null,[a("Brew Caskroom 并没有提供搜索的命令，不过我们可以借助一些网站来进行搜索，一个是 Homebrew 官方的 Caskrrom 页面："),e("a",R,[a("https://formulae.brew.sh/cask/"),s(l)])]),I,U,e("p",null,[a("你也可以访问 "),e("a",K,[a("http://macappstore.org/，在网站中输入你要安装的软件，点击搜索，在弹出的页面中，查看安装指南即可。"),s(l)]),G,Q]),Y,e("ul",null,[e("li",null,[a("Homebrew 官网："),e("a",W,[a("https://brew.sh"),s(l)])]),e("li",null,[a("Homebrew Github："),e("a",X,[a("https://github.com/Homebrew/brew"),s(l)])]),e("li",null,[a("Homebrew 的 Manpage 说明书："),e("a",Z,[a("https://docs.brew.sh/Manpage"),s(l)])])])])}const le=d(y,[["render",ee],["__file","Homebrew.html.vue"]]);export{le as default};
