const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const d=o[h-1];d<=s&&n.set(r,[e.get(c),d])}else{let d=u;for(let l=0;l<c.length;++l,++d){const p=c[l],f=i*d,g=f-i;let a=o[f];const m=Math.max(0,d-s-1),y=Math.min(i-1,d+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<a&&(a=L)}if(a>s)continue t}W(e.get(c),t,s,n,o,d,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const d=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const a of p.keys()){if(!e._documentIds.has(a)){gt(e,l,a,s),f-=1;continue}const m=i?i(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!m)continue;const y=p.get(a),_=e._fieldLength.get(a)[l],b=at(y,f,e._documentCount,_,g,r),z=n*d*m*b,A=h.get(a);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(a,{score:z,terms:[t],match:{[s]:[c]}})}}return h},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((a,m)=>({...a,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:d}={...J.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const a=t.fuzzy===!0?.2:t.fuzzy,m=a<1?Math.min(r,Math.round(t.term.length*a)):a;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[a,m]of f){const y=a.length-t.term.length;if(!y)continue;g==null||g.delete(a);const _=d*a.length/(a.length+.3*y);B(e,t.term,a,_,m,o,u,h,p)}if(g)for(const a of g.keys()){const[m,y]=g.get(a);if(!y)continue;const _=c*a.length/(a.length+y);B(e,t.term,a,_,m,o,u,h,p)}return p},X=(e,t,s={})=>{if(typeof t!="string"){const d={...s,...t,queries:void 0},l=t.queries.map(p=>X(e,p,d));return Y(l,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>At(e,d,i));return Y(c,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,d={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(d,e._storedFields.get(u)),(s.filter==null||s.filter(d))&&o.push(d)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},d)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new Et(d);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const a of Object.keys(f)){let m=f[a];c===1&&(m=m.ds),g.set(parseInt(a,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,d=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:d?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[d,l]=u.split(/[#@]/),{contents:p}=n[d]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:d,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:d,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const a=i.map(m=>j(g,m)).filter(m=>m!==null);a.length&&p.push([{type:"text",key:d,...c&&{anchor:l},display:a},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":301,\"nextId\":301,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-8daa1a0e#helloworld\",\"2\":\"v-f9f49dee\",\"3\":\"v-f9f49dee#创建部署脚本deploy-sh\",\"4\":\"v-f9f49dee#添加命令-package-josn\",\"5\":\"v-f9f49dee#运行发布命令\",\"6\":\"v-05754df9\",\"7\":\"v-05754df9#_1、关机、重启\",\"8\":\"v-f219de16\",\"9\":\"v-f219de16#homebrew介绍\",\"10\":\"v-f219de16#homebrew-的几个核心概念\",\"11\":\"v-f219de16#homebrew-常用操作\",\"12\":\"v-f219de16#安装-homebrew\",\"13\":\"v-f219de16#要求\",\"14\":\"v-f219de16#安装和卸载\",\"15\":\"v-f219de16#安装软件\",\"16\":\"v-f219de16#搜索软件\",\"17\":\"v-f219de16#_1-使用命令搜索\",\"18\":\"v-f219de16#_2-使用网页搜索\",\"19\":\"v-f219de16#查看已经安装的包\",\"20\":\"v-f219de16#更新一个已经安装的包\",\"21\":\"v-f219de16#卸载某个已经安装的包\",\"22\":\"v-f219de16#查看包的信息\",\"23\":\"v-f219de16#清理软件的旧版\",\"24\":\"v-f219de16#常用命令\",\"25\":\"v-f219de16#管理后台软件命令\",\"26\":\"v-f219de16#其他命令\",\"27\":\"v-f219de16#检查-hombrew-环境\",\"28\":\"v-f219de16#更新-homebrew\",\"29\":\"v-f219de16#添加一个新的-tap\",\"30\":\"v-f219de16#常用-tap\",\"31\":\"v-f219de16#_1-caskroom\",\"32\":\"v-f219de16#_2-homebrew-cask-fonts\",\"33\":\"v-f219de16#使用技巧\",\"34\":\"v-f219de16#切换国内的镜像源\",\"35\":\"v-f219de16#使用中科大的镜像\",\"36\":\"v-f219de16#使用清华大学的镜像\",\"37\":\"v-f219de16#使用-brewfile-完成环境迁移\",\"38\":\"v-f219de16#使用网页搜索-caskroom-的软件\",\"39\":\"v-f219de16#辅助软件\",\"40\":\"v-f219de16#cakebrew\",\"41\":\"v-f219de16#launchrocket\",\"42\":\"v-f219de16#安装配置开发环境\",\"43\":\"v-f219de16#jdk的安装与环境变量的配置\",\"44\":\"v-f219de16#安装\",\"45\":\"v-f219de16#环境变量的配置\",\"46\":\"v-f219de16#maven的安装\",\"47\":\"v-f219de16#git的安装\",\"48\":\"v-f219de16#node的安装\",\"49\":\"v-f219de16#mysql的安装\",\"50\":\"v-f219de16#reference\",\"51\":\"v-c45030de\",\"52\":\"v-c45030de#intellij-idea\",\"53\":\"v-c45030de#安装之后\",\"54\":\"v-c45030de#ide激活\",\"55\":\"v-42771080\",\"56\":\"v-42771080#快捷键设置\",\"57\":\"v-2a5b08ff\",\"58\":\"v-2a5b08ff#windows-常用快捷键\",\"59\":\"v-2a5b08ff#macos常用快捷键\",\"60\":\"v-4dcc2779\",\"61\":\"v-4dcc2779#idea-常用插件\",\"62\":\"v-4dcc2779#其它的一些不怎么用的插件\",\"63\":\"v-61628310\",\"64\":\"v-61628310#git配置\",\"65\":\"v-61628310#解决git提交代码每次输入帐号密码问题\",\"66\":\"v-3ef6fe20\",\"67\":\"v-3ef6fe20#jdk配置\",\"68\":\"v-97bbcc16\",\"69\":\"v-97bbcc16#maven配置\",\"70\":\"v-ff4ab46c\",\"71\":\"v-ff4ab46c#gradle配置\",\"72\":\"v-ff4ab46c#gradle-user-home\",\"73\":\"v-ff4ab46c#控制台中文乱码\",\"74\":\"v-f36190ec\",\"75\":\"v-f36190ec#java新运行项目配置\",\"76\":\"v-277bf008\",\"77\":\"v-277bf008#开发规范\",\"78\":\"v-277bf008#代码规范-code-style\",\"79\":\"v-277bf008#google\",\"80\":\"v-277bf008#阿里\",\"81\":\"v-277bf008#阿里巴巴java开发手册\",\"82\":\"v-277bf008#自动格式化代码ctrl-s\",\"83\":\"v-34be096a\",\"84\":\"v-34be096a#编码设置\",\"85\":\"v-61aa4976\",\"86\":\"v-61aa4976#自动导入\",\"87\":\"v-e73a60c2\",\"88\":\"v-e73a60c2#代码自动编译\",\"89\":\"v-21bb0762\",\"90\":\"v-21bb0762#代码模板\",\"91\":\"v-21bb0762#方法头注释\",\"92\":\"v-21bb0762#类注释\",\"93\":\"v-21bb0762#junit4测试方法\",\"94\":\"v-21bb0762#switch-case\",\"95\":\"v-21bb0762#vue打印日志\",\"96\":\"v-21bb0762#shell注释\",\"97\":\"v-21bb0762#intellij-idea设置新建类时-自动注释作者信息和日期\",\"98\":\"v-3b3c9753\",\"99\":\"v-3b3c9753#光标放在需要注释的-类-方法-属性-上-ctrl-自动添加注释\",\"100\":\"v-3b3c9753#自定义注释模板\",\"101\":\"v-94366c48\",\"102\":\"v-3af043a0\",\"103\":\"v-3af043a0#导入导出配置\",\"104\":\"v-15c3065b\",\"105\":\"v-15c3065b#jvm参数设置\",\"106\":\"v-6f1ee3eb\",\"107\":\"v-6f1ee3eb#问题\",\"108\":\"v-6f1ee3eb#解决\",\"109\":\"v-6f1ee3eb#法一\",\"110\":\"v-6f1ee3eb#法二\",\"111\":\"v-ecc30b66\",\"112\":\"v-ecc30b66#运行反代理工具\",\"113\":\"v-106face5\",\"114\":\"v-828f00cc\",\"115\":\"v-828f00cc#基础\",\"116\":\"v-828f00cc#字段断点\",\"117\":\"v-828f00cc#异常断点\",\"118\":\"v-828f00cc#方法断点\",\"119\":\"v-828f00cc#手动制造抛出异常\",\"120\":\"v-828f00cc#强制返回\",\"121\":\"v-828f00cc#stream调试\",\"122\":\"v-828f00cc#线程调试\",\"123\":\"v-b0e60d34\",\"124\":\"v-b0e60d34#debug跳过class文件\",\"125\":\"v-8764d55a\",\"126\":\"v-16ecbad6\",\"127\":\"v-16ecbad6#iterm2介绍\",\"128\":\"v-16ecbad6#配置iterm2-主题\",\"129\":\"v-16ecbad6#设置iterm2背景图片\",\"130\":\"v-16ecbad6#配置-oh-my-zsh\",\"131\":\"v-16ecbad6#安装oh-my-zsh\",\"132\":\"v-16ecbad6#步骤一\",\"133\":\"v-16ecbad6#步骤二\",\"134\":\"v-16ecbad6#配置oh-my-zsh\",\"135\":\"v-16ecbad6#卸载oh-my-zsh\",\"136\":\"v-16ecbad6#插件\",\"137\":\"v-16ecbad6#高亮显示\",\"138\":\"v-16ecbad6#自动补全插件\",\"139\":\"v-16ecbad6#设置vim可配色\",\"140\":\"v-16ecbad6#iterm2-快捷键\",\"141\":\"v-ce626032\",\"142\":\"v-ce626032#局部变量类型推断-var\",\"143\":\"v-ce626032#垃圾回收器接口\",\"144\":\"v-ce626032#g1-并行-full-gc\",\"145\":\"v-ce626032#集合增强\",\"146\":\"v-ce626032#optional-增强\",\"147\":\"v-ce626032#应用程序类数据共享-扩展-cds-功能\",\"148\":\"v-ce626032#实验性的基于-java-的-jit-编译器\",\"149\":\"v-ce626032#其他\",\"150\":\"v-ce626032#参考\",\"151\":\"v-caf8aef4\",\"152\":\"v-caf8aef4#http-client-标准化\",\"153\":\"v-caf8aef4#string-增强\",\"154\":\"v-caf8aef4#optional-增强\",\"155\":\"v-caf8aef4#zgc-可伸缩低延迟垃圾收集器\",\"156\":\"v-caf8aef4#lambda-参数的局部变量语法\",\"157\":\"v-caf8aef4#启动单文件源代码程序\",\"158\":\"v-caf8aef4#其他新特性\",\"159\":\"v-caf8aef4#参考\",\"160\":\"v-5bc1ef5e\",\"161\":\"v-5bc1ef5e#java12\",\"162\":\"v-5bc1ef5e#string-增强\",\"163\":\"v-5bc1ef5e#files-增强-文件比较\",\"164\":\"v-5bc1ef5e#数字格式化工具类\",\"165\":\"v-5bc1ef5e#shenandoah-gc\",\"166\":\"v-5bc1ef5e#g1-收集器优化\",\"167\":\"v-5bc1ef5e#预览新特性\",\"168\":\"v-5bc1ef5e#增强-switch\",\"169\":\"v-5bc1ef5e#instanceof-模式匹配\",\"170\":\"v-5bc1ef5e#java13\",\"171\":\"v-5bc1ef5e#增强-zgc-释放未使用内存\",\"172\":\"v-5bc1ef5e#socketapi-重构\",\"173\":\"v-5bc1ef5e#filesystems\",\"174\":\"v-5bc1ef5e#动态-cds-存档\",\"175\":\"v-5bc1ef5e#预览新特性-1\",\"176\":\"v-5bc1ef5e#文本块\",\"177\":\"v-5bc1ef5e#增强-switch-引入-yield-关键字到-switch-中\",\"178\":\"v-5bc1ef5e#补充\",\"179\":\"v-5bc1ef5e#关于预览特性\",\"180\":\"v-5bc1ef5e#jvm-虚拟机优化\",\"181\":\"v-5bc1ef5e#参考\",\"182\":\"v-f09702c4\",\"183\":\"v-f09702c4#java14\",\"184\":\"v-f09702c4#空指针异常精准提示\",\"185\":\"v-f09702c4#switch-的增强-转正\",\"186\":\"v-f09702c4#预览新特性\",\"187\":\"v-f09702c4#record-关键字\",\"188\":\"v-f09702c4#文本块\",\"189\":\"v-f09702c4#instanceof-增强\",\"190\":\"v-f09702c4#其他\",\"191\":\"v-f09702c4#java15\",\"192\":\"v-f09702c4#charsequence\",\"193\":\"v-f09702c4#treemap\",\"194\":\"v-f09702c4#zgc-转正\",\"195\":\"v-f09702c4#eddsa-数字签名算法\",\"196\":\"v-f09702c4#文本块-转正\",\"197\":\"v-f09702c4#隐藏类-hidden-classes\",\"198\":\"v-f09702c4#预览新特性-1\",\"199\":\"v-f09702c4#密封类\",\"200\":\"v-f09702c4#instanceof-模式匹配\",\"201\":\"v-f09702c4#其他-1\",\"202\":\"v-b9e838be\",\"203\":\"v-b9e838be#jep-338-向量-api-第一次孵化\",\"204\":\"v-b9e838be#jep-347-启用-c-14-语言特性\",\"205\":\"v-b9e838be#jep-376-zgc-并发线程堆栈处理\",\"206\":\"v-b9e838be#jep-387-弹性元空间\",\"207\":\"v-b9e838be#jep-390-对基于值的类发出警告\",\"208\":\"v-b9e838be#jep-392-打包工具\",\"209\":\"v-b9e838be#jep-393-外部内存访问-api-第三次孵化\",\"210\":\"v-b9e838be#jep-394-instanceof-模式匹配-转正\",\"211\":\"v-b9e838be#jep-395-记录类型-转正\",\"212\":\"v-b9e838be#jep-396-默认强封装-jdk-内部元素\",\"213\":\"v-b9e838be#jep-397-密封类-预览\",\"214\":\"v-b9e838be#其他优化与改进\",\"215\":\"v-b9e838be#参考文献\",\"216\":\"v-b67e8780\",\"217\":\"v-b67e8780#jep-356-增强的伪随机数生成器\",\"218\":\"v-b67e8780#jep-398-弃用-applet-api-以进行删除\",\"219\":\"v-b67e8780#jep-406-switch-的类型匹配-预览\",\"220\":\"v-b67e8780#jep-407-删除远程方法调用激活机制\",\"221\":\"v-b67e8780#jep-409-密封类-转正\",\"222\":\"v-b67e8780#jep-410-删除实验性的-aot-和-jit-编译器\",\"223\":\"v-b67e8780#jep-411-弃用安全管理器以进行删除\",\"224\":\"v-b67e8780#jep-412-外部函数和内存-api-孵化\",\"225\":\"v-b67e8780#jep-414-向量-api-第二次孵化\",\"226\":\"v-b314d642\",\"227\":\"v-b314d642#jep-400-默认字符集为-utf-8\",\"228\":\"v-b314d642#jep-408-简易的-web-服务器\",\"229\":\"v-b314d642#jep-413-优化-java-api-文档中的代码片段\",\"230\":\"v-b314d642#jep-416-使用方法句柄重新实现反射核心\",\"231\":\"v-b314d642#jep-417-向量-api-第三次孵化\",\"232\":\"v-b314d642#jep-418-互联网地址解析-spi\",\"233\":\"v-b314d642#jep-419-foreign-function-memory-api-第二次孵化\",\"234\":\"v-afab2504\",\"235\":\"v-afab2504#jep-424-外部函数和内存-api-预览\",\"236\":\"v-afab2504#jep-425-虚拟线程-预览\",\"237\":\"v-afab2504#jep-426-向量-api-第四次孵化\",\"238\":\"v-afab2504#jep-428-结构化并发-孵化\",\"239\":\"v-6495e9b0\",\"240\":\"v-6495e9b0#jep-429-作用域值-第一次孵化\",\"241\":\"v-6495e9b0#jep-432-记录模式-第二次预览\",\"242\":\"v-6495e9b0#jep-433-switch-模式匹配-第四次预览\",\"243\":\"v-6495e9b0#jep-434-外部函数和内存-api-第二次预览\",\"244\":\"v-6495e9b0#jep-436-虚拟线程-第二次预览\",\"245\":\"v-6495e9b0#jep-437-结构化并发-第二次孵化\",\"246\":\"v-6495e9b0#jep-432-向量-api-第五次孵化\",\"247\":\"v-089c1c34\",\"248\":\"v-089c1c34#interface\",\"249\":\"v-089c1c34#functional-interface-函数式接口\",\"250\":\"v-089c1c34#lambda-表达式\",\"251\":\"v-089c1c34#语法格式\",\"252\":\"v-089c1c34#lambda-实战\",\"253\":\"v-089c1c34#替代匿名内部类\",\"254\":\"v-089c1c34#集合迭代\",\"255\":\"v-089c1c34#方法的引用\",\"256\":\"v-089c1c34#访问变量\",\"257\":\"v-089c1c34#stream\",\"258\":\"v-089c1c34#流类型\",\"259\":\"v-089c1c34#常用方法\",\"260\":\"v-089c1c34#实战\",\"261\":\"v-089c1c34#延迟执行\",\"262\":\"v-089c1c34#小结\",\"263\":\"v-089c1c34#optional\",\"264\":\"v-089c1c34#如何创建一个-optional\",\"265\":\"v-089c1c34#判断-value-是否为-null\",\"266\":\"v-089c1c34#获取-value\",\"267\":\"v-089c1c34#过滤值\",\"268\":\"v-089c1c34#小结-1\",\"269\":\"v-089c1c34#date-time-api\",\"270\":\"v-089c1c34#java-time-主要类\",\"271\":\"v-089c1c34#格式化\",\"272\":\"v-089c1c34#字符串转日期格式\",\"273\":\"v-089c1c34#日期计算\",\"274\":\"v-089c1c34#获取指定日期\",\"275\":\"v-089c1c34#jdbc-和-java8\",\"276\":\"v-089c1c34#时区\",\"277\":\"v-089c1c34#小结-2\",\"278\":\"v-089c1c34#总结\",\"279\":\"v-0a50f4d3\",\"280\":\"v-0a50f4d3#jshell\",\"281\":\"v-0a50f4d3#模块化系统\",\"282\":\"v-0a50f4d3#g1-成为默认垃圾回收器\",\"283\":\"v-0a50f4d3#快速创建不可变集合\",\"284\":\"v-0a50f4d3#string-存储结构优化\",\"285\":\"v-0a50f4d3#接口私有方法\",\"286\":\"v-0a50f4d3#try-with-resources-增强\",\"287\":\"v-0a50f4d3#stream-optional-增强\",\"288\":\"v-0a50f4d3#进程-api\",\"289\":\"v-0a50f4d3#响应式流-reactive-streams\",\"290\":\"v-0a50f4d3#变量句柄\",\"291\":\"v-0a50f4d3#其它\",\"292\":\"v-0a50f4d3#参考\",\"293\":\"v-72a9c1e2\",\"294\":\"v-1a3d5e90\",\"295\":\"v-13890ae3\",\"296\":\"v-1891b76b\",\"297\":\"v-c51458e6\",\"298\":\"v-32a55787\",\"299\":\"v-b99b0d9e\",\"300\":\"v-14c69af4\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2],\"1\":[1],\"2\":[1],\"3\":[2,47],\"4\":[4,9],\"5\":[1,6],\"6\":[1],\"7\":[3],\"8\":[1,31],\"9\":[1,20],\"10\":[2,45],\"11\":[2],\"12\":[2],\"13\":[1,39],\"14\":[1,58],\"15\":[1,17],\"16\":[1,4],\"17\":[2,13],\"18\":[2,21],\"19\":[1,7],\"20\":[1,19],\"21\":[1,10],\"22\":[1,7],\"23\":[1,12],\"24\":[1],\"25\":[1,22],\"26\":[1,35],\"27\":[3,12],\"28\":[2,9],\"29\":[2,16],\"30\":[2,7],\"31\":[2,24],\"32\":[4,20],\"33\":[1],\"34\":[1,8],\"35\":[1,20],\"36\":[1,20],\"37\":[3,22],\"38\":[3,27],\"39\":[1,8],\"40\":[1,23],\"41\":[1,17],\"42\":[1],\"43\":[1],\"44\":[1,37],\"45\":[1,52],\"46\":[1,66],\"47\":[1,15],\"48\":[1,41],\"49\":[1,120],\"50\":[1,12],\"51\":[2],\"52\":[2,5],\"53\":[1,21],\"54\":[1,1],\"55\":[1],\"56\":[1,21],\"57\":[1],\"58\":[2,70],\"59\":[1,15],\"60\":[1],\"61\":[2,444],\"62\":[1,71],\"63\":[1],\"64\":[1,19],\"65\":[1,12],\"66\":[1],\"67\":[1,14],\"68\":[1],\"69\":[1,12],\"70\":[1],\"71\":[1],\"72\":[3,34],\"73\":[1,16],\"74\":[1],\"75\":[1,28],\"76\":[1],\"77\":[1],\"78\":[3,5],\"79\":[1,6],\"80\":[1,8],\"81\":[1,1],\"82\":[4,14],\"83\":[1],\"84\":[1,11],\"85\":[1],\"86\":[1,11],\"87\":[1],\"88\":[1,5],\"89\":[1],\"90\":[1,6],\"91\":[1,54],\"92\":[1,22],\"93\":[1,11],\"94\":[2,11],\"95\":[1,8],\"96\":[1,26],\"97\":[3,44],\"98\":[1],\"99\":[7,7],\"100\":[1,12],\"101\":[1,12],\"102\":[1],\"103\":[1,9],\"104\":[1],\"105\":[1,13],\"106\":[1],\"107\":[1,63],\"108\":[1],\"109\":[2,5],\"110\":[2,13],\"111\":[1],\"112\":[1,25],\"113\":[1,16],\"114\":[2],\"115\":[1,51],\"116\":[1,5],\"117\":[1,5],\"118\":[1,9],\"119\":[1,3],\"120\":[1,1],\"121\":[1,3],\"122\":[1,1],\"123\":[1],\"124\":[1,22],\"125\":[1,17],\"126\":[1,1],\"127\":[1,30],\"128\":[2,39],\"129\":[1,14],\"130\":[4],\"131\":[3],\"132\":[1,19],\"133\":[1,42],\"134\":[3,19],\"135\":[3,8],\"136\":[1,6],\"137\":[1,40],\"138\":[1,21],\"139\":[1,10],\"140\":[2,41],\"141\":[3,39],\"142\":[3,76],\"143\":[1,10],\"144\":[4,24],\"145\":[1,44],\"146\":[2,19],\"147\":[5,43],\"148\":[5,46],\"149\":[1,19],\"150\":[1,39],\"151\":[3,50],\"152\":[3,60],\"153\":[2,26],\"154\":[2,14],\"155\":[3,56],\"156\":[2,31],\"157\":[1,20],\"158\":[1,53],\"159\":[1,25],\"160\":[4],\"161\":[1],\"162\":[2,26],\"163\":[4,38],\"164\":[1,19],\"165\":[2,27],\"166\":[2,23],\"167\":[1,5],\"168\":[2,33],\"169\":[2,17],\"170\":[1],\"171\":[4,24],\"172\":[2,33],\"173\":[1,9],\"174\":[3,30],\"175\":[1],\"176\":[1,61],\"177\":[7,42],\"178\":[1],\"179\":[1,72],\"180\":[2,15],\"181\":[1,51],\"182\":[4],\"183\":[1],\"184\":[1,37],\"185\":[4,52],\"186\":[1],\"187\":[2,53],\"188\":[1,27],\"189\":[2,5],\"190\":[1,40],\"191\":[1],\"192\":[1,16],\"193\":[1,8],\"194\":[3,24],\"195\":[3,50],\"196\":[3,5],\"197\":[4,6],\"198\":[1],\"199\":[1,41],\"200\":[2,11],\"201\":[1,39],\"202\":[3,15],\"203\":[6,47],\"204\":[6,21],\"205\":[4,10],\"206\":[3,16],\"207\":[3,126],\"208\":[3,52],\"209\":[6,41],\"210\":[6,39],\"211\":[5,56],\"212\":[5,40],\"213\":[5,21],\"214\":[1,129],\"215\":[1,19],\"216\":[5,126],\"217\":[3,46],\"218\":[6,16],\"219\":[6,54],\"220\":[3,7],\"221\":[5,21],\"222\":[7,25],\"223\":[3,20],\"224\":[6,38],\"225\":[6,49],\"226\":[3,85],\"227\":[5,22],\"228\":[5,38],\"229\":[6,36],\"230\":[3,18],\"231\":[6,73],\"232\":[4,14],\"233\":[8,40],\"234\":[3,57],\"235\":[6,167],\"236\":[5,43],\"237\":[6,28],\"238\":[5,53],\"239\":[3,52],\"240\":[5,38],\"241\":[5,33],\"242\":[6,48],\"243\":[6,51],\"244\":[5,52],\"245\":[5,57],\"246\":[6,38],\"247\":[3,39],\"248\":[1,103],\"249\":[3,31],\"250\":[2,20],\"251\":[1,6],\"252\":[2,3],\"253\":[1,86],\"254\":[1,31],\"255\":[1,40],\"256\":[1,21],\"257\":[1,33],\"258\":[1,5],\"259\":[1,100],\"260\":[1,107],\"261\":[1,97],\"262\":[1,14],\"263\":[1,99],\"264\":[2,158],\"265\":[4,18],\"266\":[2,46],\"267\":[1,24],\"268\":[1,26],\"269\":[3,22],\"270\":[3,24],\"271\":[1,42],\"272\":[1,37],\"273\":[1,101],\"274\":[1,83],\"275\":[3,15],\"276\":[1,118],\"277\":[1,15],\"278\":[1,28],\"279\":[3,48],\"280\":[1,40],\"281\":[1,88],\"282\":[2,25],\"283\":[1,27],\"284\":[2,30],\"285\":[1,13],\"286\":[4,35],\"287\":[3,115],\"288\":[2,24],\"289\":[4,31],\"290\":[1,35],\"291\":[1,72],\"292\":[1,43],\"293\":[1],\"294\":[1],\"295\":[1],\"296\":[1],\"297\":[1],\"298\":[1],\"299\":[2],\"300\":[1]},\"averageFieldLength\":[2.079734219269104,32.742435011705076],\"storedFields\":{\"0\":{\"h\":\"有梦想的鱼 开源笔记\"},\"1\":{\"h\":\"helloworld\"},\"2\":{\"h\":\"自动化部署git项目\"},\"3\":{\"h\":\"创建部署脚本deploy.sh\",\"t\":[\"#!/usr/bin/env sh # 确保脚本抛出遇到的错误 set -e # 生成静态文件 npm run build # 进入生成的文件夹 cd docs/.vuepress/dist # 如果是发布到自定义域名 # echo 'www.yourwebsite.com' > CNAME git init git add -A git commit -m 'message' # 如果发布到 https://<USERNAME>.github.io git push -f git@github.com:wangfeng1996/wangfeng1996.github.io.git master # 如果发布到 https://USERNAME.github.io/<REPO> REPO=github上的项目 # git push -f git@github.com:USERNAME/<REPO>.git master:gh-pages cd ../ && rm -rf dist \"]},\"4\":{\"h\":\"添加命令(package.josn)\",\"t\":[\" \\\"scripts\\\": { \\\"deploy\\\": \\\"bash deploy.sh\\\" } \",\"tip: 如果不添加这个脚本，直接在控制台输入 bash deploy.sh 即可\"]},\"5\":{\"h\":\"运行发布命令\",\"t\":[\" npm run deploy or yarn deploy \"]},\"6\":{\"h\":\"linux\"},\"7\":{\"h\":\"1、关机、重启\"},\"8\":{\"h\":\"Homebrew\",\"t\":[\"对于习惯了使用命令来完成一切的程序员来说，安装软件这种小事，自然是能够用命令解决，就不用图形界面选择。但是在 Linux 中，我们有 yum、apt、dnf、pkg等命令来完成软件的安装，macOS 却并未为我们提供一个好用的包管理器，帮助我们更好的使用 macOS。\",\"好在，虽然官方没有提供，我们却可以使用 Homebrew 这一神器，来完成类似的工作，就如同 Homebrew 的 Slogan ：“The missing package manager for macOS (or Linux)”\"]},\"9\":{\"h\":\"Homebrew介绍\",\"t\":[\"Homebrew 由开发者 Max Howell 开发，并基于 BSD 开源，是一个非常方便的包管理器工具。在早期， Homebrew 仅有 macOS 的版本，后续随着用户的增多，Homebrew 还提供了 Linux 的版本，帮助开发者在 Linux 同样使用 Homebrew 来配置环境。\"]},\"10\":{\"h\":\"Homebrew 的几个核心概念\",\"t\":[\"在正式介绍 Homebrew 的使用之前，我先为你介绍一下 Homebrew 中的一些核心的概念，了解这些概念，就可以帮助你更好的去使用 Homebrew。\",\"词汇\",\"含义\",\"formula (e)\",\"安装包的描述文件，formulae 为复数\",\"cellar\",\"安装好后所在的目录\",\"keg\",\"具体某个包所在的目录，keg 是 cellar 的子目录\",\"bottle\",\"预先编译好的包，不需要现场下载编译源码，速度会快很多；官方库中的包大多都是通过 bottle 方式安装\",\"tap\",\"下载源，可以类比于 Linux 下的包管理器 repository\",\"cask\",\"安装 macOS native 应用的扩展，你也可以理解为有图形化界面的应用。\",\"bundle\",\"描述 Homebrew 依赖的扩展\",\"其中，最关键的是 tap 、cask，我们在后续会经常用到。\"]},\"11\":{\"h\":\"Homebrew 常用操作\"},\"12\":{\"h\":\"安装 Homebrew\"},\"13\":{\"h\":\"要求\",\"t\":[\"64-bit Intel CPU 或者 Apple Silicon CPU(苹果自己研发的CPU)\",\"macOS版本为Mojave（10.14）或者以上\",\"Xcode命令行工具（安装Command Line Tools）安装xcode命令\",\"xcode-select --install \",\"支持shell (zsh或者bash) 在macOS 10.15 之后 默认shell是zsh\",\"# 查看当前使用的shell echo $SHELL # 查看所有的shell cat /etc/shells # 修改默认shell为zsh chsh -s /bin/zsh \"]},\"14\":{\"h\":\"安装和卸载\",\"t\":[\"安装\",\"# 拉脚本 /bin/bash -c \\\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\\\" # 检查brew是否安装成功 brew help # 替换brew.git cd \\\"$(brew --repo)\\\" git remote set-url origin https://mirrors.ustc.edu.cn/brew.git # homebrew-core.git cd \\\"$(brew --repo)/Library/Taps/homebrew/homebrew-core\\\" git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git # 替换Bottles源 # zsh echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' >> ~/.zshrc # 全局配置 source ~/.zshrc # bash echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' >> ~/.bash_profile source ~/.bash_profile # 更新brew brew update \",\"卸载\",\"/bin/bash -c \\\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)\\\" \",\"tip: Homebrew 会将软件包安装到独立目录，并将其文件软链接至 /usr/local\"]},\"15\":{\"h\":\"安装软件\",\"t\":[\"当你完成了 Homebrew 以后，就可以使用 Homebrew 来完成软件的安装了，安装命令行软件的时候非常简单，只需要执行 brew install [软件名] 就可以安装软件了，比如说，我们要安装 wget，那么只需要执行 brew install wget 就可以了。\"]},\"16\":{\"h\":\"搜索软件\",\"t\":[\"很多时候，我们不知道自己想要的软件是否有，或者说具体的名字是什么，这个时候你有两种方式来完成搜索\"]},\"17\":{\"h\":\"1. 使用命令搜索\",\"t\":[\"在命令行中，你可以直接使用 brew search [关键词] 来进行搜索 > 命令行搜索软件 输入你想要的关键词，来搜索即可得到结果。 > 在搜索时应当遵循宁可少字，不能错字的原则来搜索。 \"]},\"18\":{\"h\":\"2. 使用网页搜索\",\"t\":[\"除了使用命令行搜索以外，你可以使用网页端的搜索工具来辅助你进行搜索。在 Homebrew 的官网，你可以找到 formulae 的链接，或者直接访问 https://formulae.brew.sh/ 来进行搜索。你只需要在界面的输入框中输入你要搜索的命令，然后就会出现对应的候选命令 选择其中你要使用的那个，点击就会进入到软件的介绍页面 \",\"img 你就可以看到 Homebrew 中的软件具体信息。 \"]},\"19\":{\"h\":\"查看已经安装的包\",\"t\":[\"如果你想要查看你都安装了哪些包，你可以执行 brew list 命令，来查看所有你已经安装的软件。\"]},\"20\":{\"h\":\"更新一个已经安装的包\",\"t\":[\"我们安装的软件并不会自动更新，因此，我们可以根据自己的需求，批量更新软件，或者更新单个软件。\",\"你可以先使用 brew outdated 来查看所有有更新版本的软件。\",\"img 然后使用 `brew upgrade` 来更新所有的软件，或者是使用 `brew upgrade [软件名]`来更新单个软件。 \"]},\"21\":{\"h\":\"卸载某个已经安装的包\",\"t\":[\"如果你想要卸载某个包，你可以执行 brew uninstall [软件名] 来卸载一个特定的软件，比如卸载 wget 是这样的。\"]},\"22\":{\"h\":\"查看包的信息\",\"t\":[\"如果你想要查看某个特定软件的信息，你可以执行命令 brew info [软件名] 来查看该软件的详情。\"]},\"23\":{\"h\":\"清理软件的旧版\",\"t\":[\"Homebrew 用久了，会有一些历史版本的软件遗留在系统里，这个时候，你可以使用 brew cleanup 命令来清理系统中所有软件的历史版本，或者可以使用 brew cleanup [软件名]来清理特定软件的旧版。\"]},\"24\":{\"h\":\"常用命令\"},\"25\":{\"h\":\"管理后台软件命令\",\"t\":[\"诸如 Nginx、MySQL 等软件，都是有一些服务端软件在后台运行，如果你希望对这些软件进行管理，可以使用 brew services 命令来进行管理\",\"brew services list: 查看所有服务\",\"brew services run [服务名]: 单次运行某个服务\",\"brew services start [服务名]: 运行某个服务，并设置开机自动运行。\",\"brew services stop [服务名]：停止某个服务\",\"brew services restart：重启某个服务\"]},\"26\":{\"h\":\"其他命令\",\"t\":[\"brew -v: 查看homebrew版本\",\"brew list: 查看已安装的包\",\"brew install packageName: 安装某个软件\",\"brew uninstall packageName: 卸载某个软件\",\"brew searck packageName: 查找某个软件\",\"brew info packageName: 查看软件包的信息\",\"brew update: 更新homebrew\",\"brew doctor: 诊断homebrew\",\"brew -h: 查看帮助信息\",\"brew cleanup: 清理旧版本\",\"brew upgrade : 全部更新\",\"brew upgrade packageName: 更新指定包\",\"brew outdated: 查询可更新的包\",\"brew install --cask packageName: 安装 macOS 应用程序、字体和插件以及其他非开源软件\",\"brew uninstall --cask packageName: 卸载 macOS 应用程序、字体和插件以及其他非开源软件\",\"brew tap: 列出当前的存储库\"]},\"27\":{\"h\":\"检查 Hombrew 环境\",\"t\":[\"如果你的 Hombrew 没有办法正常的工作，你可以执行 brew doctor 来开启 Homebrew 自带的检查，从而确认有哪些问题，并进行修复。\"]},\"28\":{\"h\":\"更新 Homebrew\",\"t\":[\"Homebrew 经常会在执行命令的时候触发更新，不过如果你想要主动检查更新，可以执行 brew update 来唤起 Homebrew 的更新。\"]},\"29\":{\"h\":\"添加一个新的 tap\",\"t\":[\"homebrew 官方在安装的时候会有一些 tap 但是在使用时，依然会需要安装一些特殊的 tap ，这个时候，我们就要用到 tap 的命令来添加新的 tap.\",\"在添加 tap 时，输入命令 brew tap [user/repo] ，就可以完成添加 tap 了\"]},\"30\":{\"h\":\"常用 tap\",\"t\":[\"在使用 homebrew 时，我们一般会添加几个常用的 tap，来确保我们有足够的软件来安装。\"]},\"31\":{\"h\":\"1. Caskroom\",\"t\":[\"Caskroom 是 Homebrew 下一个非常出名的 tap ，有了 caskroom，我们就可以安装一些有图形化界面的软件了，比如 VSCode、Typora 等软件。\",\"使用起来也非常简单，最新版 Homebrew 中，你可以直接使用 brew cask install [软件名] 来安装特定的软件，homebrew 会自动安装 Caskroom。\"]},\"32\":{\"h\":\"2. homebrew-cask-fonts\",\"t\":[\"程序员难免要安装一些代码字体，这样才能更好的写代码，Homebrew 也提供了方便我们安装字体的 tap。\",\"在使用时，你需要先添加对应的 tap ，然后执行安装即可了，比如我们要安装 source code pro ，只需要执行如下命令。\",\"brew tap homebrew/cask-fonts brew cask install font-source-code-pro \"]},\"33\":{\"h\":\"使用技巧\"},\"34\":{\"h\":\"切换国内的镜像源\",\"t\":[\"Homebrew 默认使用的是国外的源，在下载时速度可能会比较慢。好在国内的清华大学和中科大提供了 Homebrew 的镜像源，我们可以很轻松的切换源，从而提升我们的下载速度。\"]},\"35\":{\"h\":\"使用中科大的镜像\",\"t\":[\"执行如下命令，即可切换为中科大的镜像\",\"cd \\\"$(brew --repo)\\\" git remote set-url origin git://mirrors.ustc.edu.cn/brew.git cd \\\"$(brew --repo)/Library/Taps/homebrew/homebrew-core\\\" git remote set-url origin git://mirrors.ustc.edu.cn/homebrew-core.git \"]},\"36\":{\"h\":\"使用清华大学的镜像\",\"t\":[\"执行如下命令，即可切换为清华大学的镜像\",\"git -C \\\"$(brew --repo)\\\" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git git -C \\\"$(brew --repo homebrew/core)\\\" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git \"]},\"37\":{\"h\":\"使用 Brewfile 完成环境迁移\",\"t\":[\"设备永久了，我们的电脑中会有大量的软件，如果你需要迁移环境，重新安装会是一个大麻烦，好在 Homebrew 本身为我们提供了一个非常好用的环境迁移的工具 —— Homebrew Bundle\",\"你首先需要在之前的电脑中执行 brew bundle dump 来完成当前环境的导出,导出完成后，你会得到一个 Brewfile。\",\"img\",\"然后将 Brewfile 复制到新的电脑中，并执行 brew bundle 来开始安装的过程。\"]},\"38\":{\"h\":\"使用网页搜索 Caskroom 的软件\",\"t\":[\"Brew Caskroom 并没有提供搜索的命令，不过我们可以借助一些网站来进行搜索，一个是 Homebrew 官方的 Caskrrom 页面：https://formulae.brew.sh/cask/\",\"img\",\"在这个页面，你可以看到所有被收录的页面，在命令行中输入对应的软件就可以安装了。\",\"你也可以访问 http://macappstore.org/，在网站中输入你要安装的软件，点击搜索，在弹出的页面中，查看安装指南即可。\"]},\"39\":{\"h\":\"辅助软件\",\"t\":[\"除了命令行，还有两款软件可以帮助我们更好的使用 Homebrew ，他们分别是 Cakebrew 和 launchrocket。\"]},\"40\":{\"h\":\"Cakebrew\",\"t\":[\"Cakebrew 是 Homebrew 的 GUI 管理器，在 Cakebrew 中，你可以看到当前所有已经安装的软件，并可以在 Caskbrew 中对其他软件执行升级等操作。\",\"你只需要执行 brew cask install cakebrew 就可以完成 Cakebrew 的安装。\",\"安装完成后，在 LaunchPad 中打开即可。\"]},\"41\":{\"h\":\"launchrocket\",\"t\":[\"launchrocket 可以用于管理 Homebrew 安装的服务，在使用时，你需要先添加对应的tap，然后再安装软件。\",\"brew tap jimbojsb/launchrocket brew cask install launchrocket \",\"安装完成后，在 LaunchPad 中打开即可。\"]},\"42\":{\"h\":\"安装配置开发环境\"},\"43\":{\"h\":\"JDK的安装与环境变量的配置\"},\"44\":{\"h\":\"安装\",\"t\":[\"搜索软件\",\"brew search adoptopenjdk \",\"安装软件 \",\"安装源（我使用的是第二个） \",\"homebrew/cask-versions/adoptopenjdk8\",\"adoptopenjdk/openjdk/adoptopenjdk8\",\"brew install --cask adoptopenjdk/openjdk/adoptopenjdk8 \",\"安装完毕后，输入下面的指令\",\"# 查看java版本号 java -version # 回显版本号的相关信息 openjdk version \\\"1.8.0_292\\\" OpenJDK Runtime Environment (AdoptOpenJDK)(build 1.8.0_292-b10) OpenJDK 64-Bit Server VM (AdoptOpenJDK)(build 25.292-b10, mixed mode) \"]},\"45\":{\"h\":\"环境变量的配置\",\"t\":[\"查看jdk安装地址\",\"# 查看地址 /usr/libexec/java_home # 回显 Matching Java Virtual Machines (1): 1.8.0_292 (x86_64) \\\"AdoptOpenJDK\\\" - \\\"AdoptOpenJDK 8\\\" /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home \",\"从终端输出结果可以得出：JAVA_HOME路径\",\"/Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home \",\"查看是否配置了环境变量\",\"echo $JAVA_HOME 如果出现空白，说明还没有配置 \",\"配置环境变量（在.zshrc添加下面几行）\",\"export JAVA_HOME=$(/usr/libexec/java_home) export PATH=$JAVA_HOME/bin:$PATH export CLASS_PATH=$JAVA_HOME/lib \",\"使修改的文件生效\",\"source ~/.zshrc \",\"查看环境变量是否生效\",\"echo $JAVA_HOME 如果出现空白，说明还没有生效 # 如果能正确输出Java安装目录，则说明配置已生效 /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home \"]},\"46\":{\"h\":\"maven的安装\",\"t\":[\"brew查找maven版本\",\"brew search maven \",\"安装\",\"brew install maven@3.5 \",\"maven在zsh环境变量配置，安装完了有提示的，直接复制就行\",\"echo 'export PATH=\\\"/usr/local/opt/maven@3.5/bin:$PATH\\\"' >> ~/.zshrc \",\"查看是否安装成功\",\"# 查看是否安装成功 mvn -v # 回显 Maven home: /usr/local/Cellar/maven@3.5/3.5.4_1/libexec Java version: 1.8.0_292, vendor: AdoptOpenJDK, runtime: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/jre Default locale: zh_CN, platform encoding: UTF-8 OS name: \\\"mac os x\\\", version: \\\"10.16\\\", arch: \\\"x86_64\\\", family: \\\"mac\\\" \"]},\"47\":{\"h\":\"git的安装\",\"t\":[\"brew 查找git版本\",\"brew search git \",\"brew 安装Git\",\"brew install git \",\"安装完毕后查看版本号\",\"# 查看git的版本号 git --verison # 回显 git version 2.33.0 \"]},\"48\":{\"h\":\"node的安装\",\"t\":[\"brew 查找node版本\",\"brew search node \",\"brew 安装node\",\"brew install node@12 \",\"node在zsh环境变量配置，安装完了有提示的，直接复制就行\",\"echo 'export PATH=\\\"/usr/local/opt/node@12/bin:$PATH\\\"' >> ~/.zshrc \",\"配置npm\",\"遇到过 cnpm 的 bug，所以不适用 cnpm，直接配置淘宝镜像\",\"npm config set registry https://registry.npm.taobao.org --global npm config set disturl https://npm.taobao.org/dist --global # 查看镜像源是否配置成功 npm config get registry npm config get disturl \"]},\"49\":{\"h\":\"mysql的安装\",\"t\":[\"brew查找mysql版本\",\"brew search mysql \",\"安装\",\"brew install mysql@5.7 \",\"开机自动启动\",\"brew services start mysql@5.7 # 如果你不想/不需要后台服务，你可以运行: /usr/local/opt/mysql@5.7/bin/mysqld_safe --datadir=/usr/local/var/mysql \",\"mysql在zsh环境变量配置，安装完了有提示的，直接复制就行\",\"export PATH=\\\"/usr/local/opt/mysql@5.7/bin:$PATH\\\" \",\"连接mysql，root用户无初始密码，直接回车\",\"mysql -uroot -p ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/tmp/mysql.sock' (2) ---这个情况是mysql还没有被启动 \",\"设置root用户初始密码，为'root'\",\"set password for 'root'@'localhost' = 'root'; \",\"mysql创建新的用户（必须在root用户下执行）\",\"// 语句 CREATE USER '用户名'@'ip' IDENTIFIED BY '密码'; // 样列 CREATE USER 'wangfeng'@'LOCALHOST' IDENTIFIED BY 'wangfeng'; \",\"mysql新用户赋予权限（必须在root用户下执行）\",\"grant 权限 on *.* to '用户'@'ip'; // *.* 代表所有库下的所有表 // 比如给该用户下所有的库赋予查询的权限 grant select on *.* to '用户'@'ip'; // 给用户赋予crud的权限 grant select,delete,update,create,drop on *.* to 'wangfeng'@'localhost' identified by \\\"wangfeng\\\"; // 赋予所有的权限 grant all privileges on *.* to '用户'@'ip'; 赋权限后记得刷新： flush privileges; \",\"mysql 删除权限\",\"// 查看用户的权限 show grants for 'wangfeng'@'localhost'; // 删除用户的权限 revoke all privileges on *.* from '用户'@'ip'; // 刷新权限 flush privileges; \",\"删除用户\",\"# 要查看MySQL服务器中的数据库:mysql的所有用户信息 USE mysql; SELECT user, host FROM mysql.user; # 假设您要删除用户帐户：`wangfeng`，请使用以下语句： 1、DROP USER 'wangfeng'; 2、再次从[mysql.user]表中查询数据，您将看到用户ip@localhost已被删除。 # 要删除数据库中的两个用户：remote_user和auditor的帐户，请使用以下语句： DROP USER user1, user2; \"]},\"50\":{\"h\":\"Reference\",\"t\":[\"Homebrew 官网：https://brew.sh\",\"Homebrew Github：https://github.com/Homebrew/brew\",\"Homebrew 的 Manpage 说明书：https://docs.brew.sh/Manpage\"]},\"51\":{\"h\":\"IntelliJ IDEA\"},\"52\":{\"h\":\"IntelliJ IDEA\",\"t\":[\"点击下载IDEA\",\"本系列基于ideaIU-2022.1.1.win操作\"]},\"53\":{\"h\":\"安装之后\",\"t\":[\"windows：配置存放目录C:\\\\Users\\\\用户名\\\\AppData\\\\Roaming\\\\JetBrains\\\\IntelliJIdea2022.1\",\"mac: 配置存放目录\",\"# 注：因为路径有空格原因直接进不去，需要一层一层进入或路径加上双引号进入 open \\\"/Users/用户/Library/Application Support/JetBrains/IntelliJIdea2021.1\\\" \"]},\"54\":{\"h\":\"IDE激活\",\"t\":[\"申请开源开发许可证\"]},\"55\":{\"h\":\"快捷键设置\"},\"56\":{\"h\":\"快捷键设置\",\"t\":[\"File -> Settings... -> Keymap\",\"Ctrl+D 删除当前行Ctrl+Alt+向下箭头 复制选中的行到下一行并另起一行\",\"F3 选中快速打开文件所在位置\",\"F2 文件重命名\",\"debug F10 跳出当前方法\",\"RestfulTool插件根据url快速定位controller\",\"Ctrl+鼠标滚轮向上滚：放大字体\",\"Ctrl+鼠标滚轮向下滚：缩小字体\",\"ctrl+alt+/：自动添加注释\"]},\"57\":{\"h\":\"常用快捷键\"},\"58\":{\"h\":\"windows 常用快捷键\",\"t\":[\"快捷键\",\"描述\",\"alt+/\",\"功能很多，ex：快速生成变量，导包，解决错误等\",\"alt+ insert\",\"生成 getter/setter 方法、toString 等\",\"ctrl + f\",\"替换文字(注意：勾选右边的 Match Case 可区分大小写哦)\",\"ctrl+alt+t\",\"try-catch\",\"ctrl+d\",\"删除行\",\"ctrl+alt+下键\",\"复制拷贝本行内容\",\"shift+shift\",\"查找内容\",\"ctrl+shift+v\",\"查看最近复制的内容\",\"ctrl+e\",\"打开最近用的文件\",\"选择类名按 ctrl + t\",\"可查看此接口实现类\",\"ctrl+f9\",\"编译\",\"选中异常按 F4\",\"可查看相关异常分类\",\"ctrl+shift+y\",\"选择小写字母可转换成大写字母即切换选择字母的大小写\",\"ctrl+shift+o\",\"自动导包和删除无用包\",\"ctrl+alt+L\",\"格式化代码样式\",\"if 的快捷键 --> ifn -> null inn -> !=null\",\"Ctrl+Shift+Alt+U\",\"查看类图\",\"ctrl+alt+b\",\"IDEA 直接跳转到方法的实现类\",\"F2\",\"keymap -> rename\",\"F3\",\"keymap -> show in explorer\"]},\"59\":{\"h\":\"macos常用快捷键\",\"t\":[\"快捷键\",\"描述\",\"command+,\",\"打开 Preferences\",\"command+, –>keymap\",\"搜索 duplicate 设置复制行快捷键\",\"command+, –>keymap\",\"搜索 delete 设置删除行快捷键\",\"option+command+B\",\"查看子类\",\"command+F12\",\"查看类方法\"]},\"60\":{\"h\":\"常用插件\"},\"61\":{\"h\":\"IDEA - 常用插件\",\"t\":[\"====================================== ↓↓↓↓↓↓ 个人使用必备插件 ↓↓↓↓↓↓ ======================================\",\"安装\",\"插件名称\",\"插件介绍\",\"√\",\"Alibaba Java Coding Guidelines\",\"阿里代码规约检测 p3c\",\"√\",\"Lombok\",\"类上注解@Data 省去 getter/setter、toString 等方法滴\",\"√\",\"Save Actions\",\"保存时的一些自动操作，如按下 Ctrl + S 即可自动按照阿里巴巴编码风格格式化代码\",\"√\",\"Git Flow Integration\",\"Git Flow 的图形界面操作 (mac 需要安装 git-flow 引擎：brew install git-flow-avh，验证：git flow version)\",\"√\",\"Git Commit Template\",\"Git 格式化模版，可以按照实际情况格式化你的提交信息\",\"√\",\"arthas idea\",\"进入代码片段，选择你要诊断的类或者方法上面，右击打开 Arthas 命令，选择一项，即可自动生成命令，省去你敲打命令的时间。\",\"√\",\"RestfulTool\",\"一套 RESTful 服务开发辅助工具集，可根据 url 定位 controller\",\"√\",\"Maven Helper\",\"Maven 依赖分析和依赖冲突快速解决\",\"√\",\"Easy Javadoc\",\"光标放在需要注释的类/方法/属性上 ctrl+\\\\自动添加注释(如果快捷键冲突需自行修改 ex:修改为 ctrl+alt+/)\",\"√\",\"CamelCase(用这个) 或 UpperLowerCapitalize\",\"命名风格转换插件，可以在 kebab_case，SNAKE_CASE，PascalCase，camelCase，snake_case 和 空格风格之间切换。快捷键苹果为 ⇧+⌥+ U ，windows 下为 Shift + Alt +U\",\"√\",\"vo2dto\",\"快速生成两个对象转换过程中所需要大量的 x.set(y.get) 代码块\",\"√\",\"MyBatisCodeHelperPro\",\"在 mapper 和 xml 文件之间来回切换 & 解析 xml 中的 sql 快速执行 & 代码生成 （ 可使用临时邮箱进行在线激活使用 https://mail.td/zh ）\",\"√\",\"Presentati Assistant (用这个) 或 Key promoter X\",\"快捷键提示工具 (操作时展示快捷键)\",\"√\",\"GsonFormatPlus\",\"JSON 转实体类 bean (使用方式：实体类{}中右击->Generate...->GsonFormatPlus-> 复制json -> ok)\",\"√\",\"JRebel and XRebel\",\"热部署-代码 快捷键：Ctrl+F9\",\"√\",\"JRebel mybatisPlus extension\",\"热部署-xml中sql 快捷键：Ctrl+F9\",\"√\",\"CodeGlance Pro\",\"类似 SublimeText 的 Mini Map 插件，一个代码编辑区缩略图插件，可以快速定位代码\",\"√\",\"Rainbow Brackets\",\"黑色主题下 - 彩虹颜色的括号，对各个对称括号进行着色，方便查看\",\"√\",\"Grep Console\",\"自定义设置控制台输出颜色,显示不同日志信息级别的颜色和背景色\",\"POJO to JSON(用这个) 或 Java Bean to Json\",\"实体类转 JSON (移动鼠标到类上 -> 右击 > Copy/Paste Special -> Copy JSON)\",\"maven-search\",\"Tools->Maven Search搜索 maven 依赖\",\"SonarLint\",\"代码质量检测与优化\",\"Free MyBatis(用这个) 或 MybatisX\",\"在 Mybatis 的 mapper Java 接口方法和 mapper XML 文件之间来回切换\",\"MyBatis Log\",\"Mybatis 运行后的相关 sql 日志可转换成 sql 语句直接输出在 console 中\",\"GenerateAllSetter\",\"生成对象 set 方法\",\"SequenceDiagram\",\"自动生成时序图\",\"Material Theme UI\",\"主题插件，在工具栏中 Tools->Material Theme 修改配色\",\"Atom Material Icons\",\"ICON 插件，附带 buff：解决 mac 拖动滚动条或是鼠标中键滚屏时卡顿问题\",\"File Expander\",\"在 idea 里直接打开 Jar 包，并且反编译代码查看。甚至于能打开 tar.gz，zip 等压缩格式。\",\"JProfiler\",\"JProfiler 直觉式的 GUI 让你可以找到性能瓶颈、抓出内存漏失(memory leaks)、并解决执行绪的问题。\",\"VisualGC\",\"Idea 堆栈的可视化工具，和 Idea 深度集成。直接显示所有进程，双击即可打开 JVM 的堆栈可视化界面。堆栈和垃圾收集情况一目了然！\",\"IDEA Restart\",\"File 下面 Restart 可重启 idea\",\"Markdown Navigator\",\"书写 Markdown 文章\",\"IDEA Mind Map\",\"画思维导图\",\"JavaDoc\",\"通过快捷键生成注释 【要为活动元素生成 javadocs，请按 shift + alt + G。要为当前 java 文件中的所有元素生成 javadocs，请按 shift + ctrl + alt + G。删除当前/选定元素上的 javadocs 请按 shift + alt + Z。删除当前类所有元素上的 javadocs：请按 shift + ctrl + alt + Z。】\",\"Extra Icons\",\"美化插件，为一些文件类型提供官方没有的图标\",\"Gitee\",\"开源中国的码云插件\",\".ignore\",\"各类版本控制忽略文件生成工具\",\"Translation\",\"翻译插件\",\"Statistic\",\"一款可以做项目全局代码统计信息的小插件\",\"Eclipse Code Formatter\",\"使用 Eclipse 的代码格式化风格，在一个团队中如果公司有规定格式化风格 (阿里代码规范 code style 所需)\",\"SequenceDiagram\",\"时序图生成工具，能够很清晰的看到依赖调用时序\",\"HighlightBracketPair\",\"括号开始结尾 高亮显示\",\"IdeaJad\",\"反编译插件\",\"AiXcoder\",\"ai 智能编码提示\",\"JUnitGenerator\",\"单元测试测试生成工具\",\"iedis\",\"redis 客户端,Redis 可视化，收费\",\"Kubernetes\",\"K8s 工具\",\"Zookeeper\",\"Zookeeper 可视化\",\"FindBugs\",\"bug 预检查\",\"Codota\",\"不再怕对 API 不会用，举个栗子：当我们用 stream().filter() 对 List 操作，可是对 filter() 用法不熟，按常理我们会百度一下，而用 Codota 会提示很多 filter() 用法，节省不少查阅资料的时间\",\"IntelliJad\",\"一个 Java class 文件的反编译工具，需要在 setting 中设置本地 Java jad.exe 工具的地址。随便找个 Jar 架包选择 class 文件右键 Decompile，会出现反编译的结果\",\"Properties to YAML Converter\",\"将 Properties 配置文件一键转换成 YAML 文件，很实用的一个插件。「注意：要提前备份原 Properties 文件」\",\"MOMO Code Sec Inspector\",\"检测代码漏洞，一键修复\",\"CSDN tools\",\"GitToolBox\",\"能在项目上提示你还有多少文件没提交，远程还有多少文件没更新下来。还能在每一行代码上提示上次提交的时间。查版本提交问题的时候尤其方便。\",\"Search In Repository\",\"把中央仓库的查找集成到了 Idea 里面。只需要打开这款插件(idea 右侧边栏会有个 search 标识)，输入 jar 包的名字或者 gav 关键字，就能查到到这个 jar 包所有的版本，然后可以直接复制 gav 坐标。\",\"Zoolytic\",\"zookeeper 节点的查看分析插件\",\"Pom Assistant\",\"替换 pom.xml 依赖的版本号以及对 pom.xml 排序\",\"Flowable BPMN visualizer\",\"流程引擎 Flowable 辅助插件\",\"jclasslib Bytecode Viewer\",\"查看字节码插件 使用： 菜单栏 View -> Show Bytecode With jclasslib\",\"Alibaba Cloud Toolkit\",\"远程服务器登陆，部署项目，文件上传，管理你的 ECS 和 RDS 等资源\",\"mongo4idea\",\"mongo 客户端\",\"Jindent-Source Code Formatter\",\"自定义类、方法、doc、变量注释模板\",\"CheckStyle-IDEA\",\"代码规范检查\",\"String Manipulation\",\"驼峰式命名和下划线命名交替变化\",\"Java Stream Debugger\",\"debug java8的Stream流\",\"Visual VM Launcher\",\"本地开发进行压力测试，性能测试之类的监控器\",\"------\",\"------\"]},\"62\":{\"h\":\"其它的一些不怎么用的插件\",\"t\":[\"安装\",\"插件名称\",\"插件介绍\",\"activate-power-mode\",\"打字炫酷\",\"IdeaVim\",\"Vim 仿真插件\",\"Shifter\",\"BrowseWordAtCaret\",\"AceJump\",\"Nyan Progress Bar\",\"进度条变成萌新动画\",\"Deep TabNine\",\"智能编码插件 目前 TabNine 暂时只支持 VS Code、Sublime Text、Atom、Emacs、Vim 五种代码编辑器。\",\"Background Image Plus\",\"设置 idea 背景滴\",\"StackOverflow\",\"选中错误信息右击一键使用 google 搜索滴\",\"Markdown support\",\"打开.md 文件就可以通过一个支持 md 的视图查看和编辑内容\",\"idea-mybatis-generator\",\"代码生成器\",\"codehelper.generator\",\"在创建一个对象并赋值的时候，根据 new 关键字，自动生成掉用 set 方法的代码，还可以一键填入默认值。\",\"REST Client\",\"快速测试 API 接口\",\"UML\",\"MetricsReloaded\",\"代码复杂度检查\",\"IDE Features Trainer\",\"IntelliJ IDEA 官方出的学习辅助插件\"]},\"63\":{\"h\":\"Git配置\"},\"64\":{\"h\":\"Git配置\",\"t\":[\"File -> New Projects Setup -> Settings for New Projects...\",\"此idea版本好像会自动识别git配置，感觉有点厉害，无需自己单独配置了^_^\",\"idea-git.png\",\"设置常用提交窗口\",\"idea-git-switch-dialog-1.png\",\"idea-git-switch-dialog-2.png\"]},\"65\":{\"h\":\"解决git提交代码每次输入帐号密码问题\",\"t\":[\"# 在`Git Bash Here`命令行输入命令记住密码 -- 即第一次输入用户密码后，之后便可不再输入 git config --global credential.helper store \"]},\"66\":{\"h\":\"JDK配置\"},\"67\":{\"h\":\"JDK配置\",\"t\":[\"File -> New Projects Setup -> Structure...\",\"idea-set-new-projects-structure.png\",\"idea-jdk-2.png\",\"idea-jdk-2.png\"]},\"68\":{\"h\":\"Maven配置\"},\"69\":{\"h\":\"Maven配置\",\"t\":[\"如果需要idea新开的所有项目配置都生效，操作 File -> New Projects Setup -> Settings for New Projects...\",\"idea-maven.png\"]},\"70\":{\"h\":\"Gradle配置\"},\"71\":{\"h\":\"Gradle配置\"},\"72\":{\"h\":\"Gradle user home\",\"t\":[\"查看IDEA安装目录D:\\\\zhengqingya\\\\soft\\\\soft-dev\\\\IDE\\\\ideaIU-2022.1.1.win\\\\plugins\\\\gradle\\\\lib下匹配的gradle版本，对应自己安装的gradle版本不能太老\",\"如果需要idea新开的所有项目配置都生效，操作 File -> New Projects Setup -> Settings for New Projects...\",\"gradle安装好，配置GRADLE_USER_HOME环境变量之后，idea这里会自动识别; 识别不到可尝试重启idea; 有需要的自行修改； 我这里默认配置即可。\",\"idea-gradle-user-home.png\"]},\"73\":{\"h\":\"控制台中文乱码\",\"t\":[\"tips: 修改完后需重启IDEA才能生效！\",\"Help -> Edit Custom VM Options... 新增配置\",\"-Dfile.encoding=UTF-8 \",\"idea-gradle-utf-8.png\"]},\"74\":{\"h\":\"Git配置\"},\"75\":{\"h\":\"java新运行项目配置\",\"t\":[\"File -> New Projects Setup -> Run Configuration Templates...\",\"idea-set-new-projects-run-configuration-templates.png\",\"idea每次打开新项目时，设置jvm启动默认参数 => 调优节省本地内存空间\",\"-Xmx100M -Xms100M -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+HeapDumpOnOutOfMemoryError \",\"idea-set-new-projects-run-configuration-templates-springboot.png\",\"idea-set-new-projects-run-configuration-templates-springboot-jar.png\"]},\"76\":{\"h\":\"开发规范\"},\"77\":{\"h\":\"开发规范\"},\"78\":{\"h\":\"代码规范 Code Style\",\"t\":[\"注：配置其中一个 或者 都不配置使用IDE默认配置 我这里都未配置使用的IDE默认配置\"]},\"79\":{\"h\":\"Google\",\"t\":[\"下载intellij-java-google-style.xml\",\"GoogleStyle\"]},\"80\":{\"h\":\"阿里\",\"t\":[\"需Eclipse Code Formatter插件\",\"下载eclipse-codestyle.xml\",\"P3C-CodeStyle\"]},\"81\":{\"h\":\"阿里巴巴Java开发手册\",\"t\":[\"点击下载\"]},\"82\":{\"h\":\"自动格式化代码 Ctrl + S\",\"t\":[\"需Save Actions插件\",\"File -> New Projects Setup -> Settings for New Projects...\",\"idea-set-save-actions.png\"]},\"83\":{\"h\":\"编码设置\"},\"84\":{\"h\":\"编码设置\",\"t\":[\"File -> New Projects Setup -> Settings for New Projects...\",\"idea-file-encodings.png\"]},\"85\":{\"h\":\"自动导入\"},\"86\":{\"h\":\"自动导入\",\"t\":[\"File -> New Projects Setup -> Settings for New Projects...\",\"idea-auto-import.png\"]},\"87\":{\"h\":\"代码自动编译\"},\"88\":{\"h\":\"代码自动编译\",\"t\":[\"idea-build-compiler-automatically.png\"]},\"89\":{\"h\":\"代码模板\"},\"90\":{\"h\":\"代码模板\",\"t\":[\"File -> Settings... -> Editor -> Live Templates\"]},\"91\":{\"h\":\"方法头注释\",\"t\":[\"使用方式： /* + tab\",\"** * $END$ * $param$ * @return $return$ * @author zhengqingya * @date $DATE$ $TIME$ */ $param$ -> groovyScript(\\\"if(\\\\\\\"${_1}\\\\\\\".length() == 2) {return '';} else {def result=''; def params=\\\\\\\"${_1}\\\\\\\".replaceAll('[\\\\\\\\\\\\\\\\[|\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\s]', '').split(',').toList();for(i = 0; i < params.size(); i++) {if(i==0){result+='* @param ' + params[i] + ' '}else{result+='\\\\\\\\n' + ' * @param ' + params[i] + ' '}}; return result;}\\\", methodParameters()); $return$ -> methodReturnType() $DATE$ -> date() $TIME$ -> time() \",\"设置用于那些地方\",\"idea-editor-live-templates-method-head-1.png\",\"模板参数配置\",\"idea-editor-live-templates-method-head-2.png\"]},\"92\":{\"h\":\"类注释\",\"t\":[\"使用方式： czq + 回车\",\"/** * <p> $END$ </p> * * @author zhengqingya * @description * @date $DATE$ $TIME$ */ $DATE$ -> date() $TIME$ -> time() \",\"idea-editor-live-templates-class.png\"]},\"93\":{\"h\":\"junit4测试方法\",\"t\":[\"使用方式： jtest + 回车\",\"@Test public void test$END$() throws Exception{ } \"]},\"94\":{\"h\":\"switch case\",\"t\":[\"使用方式： swi + 回车\",\"switch(object){ case OBJECT: break; default: break; } \"]},\"95\":{\"h\":\"Vue打印日志\",\"t\":[\"使用方式： vlog + 回车\",\"console.log($END$) \"]},\"96\":{\"h\":\"shell注释\",\"t\":[\"使用方式： szq + 回车\",\"#################################### # @description $END$ # @params $? => 代表上一个命令执行后的退出状态: 0->成功,1->失败 # ${1} => 脚本第1个参数 # @example => sh xx.sh # @author zhengqingya # @date $DATE$ $TIME$ #################################### $DATE$ -> date() $TIME$ -> time() \"]},\"97\":{\"h\":\"IntelliJ IDEA设置新建类时,自动注释作者信息和日期\",\"t\":[\"File -> New Projects Setup -> Settings for New Projects... ->Editor -> File and Code Templates -> Includes -> File Header 中添加以下代码\",\"此处的END$标识光标最后的位置\",\"/** * Created by ${USER} on ${DATE} ${TIME} */ /** * @Author ${USER} * @Date ${DATE} ${TIME} * @Version 1.0 */ /** * <p> $END </p> * * @author zhengqingya * @description * @date $DATE $TIME */ \",\"idea-editor-file-and-code-templates-file-header.png\"]},\"98\":{\"h\":\"自动添加注释\"},\"99\":{\"h\":\"光标放在需要注释的 类/方法/属性 上 ctrl+\\\\ 自动添加注释\",\"t\":[\"idea需安装插件Easy Javadoc\",\"如果快捷键冲突需自行修改 ex:修改为 ctrl+alt+/\"]},\"100\":{\"h\":\"自定义注释模板\",\"t\":[\"日期格式修改\",\"类注释模板配置\",\"/** * $DOC$ * * @author wangfeng * @description * @date $DATE$ */ \",\"方法注释模板配置\",\"/** * $DOC$ * * $PARAMS$ * $RETURN$ * @author wangfeng * @date $DATE$ */ \"]},\"101\":{\"h\":\"控制台中文乱码\",\"t\":[\"在菜单栏找到 Run -> Edit Configrations，设置 vm option 为 -Dfile.encoding=utf-8\"]},\"102\":{\"h\":\"导入导出配置\"},\"103\":{\"h\":\"导入导出配置\",\"t\":[\"File -> Manage IDE Settings\",\"idea-setting-export.png\"]},\"104\":{\"h\":\"解决卡顿闪退\"},\"105\":{\"h\":\"jvm参数设置\",\"t\":[\"Help -> Edit Custom VM Options...\",\"-Xms1024m -Xmx1024m \",\"-Xms和-Xms设置一样大，可以使IDEA启动时初始堆内存就直接到最大，以免中途扩容影响启动速度。\"]},\"106\":{\"h\":\"双击没反应\"},\"107\":{\"h\":\"问题\",\"t\":[\"在idea安装目录E:\\\\soft\\\\soft-dev\\\\IDE\\\\ideaIU-2020.2.win\\\\bin下的idea.bat文件最后一行添加pause，保存之后，再双击查看错误信息如下：\",\"OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release. Error opening zip file or JAR manifest missing : C:\\\\Users\\\\Public\\\\.jetbrains\\\\jetbrains-agent-v3.2.0.de72.619 Error occurred during initialization of VM agent library failed to init: instrument 请按任意键继续. . . \",\"我的问题是我把破解补丁文件夹直接删除了，它找不到 jetbrains-agent-v3.2.0.de72.619 这个东西\"]},\"108\":{\"h\":\"解决\"},\"109\":{\"h\":\"法一：\",\"t\":[\"叫同事将C:\\\\Users\\\\Public\\\\.jetbrains破解补丁文件夹发给你，然后重命名\"]},\"110\":{\"h\":\"法二：\",\"t\":[\"将C:\\\\Users\\\\Administrator\\\\AppData\\\\Roaming\\\\JetBrains\\\\IntelliJIdea2020.2目录下idea64.exe.vmoptions中的-javaagent:相关行去掉或注释不用它\",\"解决后将添加的pause去掉即可\"]},\"111\":{\"h\":\"使用反代理工具激活JRebel\"},\"112\":{\"h\":\"运行反代理工具\",\"t\":[\"docker run -d --name jrebel -p 8888:8888 registry.cn-hangzhou.aliyuncs.com/XXXX/jrebel \",\"默认反代idea.lanyus.com, 运行起来后\",\"激活地址： ip地址:8888/UUID -> 注：UUID可以自己生成，并且必须是UUID才能通过验证 -> UUID在线生成\",\"邮箱随意填写\"]},\"113\":{\"h\":\"提示颜色修改\",\"t\":[\"File -> Settings... -> Editor -> Color Scheme -> General -> Errors and Warnings -> Warning\",\"idea-editor-warning-color.png\"]},\"114\":{\"h\":\"DEBUG 调试\"},\"115\":{\"h\":\"基础\",\"t\":[\"idea-debug.png\",\"从左到右依次如下\",\"Show Execution Point (Alt + F10)：跳转到光标所在代码执行的行。\",\"Step Over (F8)：步过，一行一行地往下走，如果这一行上有方法不会进入方法。\",\"Step Into (F7)：步入，如果当前行有方法，可以进入方法内部，一般用于进入自定义方法内，不会进入官方类库的方法。\",\"Force Step Into (Alt + Shift + F7)：强制步入，能进入任何方法，查看底层源码的时候可以用这个进入官方类库的方法。\",\"Step Out (Shift + F8)：步出，从步入的方法内退出到方法调用处，此时方法已执行完毕，只是还没有完成赋值。\",\"Drop Frame (默认无)：回退断点。\",\"Run to Cursor (Alt + F9)：运行到光标处，你可以将光标定位到你需要查看的那一行，然后使用这个功能，代码会运行至光标行，而不需要打断点。\",\"Evaluate Expression (Alt + F8)：计算表达式。\"]},\"116\":{\"h\":\"字段断点\",\"t\":[\"在字段上打断点时，会监听值的整个生命周期的变化。\",\"idea-debug.png\"]},\"117\":{\"h\":\"异常断点\",\"t\":[\"全局监听，当出现相关异常时会自动断点停在异常代码处。\",\"idea-debug.png\"]},\"118\":{\"h\":\"方法断点\",\"t\":[\"在方法上打断点时，会自动进入方法第一行断点以及最后出方法时断点，方便查看结果。\",\"idea-debug.png\",\"当不确定接口由哪一个具体的类实现时，可接口方法处进行断点，方法调用时会自动进入具体的实现类中。\",\"idea-debug.png\"]},\"119\":{\"h\":\"手动制造抛出异常\",\"t\":[\"idea-debug.png\"]},\"120\":{\"h\":\"强制返回\",\"t\":[\"不再执行之后的代码\"]},\"121\":{\"h\":\"stream调试\",\"t\":[\"idea-debug.png\"]},\"122\":{\"h\":\"线程调试\",\"t\":[\"通过切换线程控制线程执行顺序\"]},\"123\":{\"h\":\"DeBug跳过class文件\"},\"124\":{\"h\":\"debug跳过class文件\",\"t\":[\"问题：不配置的情况下每次debug会进入org.springframework.aop.framework.CglibAopProxy.class或者其它class文件\",\"解决：\",\"File -> Settings... -> Build,Exclution,Deployment -> Debugger -> Stepping\",\"类名\",\"包名.*\",\"idea-debug-stepping.png\"]},\"125\":{\"h\":\"Git密码忘记问题\",\"t\":[\"删除本地C:\\\\Users\\\\用户\\\\AppData\\\\Roaming\\\\JetBrains\\\\IntelliJIdea2022.1\\\\c.kdbx文件\",\"在idea -> password 中选择如下：\",\"idea-git-password.png\"]},\"126\":{\"h\":\"iterm2\",\"t\":[\"个人认为迄今为止mac平台最好用的终端\"]},\"127\":{\"h\":\"iterm2介绍\",\"t\":[\"Mac OS自带的终端，用起来虽然有些不太方便，界面也不够友好,iTerm2是一款相对比较好用的终端工具.iTerm2常用操作包括主题选择、声明高亮、自动填充建议、隐藏用户名和主机名、分屏效果等，当然还有许多的插件和字体提供用户使用。\",\"效果图如下：\",\"iterm2 ## 下载及其安装 \",\"使用Homebrew进行下载安装\",\"brew install --cask iterm2 \",\"去官网下载 \",\"地址：https://iterm2.com/downloads.html\",\"下载的是压缩文件，解压后直接双击执行程序文件，或者直接将它拖到 Applications 目录下。\"]},\"128\":{\"h\":\"配置iterm2 主题\",\"t\":[\"主题地址：https://draculatheme.com 需要翻墙才能打开\",\"GitHub地址 ：https://github.com/dracula/iterm.git\",\"下载主题\",\"# 将主题下载到本地 git clone https://github.com/dracula/iterm.git \",\"配置主题\",\"打开 iTerm2，按 Command + ，键，打开打开 Preferences 配置界面，然后Profiles -> Colors -> Color Presets,在下拉列表中选择 Import，选择刚才clone下的文件夹里面的Dracula.itermcolors文件，导入成功后,在 Color Presets下选择 Dracula 主题，就可以了。\",\"导入插件\",\"主题\"]},\"129\":{\"h\":\"设置iterm2背景图片\",\"t\":[\"打开 iTerm2，按Command +,键，打开 Preferences 配置界面Profiles -> Window->Background mage,选择一张自己喜欢的背景图.（我选择的事默认的）\",\"配置界面\"]},\"130\":{\"h\":\"配置 Oh My Zsh\"},\"131\":{\"h\":\"安装oh-my-zsh\"},\"132\":{\"h\":\"步骤一\",\"t\":[\"如果步骤一不存在，则执行步骤二的内容\",\"查看shell\",\"cat /etc/shells # 输出 /bin/bash /bin/csh /bin/dash /bin/ksh /bin/sh /bin/tcsh /bin/zsh \",\"查看当前窗口使用的shell版本\",\"echo $SHELL # 输出 /bin/zsh \"]},\"133\":{\"h\":\"步骤二\",\"t\":[\"安装并设置zsh\",\"brew install zsh \",\"要将zsh设置为默认shell\",\"chsh -s /usr/local/bin/zsh \",\"安装Oh My Zsh:\",\"GitHub地址：https://github.com/ohmyzsh/ohmyzsh/wiki\",\"安装方法\",\"方式\",\"命令\",\"curl\",\"sh -c \\\"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\\\"\",\"wget\",\"sh -c \\\"$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\\\"\",\"fetch\",\"sh -c \\\"$(fetch -o - https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\\\"\",\"本地安装方法\",\"git clone https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh \"]},\"134\":{\"h\":\"配置oh-my-zsh\",\"t\":[\"备份您现有的~/.zshrc文件\",\"cp ~/.zshrc ~/.zshrc.orig \",\"创建一个新的zsh配置文件\",\"可以通过复制我们包含的模板来创建一个新的zsh配置文件。\",\"cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc \",\"初始化新zsh配置\",\"一旦您打开一个新的终端窗口，它应该使用Oh My Zsh的配置加载zsh。\"]},\"135\":{\"h\":\"卸载oh-my-zsh\",\"t\":[\"如果您想卸载oh-my-zsh，只需从命令行运行uninstall_oh_my_zsh。它将删除自己，并恢复您之前的bash或zsh配置。\"]},\"136\":{\"h\":\"插件\",\"t\":[\"插件下载目录：.oh-my-zsh/custom/plugins\"]},\"137\":{\"h\":\"高亮显示\",\"t\":[\"方式一\",\"使用homebrew进行安装\",\"brew install zsh-syntax-highlighting \",\"安装成功之后，编辑vim ~/.zshrc文件，在最后一行增加下面配置：\",\"source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh \",\"重新启动zsh（例如打开终端模拟器的新实例）\",\"方式二\",\"执行下面指令自动安装\",\"git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting \",\"然后编辑vim ~/.zshrc文件， 找到plugins=(git)这一行，如果没有添加。更改为如下\",\"plugins=(git zsh-syntax-highlighting) \",\"重新启动zsh（例如打开终端模拟器的新实例）\"]},\"138\":{\"h\":\"自动补全插件\",\"t\":[\"下载插件\",\"git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions \",\"编辑.zshrc文件 找到plugins=(git)这一行，如果没有添加。更改为如下\",\"plugins=(git zsh-autosuggestions) \",\"重新启动zsh（例如打开终端模拟器的新实例）\"]},\"139\":{\"h\":\"设置vim可配色\",\"t\":[\"终端输入 vim .vimrc 设置如下\",\" syntax on set number set ruler \"]},\"140\":{\"h\":\"iterm2 快捷键\",\"t\":[\"command + enter 进入与返回全屏模式 command + t 新建标签 command + w 关闭标签 command + 数字 command + 左右方向键 切换标签 command + enter 切换全屏 command + f 查找 command + d 水平分屏 command + shift + d 垂直分屏 command + option + 方向键 command + [ 或 command + ] 切换屏幕 command + ; 查看历史命令 command + shift + h 查看剪贴板历史 ctrl + u 清除当前行 ctrl + l 清屏 ctrl + a 到行首 ctrl + e 到行尾 ctrl + f/b 前进后退 ctrl + p 上一条命令 ctrl + r 搜索命令历史 \"]},\"141\":{\"h\":\"Java 10 新特性概览\",\"t\":[\"Java 10 发布于 2018 年 3 月 20 日，最知名的特性应该是 var 关键字（局部变量类型推断）的引入了，其他还有垃圾收集器改善、GC 改进、性能提升、线程管控等一批新特性。\",\"概览（精选了一部分）：\",\"JEP 286：局部变量类型推断\",\"JEP 304：垃圾回收器接口\",\"JEP 307：G1 并行 Full GC\",\"JEP 310：应用程序类数据共享(扩展 CDS 功能)\",\"JEP 317：实验性的基于 Java 的 JIT 编译器\"]},\"142\":{\"h\":\"局部变量类型推断(var)\",\"t\":[\"由于太多 Java 开发者希望 Java 中引入局部变量推断，于是 Java 10 的时候它来了，也算是众望所归了！\",\"Java 10 提供了 var 关键字声明局部变量。\",\"var id = 0; var codefx = new URL(\\\"https://mp.weixin.qq.com/\\\"); var list = new ArrayList<>(); var list = List.of(1, 2, 3); var map = new HashMap<String, String>(); var p = Paths.of(\\\"src/test/java/Java9FeaturesTest.java\\\"); var numbers = List.of(\\\"a\\\", \\\"b\\\", \\\"c\\\"); for (var n : list) System.out.print(n+ \\\" \\\"); \",\"var 关键字只能用于带有构造器的局部变量和 for 循环中。\",\"var count=null; //❌编译不通过，不能声明为 null var r = () -> Math.random();//❌编译不通过,不能声明为 Lambda表达式 var array = {1,2,3};//❌编译不通过,不能声明数组 \",\"var 并不会改变 Java 是一门静态类型语言的事实，编译器负责推断出类型。\",\"另外，Scala 和 Kotlin 中已经有了 val 关键字 ( final var 组合关键字)。\",\"相关阅读：《Java 10 新特性之局部变量类型推断》。\"]},\"143\":{\"h\":\"垃圾回收器接口\",\"t\":[\"在早期的 JDK 结构中，组成垃圾收集器 (GC) 实现的组件分散在代码库的各个部分。 Java 10 通过引入一套纯净的垃圾收集器接口来将不同垃圾收集器的源代码分隔开。\"]},\"144\":{\"h\":\"G1 并行 Full GC\",\"t\":[\"从 Java9 开始 G1 就了默认的垃圾回收器，G1 是以一种低延时的垃圾回收器来设计的，旨在避免进行 Full GC,但是 Java9 的 G1 的 FullGC 依然是使用单线程去完成标记清除算法,这可能会导致垃圾回收期在无法回收内存的时候触发 Full GC。\",\"为了最大限度地减少 Full GC 造成的应用停顿的影响，从 Java10 开始，G1 的 FullGC 改为并行的标记清除算法，同时会使用与年轻代回收和混合回收相同的并行工作线程数量，从而减少了 Full GC 的发生，以带来更好的性能提升、更大的吞吐量。\"]},\"145\":{\"h\":\"集合增强\",\"t\":[\"List，Set，Map 提供了静态方法copyOf()返回入参集合的一个不可变拷贝。\",\"static <E> List<E> copyOf(Collection<? extends E> coll) { return ImmutableCollections.listCopy(coll); } \",\"使用 copyOf() 创建的集合为不可变集合，不能进行添加、删除、替换、 排序等操作，不然会报 java.lang.UnsupportedOperationException 异常。 IDEA 也会有相应的提示。\",\"并且，java.util.stream.Collectors 中新增了静态方法，用于将流中的元素收集为不可变的集合。\",\"var list = new ArrayList<>(); list.stream().collect(Collectors.toUnmodifiableList()); list.stream().collect(Collectors.toUnmodifiableSet()); \"]},\"146\":{\"h\":\"Optional 增强\",\"t\":[\"Optional 新增了orElseThrow()方法来在没有值时抛出指定的异常。\",\"Optional.ofNullable(cache.getIfPresent(key)) .orElseThrow(() -> new PrestoException(NOT_FOUND, \\\"Missing entry found for key: \\\" + key)); \"]},\"147\":{\"h\":\"应用程序类数据共享(扩展 CDS 功能)\",\"t\":[\"在 Java 5 中就已经引入了类数据共享机制 (Class Data Sharing，简称 CDS)，允许将一组类预处理为共享归档文件，以便在运行时能够进行内存映射以减少 Java 程序的启动时间，当多个 Java 虚拟机（JVM）共享相同的归档文件时，还可以减少动态内存的占用量，同时减少多个虚拟机在同一个物理或虚拟的机器上运行时的资源占用。CDS 在当时还是 Oracle JDK 的商业特性。\",\"Java 10 在现有的 CDS 功能基础上再次拓展，以允许应用类放置在共享存档中。CDS 特性在原来的 bootstrap 类基础之上，扩展加入了应用类的 CDS 为 (Application Class-Data Sharing，AppCDS) 支持，大大加大了 CDS 的适用范围。其原理为：在启动时记录加载类的过程，写入到文本文件中，再次启动时直接读取此启动文本并加载。设想如果应用环境没有大的变化，启动速度就会得到提升。\"]},\"148\":{\"h\":\"实验性的基于 Java 的 JIT 编译器\",\"t\":[\"Graal 是一个基于 Java 语言编写的 JIT 编译器，是 JDK 9 中引入的实验性 Ahead-of-Time (AOT) 编译器的基础。\",\"Oracle 的 HotSpot VM 便附带两个用 C++ 实现的 JIT compiler：C1 及 C2。在 Java 10 (Linux/x64, macOS/x64) 中，默认情况下 HotSpot 仍使用 C2，但通过向 java 命令添加 -XX:+UnlockExperimentalVMOptions -XX:+UseJVMCICompiler 参数便可将 C2 替换成 Graal。\",\"相关阅读：深入浅出 Java 10 的实验性 JIT 编译器 Graal - 郑雨迪\"]},\"149\":{\"h\":\"其他\",\"t\":[\"线程-局部管控：Java 10 中线程管控引入 JVM 安全点的概念，将允许在不运行全局 JVM 安全点的情况下实现线程回调，由线程本身或者 JVM 线程来执行，同时保持线程处于阻塞状态，这种方式使得停止单个线程变成可能，而不是只能启用或停止所有线程\",\"备用存储装置上的堆分配：Java 10 中将使得 JVM 能够使用适用于不同类型的存储机制的堆，在可选内存设备上进行堆内存分配\",\"......\"]},\"150\":{\"h\":\"参考\",\"t\":[\"Java 10 Features and Enhancements : https://howtodoinjava.com/java10/java10-features/\",\"Guide to Java10 : https://www.baeldung.com/java-10-overview\",\"4 Class Data Sharing : https://docs.oracle.com/javase/10/vm/class-data-sharing.htm#JSJVM-GUID-7EAA3411-8CF0-4D19-BD05-DF5E1780AA91\",\"File not found\"]},\"151\":{\"h\":\"Java 11 新特性概览\",\"t\":[\"Java 11 于 2018 年 9 月 25 日正式发布，这是很重要的一个版本！Java 11 和 2017 年 9 月份发布的 Java 9 以及 2018 年 3 月份发布的 Java 10 相比，其最大的区别就是：在长期支持(Long-Term-Support)方面，Oracle 表示会对 Java 11 提供大力支持，这一支持将会持续至 2026 年 9 月。这是据 Java 8 以后支持的首个长期版本。\",\"下面这张图是 Oracle 官方给出的 Oracle JDK 支持的时间线。\",\"概览（精选了一部分）：\",\"JEP 321：HTTP Client 标准化\",\"JEP 333：ZGC(可伸缩低延迟垃圾收集器)\",\"JEP 323：Lambda 参数的局部变量语法\",\"JEP 330：启动单文件源代码程序\"]},\"152\":{\"h\":\"HTTP Client 标准化\",\"t\":[\"Java 11 对 Java 9 中引入并在 Java 10 中进行了更新的 Http Client API 进行了标准化，在前两个版本中进行孵化的同时，Http Client 几乎被完全重写，并且现在完全支持异步非阻塞。\",\"并且，Java 11 中，Http Client 的包名由 jdk.incubator.http 改为java.net.http，该 API 通过 CompleteableFuture 提供非阻塞请求和响应语义。使用起来也很简单，如下：\",\"var request = HttpRequest.newBuilder() .uri(URI.create(\\\"https://javastack.cn\\\")) .GET() .build(); var client = HttpClient.newHttpClient(); // 同步 HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString()); System.out.println(response.body()); // 异步 client.sendAsync(request, HttpResponse.BodyHandlers.ofString()) .thenApply(HttpResponse::body) .thenAccept(System.out::println); \"]},\"153\":{\"h\":\"String 增强\",\"t\":[\"Java 11 增加了一系列的字符串处理方法：\",\"//判断字符串是否为空 \\\" \\\".isBlank();//true //去除字符串首尾空格 \\\" Java \\\".strip();// \\\"Java\\\" //去除字符串首部空格 \\\" Java \\\".stripLeading(); // \\\"Java \\\" //去除字符串尾部空格 \\\" Java \\\".stripTrailing(); // \\\" Java\\\" //重复字符串多少次 \\\"Java\\\".repeat(3); // \\\"JavaJavaJava\\\" //返回由行终止符分隔的字符串集合。 \\\"A\\\\nB\\\\nC\\\".lines().count(); // 3 \\\"A\\\\nB\\\\nC\\\".lines().collect(Collectors.toList()); \"]},\"154\":{\"h\":\"Optional 增强\",\"t\":[\"新增了isEmpty()方法来判断指定的 Optional 对象是否为空。\",\"var op = Optional.empty(); System.out.println(op.isEmpty());//判断指定的 Optional 对象是否为空 \"]},\"155\":{\"h\":\"ZGC(可伸缩低延迟垃圾收集器)\",\"t\":[\"ZGC 即 Z Garbage Collector，是一个可伸缩的、低延迟的垃圾收集器。\",\"ZGC 主要为了满足如下目标进行设计：\",\"GC 停顿时间不超过 10ms\",\"即能处理几百 MB 的小堆，也能处理几个 TB 的大堆\",\"应用吞吐能力不会下降超过 15%（与 G1 回收算法相比）\",\"方便在此基础上引入新的 GC 特性和利用 colored 针以及 Load barriers 优化奠定基础\",\"当前只支持 Linux/x64 位平台\",\"ZGC 目前 处在实验阶段，只支持 Linux/x64 平台。\",\"与 CMS 中的 ParNew 和 G1 类似，ZGC 也采用标记-复制算法，不过 ZGC 对该算法做了重大改进。\",\"在 ZGC 中出现 Stop The World 的情况会更少！\",\"详情可以看：《新一代垃圾回收器 ZGC 的探索与实践》\"]},\"156\":{\"h\":\"Lambda 参数的局部变量语法\",\"t\":[\"从 Java 10 开始，便引入了局部变量类型推断这一关键特性。类型推断允许使用关键字 var 作为局部变量的类型而不是实际类型，编译器根据分配给变量的值推断出类型。\",\"Java 10 中对 var 关键字存在几个限制\",\"只能用于局部变量上\",\"声明时必须初始化\",\"不能用作方法参数\",\"不能在 Lambda 表达式中使用\",\"Java11 开始允许开发者在 Lambda 表达式中使用 var 进行参数声明。\",\"// 下面两者是等价的 Consumer<String> consumer = (var i) -> System.out.println(i); Consumer<String> consumer = (String i) -> System.out.println(i); \"]},\"157\":{\"h\":\"启动单文件源代码程序\",\"t\":[\"这意味着我们可以运行单一文件的 Java 源代码。此功能允许使用 Java 解释器直接执行 Java 源代码。源代码在内存中编译，然后由解释器执行，不需要在磁盘上生成 .class 文件了。唯一的约束在于所有相关的类必须定义在同一个 Java 文件中。\",\"对于 Java 初学者并希望尝试简单程序的人特别有用，并且能和 jshell 一起使用。一定能程度上增强了使用 Java 来写脚本程序的能力。\"]},\"158\":{\"h\":\"其他新特性\",\"t\":[\"新的垃圾回收器 Epsilon：一个完全消极的 GC 实现，分配有限的内存资源，最大限度的降低内存占用和内存吞吐延迟时间\",\"低开销的 Heap Profiling：Java 11 中提供一种低开销的 Java 堆分配采样方法，能够得到堆分配的 Java 对象信息，并且能够通过 JVMTI 访问堆信息\",\"TLS1.3 协议：Java 11 中包含了传输层安全性（TLS）1.3 规范（RFC 8446）的实现，替换了之前版本中包含的 TLS，包括 TLS 1.2，同时还改进了其他 TLS 功能，例如 OCSP 装订扩展（RFC 6066，RFC 6961），以及会话散列和扩展主密钥扩展（RFC 7627），在安全性和性能方面也做了很多提升\",\"飞行记录器(Java Flight Recorder)：飞行记录器之前是商业版 JDK 的一项分析工具，但在 Java 11 中，其代码被包含到公开代码库中，这样所有人都能使用该功能了。\",\"......\"]},\"159\":{\"h\":\"参考\",\"t\":[\"JDK 11 Release Notes：https://www.oracle.com/java/technologies/javase/11-relnote-issues.html\",\"Java 11 – Features and Comparison：https://www.geeksforgeeks.org/java-11-features-and-comparison/\",\"File not found\"]},\"160\":{\"h\":\"Java 12  & 13 新特性概览\"},\"161\":{\"h\":\"Java12\"},\"162\":{\"h\":\"String 增强\",\"t\":[\"Java 12 增加了两个的字符串处理方法，如以下所示。\",\"indent() 方法可以实现字符串缩进。\",\"String text = \\\"Java\\\"; // 缩进 4 格 text = text.indent(4); System.out.println(text); text = text.indent(-10); System.out.println(text); \",\"输出：\",\" Java Java \",\"transform() 方法可以用来转变指定字符串。\",\"String result = \\\"foo\\\".transform(input -> input + \\\" bar\\\"); System.out.println(result); // foo bar \"]},\"163\":{\"h\":\"Files 增强（文件比较）\",\"t\":[\"Java 12 添加了以下方法来比较两个文件：\",\"public static long mismatch(Path path, Path path2) throws IOException \",\"mismatch() 方法用于比较两个文件，并返回第一个不匹配字符的位置，如果文件相同则返回 -1L。\",\"代码示例（两个文件内容相同的情况）：\",\"Path filePath1 = Files.createTempFile(\\\"file1\\\", \\\".txt\\\"); Path filePath2 = Files.createTempFile(\\\"file2\\\", \\\".txt\\\"); Files.writeString(filePath1, \\\"Java 12 Article\\\"); Files.writeString(filePath2, \\\"Java 12 Article\\\"); long mismatch = Files.mismatch(filePath1, filePath2); assertEquals(-1, mismatch); \",\"代码示例（两个文件内容不相同的情况）：\",\"Path filePath3 = Files.createTempFile(\\\"file3\\\", \\\".txt\\\"); Path filePath4 = Files.createTempFile(\\\"file4\\\", \\\".txt\\\"); Files.writeString(filePath3, \\\"Java 12 Article\\\"); Files.writeString(filePath4, \\\"Java 12 Tutorial\\\"); long mismatch = Files.mismatch(filePath3, filePath4); assertEquals(8, mismatch); \"]},\"164\":{\"h\":\"数字格式化工具类\",\"t\":[\"NumberFormat 新增了对复杂的数字进行格式化的支持\",\"NumberFormat fmt = NumberFormat.getCompactNumberInstance(Locale.US, NumberFormat.Style.SHORT); String result = fmt.format(1000); System.out.println(result); \",\"输出:\",\"1K \"]},\"165\":{\"h\":\"Shenandoah GC\",\"t\":[\"Redhat 主导开发的 Pauseless GC 实现，主要目标是 99.9% 的暂停小于 10ms，暂停与堆大小无关等\",\"和 Java11 开源的 ZGC 相比（需要升级到 JDK11 才能使用），Shenandoah GC 有稳定的 JDK8u 版本，在 Java8 占据主要市场份额的今天有更大的可落地性。\"]},\"166\":{\"h\":\"G1 收集器优化\",\"t\":[\"Java12 为默认的垃圾收集器 G1 带来了两项更新:\",\"可中止的混合收集集合：JEP344 的实现，为了达到用户提供的停顿时间目标，JEP 344 通过把要被回收的区域集（混合收集集合）拆分为强制和可选部分，使 G1 垃圾回收器能中止垃圾回收过程。 G1 可以中止可选部分的回收以达到停顿时间目标\",\"及时返回未使用的已分配内存：JEP346 的实现，增强 G1 GC，以便在空闲时自动将 Java 堆内存返回给操作系统\"]},\"167\":{\"h\":\"预览新特性\",\"t\":[\"作为预览特性加入，需要在javac编译和java运行时增加参数--enable-preview 。\"]},\"168\":{\"h\":\"增强 Switch\",\"t\":[\"传统的 switch 语法存在容易漏写 break 的问题，而且从代码整洁性层面来看，多个 break 本质也是一种重复。\",\"Java12 增强了 switch 表达式，使用类似 lambda 语法条件匹配成功后的执行块，不需要多写 break 。\",\"switch (day) { case MONDAY, FRIDAY, SUNDAY -> System.out.println(6); case TUESDAY -> System.out.println(7); case THURSDAY, SATURDAY -> System.out.println(8); case WEDNESDAY -> System.out.println(9); } \"]},\"169\":{\"h\":\"instanceof 模式匹配\",\"t\":[\"instanceof 主要在类型强转前探测对象的具体类型。\",\"之前的版本中，我们需要显示地对对象进行类型转换。\",\"Object obj = \\\"我是字符串\\\"; if(obj instanceof String){ String str = (String) obj; System.out.println(str); } \",\"新版的 instanceof 可以在判断是否属于具体的类型同时完成转换。\",\"Object obj = \\\"我是字符串\\\"; if(obj instanceof String str){ System.out.println(str); } \"]},\"170\":{\"h\":\"Java13\"},\"171\":{\"h\":\"增强 ZGC(释放未使用内存)\",\"t\":[\"在 Java 11 中实验性引入的 ZGC 在实际的使用中存在未能主动将未使用的内存释放给操作系统的问题。\",\"ZGC 堆由一组称为 ZPages 的堆区域组成。在 GC 周期中清空 ZPages 区域时，它们将被释放并返回到页面缓存 ZPageCache 中，此缓存中的 ZPages 按最近最少使用（LRU）的顺序，并按照大小进行组织。\",\"在 Java 13 中，ZGC 将向操作系统返回被标识为长时间未使用的页面，这样它们将可以被其他进程重用。\"]},\"172\":{\"h\":\"SocketAPI 重构\",\"t\":[\"Java Socket API 终于迎来了重大更新！\",\"Java 13 将 Socket API 的底层进行了重写， NioSocketImpl 是对 PlainSocketImpl 的直接替代，它使用 java.util.concurrent 包下的锁而不是同步方法。如果要使用旧实现，请使用 -Djdk.net.usePlainSocketImpl=true。\",\"并且，在 Java 13 中是默认使用新的 Socket 实现。\",\"public final class NioSocketImpl extends SocketImpl implements PlatformSocketImpl { } \"]},\"173\":{\"h\":\"FileSystems\",\"t\":[\"FileSystems 类中添加了以下三种新方法，以便更容易地使用将文件内容视为文件系统的文件系统提供程序：\",\"newFileSystem(Path)\",\"newFileSystem(Path, Map<String, ?>)\",\"newFileSystem(Path, Map<String, ?>, ClassLoader)\"]},\"174\":{\"h\":\"动态 CDS 存档\",\"t\":[\"Java 13 中对 Java 10 中引入的应用程序类数据共享(AppCDS)进行了进一步的简化、改进和扩展，即：允许在 Java 应用程序执行结束时动态进行类归档，具体能够被归档的类包括所有已被加载，但不属于默认基层 CDS 的应用程序类和引用类库中的类。\",\"这提高了应用程序类数据共享（AppCDS）的可用性。无需用户进行试运行来为每个应用程序创建类列表。\",\"$ java -XX:ArchiveClassesAtExit=my_app_cds.jsa -cp my_app.jar $ java -XX:SharedArchiveFile=my_app_cds.jsa -cp my_app.jar \"]},\"175\":{\"h\":\"预览新特性\"},\"176\":{\"h\":\"文本块\",\"t\":[\"解决 Java 定义多行字符串时只能通过换行转义或者换行连接符来变通支持的问题，引入三重双引号来定义多行文本。\",\"Java 13 支持两个 \\\"\\\"\\\" 符号中间的任何内容都会被解释为字符串的一部分，包括换行符。\",\"未支持文本块之前的 HTML 写法：\",\"String json =\\\"{\\\\n\\\" + \\\" \\\\\\\"name\\\\\\\":\\\\\\\"mkyong\\\\\\\",\\\\n\\\" + \\\" \\\\\\\"age\\\\\\\":38\\\\n\\\" + \\\"}\\\\n\\\"; \",\"支持文本块之后的 HTML 写法：\",\" String json = \\\"\\\"\\\" { \\\"name\\\":\\\"mkyong\\\", \\\"age\\\":38 } \\\"\\\"\\\"; \",\"未支持文本块之前的 SQL 写法：\",\"String query = \\\"SELECT `EMP_ID`, `LAST_NAME` FROM `EMPLOYEE_TB`\\\\n\\\" + \\\"WHERE `CITY` = 'INDIANAPOLIS'\\\\n\\\" + \\\"ORDER BY `EMP_ID`, `LAST_NAME`;\\\\n\\\"; \",\"支持文本块之后的 SQL 写法：\",\"String query = \\\"\\\"\\\" SELECT `EMP_ID`, `LAST_NAME` FROM `EMPLOYEE_TB` WHERE `CITY` = 'INDIANAPOLIS' ORDER BY `EMP_ID`, `LAST_NAME`; \\\"\\\"\\\"; \",\"另外，String 类新增加了 3 个新的方法来操作文本块：\",\"formatted(Object... args)：它类似于 String 的format()方法。添加它是为了支持文本块的格式设置。\",\"stripIndent()：用于去除文本块中每一行开头和结尾的空格。\",\"translateEscapes()：转义序列如 “\\\\\\\\t” 转换为 “\\\\t”\",\"由于文本块是一项预览功能，可以在未来版本中删除，因此这些新方法被标记为弃用。\",\"@Deprecated(forRemoval=true, since=\\\"13\\\") public String stripIndent() { } @Deprecated(forRemoval=true, since=\\\"13\\\") public String formatted(Object... args) { } @Deprecated(forRemoval=true, since=\\\"13\\\") public String translateEscapes() { } \"]},\"177\":{\"h\":\"增强 Switch(引入 yield 关键字到 Switch 中)\",\"t\":[\"Switch 表达式中就多了一个关键字用于跳出 Switch 块的关键字 yield，主要用于返回一个值\",\"yield和 return 的区别在于：return 会直接跳出当前循环或者方法，而 yield 只会跳出当前 Switch 块，同时在使用 yield 时，需要有 default 条件\",\" private static String descLanguage(String name) { return switch (name) { case \\\"Java\\\": yield \\\"object-oriented, platform independent and secured\\\"; case \\\"Ruby\\\": yield \\\"a programmer's best friend\\\"; default: yield name +\\\" is a good language\\\"; }; } \"]},\"178\":{\"h\":\"补充\"},\"179\":{\"h\":\"关于预览特性\",\"t\":[\"先贴一段 oracle 官网原文：This is a preview feature, which is a feature whose design, specification, and implementation are complete, but is not permanent, which means that the feature may exist in a different form or not at all in future JDK releases. To compile and run code that contains preview features, you must specify additional command-line options.\",\"这是一个预览功能，该功能的设计，规格和实现是完整的，但不是永久性的，这意味着该功能可能以其他形式存在或在将来的 JDK 版本中根本不存在。 要编译和运行包含预览功能的代码，必须指定其他命令行选项。\",\"就以switch的增强为例子，从 Java12 中推出，到 Java13 中将继续增强，直到 Java14 才正式转正进入 JDK 可以放心使用，不用考虑后续 JDK 版本对其的改动或修改\",\"一方面可以看出 JDK 作为标准平台在增加新特性的严谨态度，另一方面个人认为是对于预览特性应该采取审慎使用的态度。特性的设计和实现容易，但是其实际价值依然需要在使用中去验证\"]},\"180\":{\"h\":\"JVM 虚拟机优化\",\"t\":[\"每次 Java 版本的发布都伴随着对 JVM 虚拟机的优化，包括对现有垃圾回收算法的改进，引入新的垃圾回收算法，移除老旧的不再适用于今天的垃圾回收算法等\",\"整体优化的方向是高效，低时延的垃圾回收表现\",\"对于日常的应用开发者可能比较关注新的语法特性，但是从一个公司角度来说，在考虑是否升级 Java 平台时更加考虑的是JVM 运行时的提升\"]},\"181\":{\"h\":\"参考\",\"t\":[\"JDK Project Overview：<https://openjdk.java.net/projects/jdk/ >\",\"Oracle Java12 ReleaseNote：https://www.oracle.com/java/technologies/javase/12all-relnotes.htm\",\"What is new in Java 12：https://mkyong.com/java/what-is-new-in-java-12/\",\"Oracle Java13 ReleaseNote https://www.oracle.com/technetwork/java/javase/13all-relnotes-5461743.html#NewFeature\",\"New Java13 Features https://www.baeldung.com/java-13-new-features\",\"Java13 新特性概述 https://www.ibm.com/developerworks/cn/java/the-new-features-of-Java-13/index.html\",\"File not found\"]},\"182\":{\"h\":\"Java 14  & 15 新特性概览\"},\"183\":{\"h\":\"Java14\"},\"184\":{\"h\":\"空指针异常精准提示\",\"t\":[\"通过 JVM 参数中添加-XX:+ShowCodeDetailsInExceptionMessages，可以在空指针异常中获取更为详细的调用信息，更快的定位和解决问题。\",\"a.b.c.i = 99; // 假设这段代码会发生空指针 \",\"Java 14 之前：\",\"Exception in thread \\\"main\\\" java.lang.NullPointerException at NullPointerExample.main(NullPointerExample.java:5) \",\"Java 14 之后：\",\" // 增加参数后提示的异常中很明确的告知了哪里为空导致 Exception in thread \\\"main\\\" java.lang.NullPointerException: Cannot read field 'c' because 'a.b' is null. at Prog.main(Prog.java:5) \"]},\"185\":{\"h\":\"switch 的增强(转正)\",\"t\":[\"Java12 引入的 switch（预览特性）在 Java14 变为正式版本，不需要增加参数来启用，直接在 JDK14 中就能使用。\",\"Java12 为 switch 表达式引入了类似 lambda 语法条件匹配成功后的执行块，不需要多写 break ，Java13 提供了 yield 来在 block 中返回值。\",\"String result = switch (day) { case \\\"M\\\", \\\"W\\\", \\\"F\\\" -> \\\"MWF\\\"; case \\\"T\\\", \\\"TH\\\", \\\"S\\\" -> \\\"TTS\\\"; default -> { if(day.isEmpty()) yield \\\"Please insert a valid day.\\\"; else yield \\\"Looks like a Sunday.\\\"; } }; System.out.println(result); \"]},\"186\":{\"h\":\"预览新特性\"},\"187\":{\"h\":\"record 关键字\",\"t\":[\"record 关键字可以简化 数据类（一个 Java 类一旦实例化就不能再修改）的定义方式，使用 record 代替 class 定义的类，只需要声明属性，就可以在获得属性的访问方法，以及 toString()，hashCode(), equals()方法\",\"类似于使用 class 定义类，同时使用了 lombok 插件，并打上了@Getter,@ToString,@EqualsAndHashCode注解\",\"/** * 这个类具有两个特征 * 1. 所有成员属性都是final * 2. 全部方法由构造方法，和两个成员属性访问器组成（共三个） * 那么这种类就很适合使用record来声明 */ final class Rectangle implements Shape { final double length; final double width; public Rectangle(double length, double width) { this.length = length; this.width = width; } double length() { return length; } double width() { return width; } } /** * 1. 使用record声明的类会自动拥有上面类中的三个方法 * 2. 在这基础上还附赠了equals()，hashCode()方法以及toString()方法 * 3. toString方法中包括所有成员属性的字符串表示形式及其名称 */ record Rectangle(float length, float width) { } \"]},\"188\":{\"h\":\"文本块\",\"t\":[\"Java14 中，文本块依然是预览特性，不过，其引入了两个新的转义字符：\",\"\\\\ : 表示行尾，不引入换行符\",\"\\\\s：表示单个空格\",\"String str = \\\"凡心所向，素履所往，生如逆旅，一苇以航。\\\"; String str2 = \\\"\\\"\\\" 凡心所向，素履所往， \\\\ 生如逆旅，一苇以航。\\\"\\\"\\\"; System.out.println(str2);// 凡心所向，素履所往， 生如逆旅，一苇以航。 String text = \\\"\\\"\\\" java c++\\\\sphp \\\"\\\"\\\"; System.out.println(text); //输出： java c++ php \"]},\"189\":{\"h\":\"instanceof 增强\",\"t\":[\"依然是预览特性 ，Java 12 新特性中介绍过。\"]},\"190\":{\"h\":\"其他\",\"t\":[\"从 Java11 引入的 ZGC 作为继 G1 过后的下一代 GC 算法，从支持 Linux 平台到 Java14 开始支持 MacOS 和 Windows（个人感觉是终于可以在日常开发工具中先体验下 ZGC 的效果了，虽然其实 G1 也够用）\",\"移除了 CMS(Concurrent Mark Sweep) 垃圾收集器（功成而退）\",\"新增了 jpackage 工具，标配将应用打成 jar 包外，还支持不同平台的特性包，比如 linux 下的deb和rpm，window 平台下的msi和exe\"]},\"191\":{\"h\":\"Java15\"},\"192\":{\"h\":\"CharSequence\",\"t\":[\"CharSequence 接口添加了一个默认方法 isEmpty() 来判断字符序列为空，如果是则返回 true。\",\"public interface CharSequence { default boolean isEmpty() { return this.length() == 0; } } \"]},\"193\":{\"h\":\"TreeMap\",\"t\":[\"TreeMap 新引入了下面这些方法：\",\"putIfAbsent()\",\"computeIfAbsent()\",\"computeIfPresent()\",\"compute()\",\"merge()\"]},\"194\":{\"h\":\"ZGC(转正)\",\"t\":[\"Java11 的时候 ，ZGC 还在试验阶段。\",\"当时，ZGC 的出现让众多 Java 开发者看到了垃圾回收器的另外一种可能，因此备受关注。\",\"经过多个版本的迭代，不断的完善和修复问题，ZGC 在 Java 15 已经可以正式使用了！\",\"不过，默认的垃圾回收器依然是 G1。你可以通过下面的参数启动 ZGC：\",\"$ java -XX:+UseZGC className \"]},\"195\":{\"h\":\"EdDSA(数字签名算法)\",\"t\":[\"新加入了一个安全性和性能都更强的基于 Edwards-Curve Digital Signature Algorithm （EdDSA）实现的数字签名算法。\",\"虽然其性能优于现有的 ECDSA 实现，不过，它并不会完全取代 JDK 中现有的椭圆曲线数字签名算法( ECDSA)。\",\"KeyPairGenerator kpg = KeyPairGenerator.getInstance(\\\"Ed25519\\\"); KeyPair kp = kpg.generateKeyPair(); byte[] msg = \\\"test_string\\\".getBytes(StandardCharsets.UTF_8); Signature sig = Signature.getInstance(\\\"Ed25519\\\"); sig.initSign(kp.getPrivate()); sig.update(msg); byte[] s = sig.sign(); String encodedString = Base64.getEncoder().encodeToString(s); System.out.println(encodedString); \",\"输出：\",\"0Hc0lxxASZNvS52WsvnncJOH/mlFhnA8Tc6D/k5DtAX5BSsNVjtPF4R4+yMWXVjrvB2mxVXmChIbki6goFBgAg== \"]},\"196\":{\"h\":\"文本块(转正)\",\"t\":[\"在 Java 15 ，文本块是正式的功能特性了。\"]},\"197\":{\"h\":\"隐藏类(Hidden Classes)\",\"t\":[\"隐藏类是为框架（frameworks）所设计的，隐藏类不能直接被其他类的字节码使用，只能在运行时生成类并通过反射间接使用它们。\"]},\"198\":{\"h\":\"预览新特性\"},\"199\":{\"h\":\"密封类\",\"t\":[\"密封类（Sealed Classes） 是 Java 15 中的一个预览新特性。\",\"没有密封类之前，在 Java 中如果想让一个类不能被继承和修改，我们可以使用final 关键字对类进行修饰。不过，这种方式不太灵活，直接把一个类的继承和修改渠道给堵死了。\",\"密封类可以对继承或者实现它们的类进行限制，这样这个类就只能被指定的类继承。\",\"// 抽象类 Person 只允许 Employee 和 Manager 继承。 public abstract sealed class Person permits Employee, Manager { //... } \",\"另外，任何扩展密封类的类本身都必须声明为 sealed、non-sealed 或 final。\",\"public final class Employee extends Person { } public non-sealed class Manager extends Person { } \",\"如果允许扩展的子类和封闭类在同一个源代码文件里，封闭类可以不使用 permits 语句，Java 编译器将检索源文件，在编译期为封闭类添加上许可的子类。\"]},\"200\":{\"h\":\"instanceof 模式匹配\",\"t\":[\"Java 15 并没有对此特性进行调整，继续预览特性，主要用于接受更多的使用反馈。\",\"在未来的 Java 版本中，Java 的目标是继续完善 instanceof 模式匹配新特性。\"]},\"201\":{\"h\":\"其他\",\"t\":[\"Nashorn JavaScript 引擎彻底移除：Nashorn 从 Java8 开始引入的 JavaScript 引擎，Java9 对 Nashorn 做了些增强，实现了一些 ES6 的新特性。在 Java 11 中就已经被弃用，到了 Java 15 就彻底被删除了。\",\"DatagramSocket API 重构\",\"禁用和废弃偏向锁（Biased Locking）：偏向锁的引入增加了 JVM 的复杂性大于其带来的性能提升。不过，你仍然可以使用 -XX:+UseBiasedLocking 启用偏向锁定，但它会提示 这是一个已弃用的 API。\",\"......\",\"File not found\"]},\"202\":{\"h\":\"Java 16 新特性概览\",\"t\":[\"Java 16 在 2021 年 3 月 16 日正式发布，非长期支持（LTS）版本。\",\"相关阅读：OpenJDK Java 16 文档 。\"]},\"203\":{\"h\":\"JEP 338:向量 API(第一次孵化)\",\"t\":[\"向量（Vector） API 最初由 JEP 338 提出，并作为孵化 API集成到 Java 16 中。第二轮孵化由 JEP 414 提出并集成到 Java 17 中，第三轮孵化由 JEP 417 提出并集成到 Java 18 中，第四轮由 JEP 426 提出并集成到了 Java 19 中。\",\"该孵化器 API 提供了一个 API 的初始迭代以表达一些向量计算，这些计算在运行时可靠地编译为支持的 CPU 架构上的最佳向量硬件指令，从而获得优于同等标量计算的性能，充分利用单指令多数据（SIMD）技术（大多数现代 CPU 上都可以使用的一种指令）。尽管 HotSpot 支持自动向量化，但是可转换的标量操作集有限且易受代码更改的影响。该 API 将使开发人员能够轻松地用 Java 编写可移植的高性能向量算法。\",\"在 Java 18 新特性概览 中，我有详细介绍到向量 API，这里就不再做额外的介绍了。\"]},\"204\":{\"h\":\"JEP 347:启用 C++ 14 语言特性\",\"t\":[\"Java 16 允许在 JDK 的 C++ 源代码中使用 C++14 语言特性，并提供在 HotSpot 代码中可以使用哪些特性的具体指导。\",\"在 Java 15 中，JDK 中 C++ 代码使用的语言特性仅限于 C++98/03 语言标准。它要求更新各种平台编译器的最低可接受版本。\"]},\"205\":{\"h\":\"JEP 376:ZGC 并发线程堆栈处理\",\"t\":[\"Java16 将 ZGC 线程栈处理从安全点转移到一个并发阶段，甚至在大堆上也允许在毫秒内暂停 GC 安全点。消除 ZGC 垃圾收集器中最后一个延迟源可以极大地提高应用程序的性能和效率。\"]},\"206\":{\"h\":\"JEP 387:弹性元空间\",\"t\":[\"自从引入了 Metaspace 以来，根据反馈，Metaspace 经常占用过多的堆外内存，从而导致内存浪费。弹性元空间这个特性可将未使用的 HotSpot 类元数据（即元空间，metaspace）内存更快速地返回到操作系统，从而减少元空间的占用空间。\",\"并且，这个提案还简化了元空间的代码以降低维护成本。\"]},\"207\":{\"h\":\"JEP 390:对基于值的类发出警告\",\"t\":[\"以下介绍摘自：实操 | 剖析 Java16 新语法特性，原文写的很不错，推荐阅读。\",\"早在 Java9 版本时，Java 的设计者们就对 @Deprecated 注解进行了一次升级，增加了 since 和 forRemoval 等 2 个新元素。其中，since 元素用于指定标记了 @Deprecated 注解的 API 被弃用时的版本，而 forRemoval 则进一步明确了 API 标记 @Deprecated 注解时的语义，如果forRemoval=true时，则表示该 API 在未来版本中肯定会被删除，开发人员应该使用新的 API 进行替代，不再容易产生歧义（Java9 之前，标记 @Deprecated 注解的 API，语义上存在多种可能性，比如：存在使用风险、可能在未来存在兼容性错误、可能在未来版本中被删除，以及应该使用更好的替代方案等）。\",\"仔细观察原始类型的包装类（比如：java.lang.Integer、java.lang.Double），不难发现，其构造函数上都已经标记有@Deprecated(since=\\\"9\\\", forRemoval = true)注解，这就意味着其构造函数在将来会被删除，不应该在程序中继续使用诸如new Integer();这样的编码方式（建议使用Integer a = 10;或者Integer.valueOf()函数），如果继续使用，编译期将会产生'Integer(int)' is deprecated and marked for removal 告警。并且，值得注意的是，这些包装类型已经被指定为同 java.util.Optional 和 java.time.LocalDateTime 一样的值类型。\",\"其次，如果继续在 synchronized 同步块中使用值类型，将会在编译期和运行期产生警告，甚至是异常。在此大家需要注意，就算编译期和运行期没有产生警告和异常，也不建议在 synchronized 同步块中使用值类型，举个自增的例子。示例 1-5：\",\"public void inc(Integer count) { for (int i = 0; i < 10; i++) { new Thread(() -> { synchronized (count) { count++; } }).start(); } } \",\"当执行上述程序示例时，最终的输出结果一定会与你的期望产生差异，这是许多新人经常犯错的一个点，因为在并发环境下，Integer 对象根本无法通过 synchronized 来保证线程安全，这是因为每次的count++操作，所产生的 hashcode 均不同，简而言之，每次加锁都锁在了不同的对象上。因此，如果希望在实际的开发过程中保证其原子性，应该使用 AtomicInteger。\"]},\"208\":{\"h\":\"JEP 392:打包工具\",\"t\":[\"在 Java 14 中，JEP 343 引入了打包工具，命令是 jpackage。在 Java 15 中，继续孵化，现在在 Java 16 中，终于成为了正式功能。\",\"这个打包工具允许打包自包含的 Java 应用程序。它支持原生打包格式，为最终用户提供自然的安装体验，这些格式包括 Windows 上的 msi 和 exe、macOS 上的 pkg 和 dmg，还有 Linux 上的 deb 和 rpm。它还允许在打包时指定启动时参数，并且可以从命令行直接调用，也可以通过 ToolProvider API 以编程方式调用。注意 jpackage 模块名称从 jdk.incubator.jpackage 更改为 jdk.jpackage。这将改善最终用户在安装应用程序时的体验，并简化了“应用商店”模型的部署。\",\"关于这个打包工具的实际使用，可以看这个视频 Playing with Java 16 jpackage（需要梯子）。\"]},\"209\":{\"h\":\"JEP 393:外部内存访问 API(第三次孵化)\",\"t\":[\"引入外部内存访问 API 以允许 Java 程序安全有效地访问 Java 堆之外的外部内存。\",\"Java 14( JEP 370) 的时候，第一次孵化外部内存访问 API，Java 15 中进行了第二次复活（JEP 383），在 Java 16 中进行了第三次孵化。\",\"引入外部内存访问 API 的目的如下：\",\"通用：单个 API 应该能够对各种外部内存（如本机内存、持久内存、堆内存等）进行操作。\",\"安全：无论操作何种内存，API 都不应该破坏 JVM 的安全性。\",\"控制：可以自由的选择如何释放内存（显式、隐式等）。\",\"可用：如果需要访问外部内存，API 应该是 sun.misc.Unsafe.\"]},\"210\":{\"h\":\"JEP 394:instanceof 模式匹配(转正)\",\"t\":[\"JDK 版本\",\"更新类型\",\"JEP\",\"更新内容\",\"Java SE 14\",\"preview\",\"JEP 305\",\"首次引入 instanceof 模式匹配。\",\"Java SE 15\",\"Second Preview\",\"JEP 375\",\"相比较上个版本无变化，继续收集更多反馈。\",\"Java SE 16\",\"Permanent Release\",\"JEP 394\",\"模式变量不再隐式为 final。\",\"从 Java 16 开始，你可以对 instanceof 中的变量值进行修改。\",\"// Old code if (o instanceof String) { String s = (String)o; ... use s ... } // New code if (o instanceof String s) { ... use s ... } \"]},\"211\":{\"h\":\"JEP 395:记录类型(转正)\",\"t\":[\"记录类型变更历史：\",\"JDK 版本\",\"更新类型\",\"JEP\",\"更新内容\",\"Java SE 14\",\"Preview\",\"JEP 359\",\"引入 record 关键字，record 提供一种紧凑的语法来定义类中的不可变数据。\",\"Java SE 15\",\"Second Preview\",\"JEP 384\",\"支持在局部方法和接口中使用 record。\",\"Java SE 16\",\"Permanent Release\",\"JEP 395\",\"非静态内部类可以定义非常量的静态成员。\",\"从 Java SE 16 开始，非静态内部类可以定义非常量的静态成员。\",\"public class Outer { class Inner { static int age; } } \",\"在 JDK 16 之前，如果写上面这种代码，IDE 会提示你静态字段 age 不能在非静态的内部类中定义，除非它用一个常量表达式初始化。（The field age cannot be declared static in a non-static inner type, unless initialized with a constant expression）\"]},\"212\":{\"h\":\"JEP 396:默认强封装 JDK 内部元素\",\"t\":[\"此特性会默认强封装 JDK 的所有内部元素，但关键内部 API（例如 sun.misc.Unsafe）除外。默认情况下，使用早期版本成功编译的访问 JDK 内部 API 的代码可能不再起作用。鼓励开发人员从使用内部元素迁移到使用标准 API 的方法上，以便他们及其用户都可以无缝升级到将来的 Java 版本。强封装由 JDK 9 的启动器选项–illegal-access 控制，到 JDK 15 默认改为 warning，从 JDK 16 开始默认为 deny。（目前）仍然可以使用单个命令行选项放宽对所有软件包的封装，将来只有使用–add-opens 打开特定的软件包才行。\"]},\"213\":{\"h\":\"JEP 397:密封类(预览)\",\"t\":[\"密封类由 JEP 360 提出预览，集成到了 Java 15 中。在 JDK 16 中， 密封类得到了改进（更加严格的引用检查和密封类的继承关系），由 JEP 397 提出了再次预览。\",\"在 Java 14 & 15 新特性概览 中，我有详细介绍到密封类，这里就不再做额外的介绍了。\"]},\"214\":{\"h\":\"其他优化与改进\",\"t\":[\"JEP 380:Unix-Domain 套接字通道：Unix-domain 套接字一直是大多数 Unix 平台的一个特性，现在在 Windows 10 和 Windows Server 2019 也提供了支持。此特性为 java.nio.channels 包的套接字通道和服务器套接字通道 API 添加了 Unix-domain（AF_UNIX）套接字支持。它扩展了继承的通道机制以支持 Unix-domain 套接字通道和服务器套接字通道。Unix-domain 套接字用于同一主机上的进程间通信（IPC）。它们在很大程度上类似于 TCP/IP，区别在于套接字是通过文件系统路径名而不是 Internet 协议（IP）地址和端口号寻址的。对于本地进程间通信，Unix-domain 套接字比 TCP/IP 环回连接更安全、更有效\",\"JEP 389:外部链接器 API(孵化)： 该孵化器 API 提供了静态类型、纯 Java 访问原生代码的特性，该 API 将大大简化绑定原生库的原本复杂且容易出错的过程。Java 1.1 就已通过 Java 原生接口（JNI）支持了原生方法调用，但并不好用。Java 开发人员应该能够为特定任务绑定特定的原生库。它还提供了外来函数支持，而无需任何中间的 JNI 粘合代码。\",\"JEP 357:从 Mercurial 迁移到 Git：在此之前，OpenJDK 源代码是使用版本管理工具 Mercurial 进行管理，现在迁移到了 Git。\",\"JEP 369:迁移到 GitHub：和 JEP 357 从 Mercurial 迁移到 Git 的改变一致，在把版本管理迁移到 Git 之后，选择了在 GitHub 上托管 OpenJDK 社区的 Git 仓库。不过只对 JDK 11 以及更高版本 JDK 进行了迁移。\",\"JEP 386:移植 Alpine Linux：Alpine Linux 是一个独立的、非商业的 Linux 发行版，它十分的小，一个容器需要不超过 8MB 的空间，最小安装到磁盘只需要大约 130MB 存储空间，并且十分的简单，同时兼顾了安全性。此提案将 JDK 移植到了 Apline Linux，由于 Apline Linux 是基于 musl lib 的轻量级 Linux 发行版，因此其他 x64 和 AArch64 架构上使用 musl lib 的 Linux 发行版也适用。\",\"JEP 388:Windows/AArch64 移植：这些 JEP 的重点不是移植工作本身，而是将它们集成到 JDK 主线存储库中；JEP 386 将 JDK 移植到 Alpine Linux 和其他使用 musl 作为 x64 上主要 C 库的发行版上。此外，JEP 388 将 JDK 移植到 Windows AArch64（ARM64）。\"]},\"215\":{\"h\":\"参考文献\",\"t\":[\"Java Language Changes\",\"Consolidated JDK 16 Release Notes\",\"Java 16 正式发布，新特性一一解析\",\"实操 | 剖析 Java16 新语法特性（写的很赞）\",\"File not found\"]},\"216\":{\"h\":\"Java 17 新特性概览（重要）\",\"t\":[\"Java 17 在 2021 年 9 月 14 日正式发布，是一个长期支持（LTS）版本。\",\"下面这张图是 Oracle 官方给出的 Oracle JDK 支持的时间线。可以看得到，Java\",\"17 最多可以支持到 2029 年 9 月份。\",\"Java 17 将是继 Java 8 以来最重要的长期支持（LTS）版本，是 Java 社区八年努力的成果。Spring 6.x 和 Spring Boot 3.x 最低支持的就是 Java 17。\",\"这次更新共带来 14 个新特性：\",\"JEP 306:Restore Always-Strict Floating-Point Semantics（恢复始终严格的浮点语义）\",\"JEP 356:Enhanced Pseudo-Random Number Generators（增强的伪随机数生成器）\",\"JEP 382:New macOS Rendering Pipeline（新的 macOS 渲染管道）\",\"JEP 391:macOS/AArch64 Port（支持 macOS AArch64）\",\"JEP 398:Deprecate the Applet API for Removal（删除已弃用的 Applet API）\",\"JEP 403:Strongly Encapsulate JDK Internals（更强大的封装 JDK 内部元素）\",\"JEP 406:Pattern Matching for switch (switch 的类型匹配)（预览）\",\"JEP 407:Remove RMI Activation（删除远程方法调用激活机制）\",\"JEP 409:Sealed Classes（密封类）（转正）\",\"JEP 410:Remove the Experimental AOT and JIT Compiler（删除实验性的 AOT 和 JIT 编译器）\",\"JEP 411:Deprecate the Security Manager for Removal（弃用安全管理器以进行删除）\",\"JEP 412:Foreign Function & Memory API (外部函数和内存 API)（孵化）\",\"JEP 414:Vector（向量） API （第二次孵化）\",\"JEP 415:Context-Specific Deserialization Filters\",\"这里只对 356、398、413、406、407、409、410、411、412、414 这几个我觉得比较重要的新特性进行详细介绍。\",\"相关阅读：OpenJDK Java 17 文档 。\"]},\"217\":{\"h\":\"JEP 356:增强的伪随机数生成器\",\"t\":[\"JDK 17 之前，我们可以借助 Random、ThreadLocalRandom和SplittableRandom来生成随机数。不过，这 3 个类都各有缺陷，且缺少常见的伪随机算法支持。\",\"Java 17 为伪随机数生成器 （pseudorandom number generator，PRNG，又称为确定性随机位生成器）增加了新的接口类型和实现，使得开发者更容易在应用程序中互换使用各种 PRNG 算法。\",\"PRNG 用来生成接近于绝对随机数序列的数字序列。一般来说，PRNG 会依赖于一个初始值，也称为种子，来生成对应的伪随机数序列。只要种子确定了，PRNG 所生成的随机数就是完全确定的，因此其生成的随机数序列并不是真正随机的。\",\"使用示例：\",\"RandomGeneratorFactory<RandomGenerator> l128X256MixRandom = RandomGeneratorFactory.of(\\\"L128X256MixRandom\\\"); // 使用时间戳作为随机数种子 RandomGenerator randomGenerator = l128X256MixRandom.create(System.currentTimeMillis()); // 生成随机数 randomGenerator.nextInt(10); \"]},\"218\":{\"h\":\"JEP 398:弃用 Applet API 以进行删除\",\"t\":[\"Applet API 用于编写在 Web 浏览器端运行的 Java 小程序，很多年前就已经被淘汰了，已经没有理由使用了。\",\"Applet API 在 Java 9 时被标记弃用（JEP 289），但不是为了删除。\"]},\"219\":{\"h\":\"JEP 406:switch 的类型匹配（预览）\",\"t\":[\"正如 instanceof 一样， switch 也紧跟着增加了类型匹配自动转换功能。\",\"instanceof 代码示例：\",\"// Old code if (o instanceof String) { String s = (String)o; ... use s ... } // New code if (o instanceof String s) { ... use s ... } \",\"switch 代码示例：\",\"// Old code static String formatter(Object o) { String formatted = \\\"unknown\\\"; if (o instanceof Integer i) { formatted = String.format(\\\"int %d\\\", i); } else if (o instanceof Long l) { formatted = String.format(\\\"long %d\\\", l); } else if (o instanceof Double d) { formatted = String.format(\\\"double %f\\\", d); } else if (o instanceof String s) { formatted = String.format(\\\"String %s\\\", s); } return formatted; } // New code static String formatterPatternSwitch(Object o) { return switch (o) { case Integer i -> String.format(\\\"int %d\\\", i); case Long l -> String.format(\\\"long %d\\\", l); case Double d -> String.format(\\\"double %f\\\", d); case String s -> String.format(\\\"String %s\\\", s); default -> o.toString(); }; } \",\"对于 null 值的判断也进行了优化。\",\"// Old code static void testFooBar(String s) { if (s == null) { System.out.println(\\\"oops!\\\"); return; } switch (s) { case \\\"Foo\\\", \\\"Bar\\\" -> System.out.println(\\\"Great\\\"); default -> System.out.println(\\\"Ok\\\"); } } // New code static void testFooBar(String s) { switch (s) { case null -> System.out.println(\\\"Oops\\\"); case \\\"Foo\\\", \\\"Bar\\\" -> System.out.println(\\\"Great\\\"); default -> System.out.println(\\\"Ok\\\"); } } \"]},\"220\":{\"h\":\"JEP 407:删除远程方法调用激活机制\",\"t\":[\"删除远程方法调用 (RMI) 激活机制，同时保留 RMI 的其余部分。RMI 激活机制已过时且不再使用。\"]},\"221\":{\"h\":\"JEP 409:密封类（转正）\",\"t\":[\"密封类由 JEP 360 提出预览，集成到了 Java 15 中。在 JDK 16 中， 密封类得到了改进（更加严格的引用检查和密封类的继承关系），由 JEP 397 提出了再次预览。\",\"在 Java 14 & 15 新特性概览 中，我有详细介绍到密封类，这里就不再做额外的介绍了。\"]},\"222\":{\"h\":\"JEP 410:删除实验性的 AOT 和 JIT 编译器\",\"t\":[\"在 Java 9 的 JEP 295 ,引入了实验性的提前 (AOT) 编译器，在启动虚拟机之前将 Java 类编译为本机代码。\",\"Java 17，删除实验性的提前 (AOT) 和即时 (JIT) 编译器，因为该编译器自推出以来很少使用，维护它所需的工作量很大。保留实验性的 Java 级 JVM 编译器接口 (JVMCI)，以便开发人员可以继续使用外部构建的编译器版本进行 JIT 编译。\"]},\"223\":{\"h\":\"JEP 411:弃用安全管理器以进行删除\",\"t\":[\"弃用安全管理器以便在将来的版本中删除。\",\"安全管理器可追溯到 Java 1.0，多年来，它一直不是保护客户端 Java 代码的主要方法，也很少用于保护服务器端代码。为了推动 Java 向前发展，Java 17 弃用安全管理器，以便与旧版 Applet API ( JEP 398 ) 一起移除。\"]},\"224\":{\"h\":\"JEP 412:外部函数和内存 API（孵化）\",\"t\":[\"Java 程序可以通过该 API 与 Java 运行时之外的代码和数据进行互操作。通过高效地调用外部函数（即 JVM 之外的代码）和安全地访问外部内存（即不受 JVM 管理的内存），该 API 使 Java 程序能够调用本机库并处理本机数据，而不会像 JNI 那样危险和脆弱。\",\"外部函数和内存 API 在 Java 17 中进行了第一轮孵化，由 JEP 412 提出。第二轮孵化由 JEP 419 提出并集成到了 Java 18 中，预览由 JEP 424 提出并集成到了 Java 19 中。\",\"在 Java 19 新特性概览 中，我有详细介绍到外部函数和内存 API，这里就不再做额外的介绍了。\"]},\"225\":{\"h\":\"JEP 414:向量 API（第二次孵化）\",\"t\":[\"向量（Vector） API 最初由 JEP 338 提出，并作为孵化 API集成到 Java 16 中。第二轮孵化由 JEP 414 提出并集成到 Java 17 中，第三轮孵化由 JEP 417 提出并集成到 Java 18 中，第四轮由 JEP 426 提出并集成到了 Java 19 中。\",\"该孵化器 API 提供了一个 API 的初始迭代以表达一些向量计算，这些计算在运行时可靠地编译为支持的 CPU 架构上的最佳向量硬件指令，从而获得优于同等标量计算的性能，充分利用单指令多数据（SIMD）技术（大多数现代 CPU 上都可以使用的一种指令）。尽管 HotSpot 支持自动向量化，但是可转换的标量操作集有限且易受代码更改的影响。该 API 将使开发人员能够轻松地用 Java 编写可移植的高性能向量算法。\",\"在 Java 18 新特性概览 中，我有详细介绍到向量 API，这里就不再做额外的介绍了。\",\"File not found\"]},\"226\":{\"h\":\"Java 18 新特性概览\",\"t\":[\"Java 18 在 2022 年 3 月 22 日正式发布，非长期支持版本。\",\"Java 18 带来了 9 个新特性：\",\"JEP 400:UTF-8 by Default（默认字符集为 UTF-8）\",\"JEP 408:Simple Web Server（简易的 Web 服务器）\",\"JEP 413:Code Snippets in Java API Documentation（Java API 文档中的代码片段）\",\"JEP 416:Reimplement Core Reflection with Method Handles（使用方法句柄重新实现反射核心）\",\"JEP 417:Vector（向量） API （第三次孵化）\",\"JEP 418:Internet-Address Resolution（互联网地址解析）SPI\",\"JEP 419:Foreign Function & Memory API（外部函数和内存 API）（第二次孵化）\",\"JEP 420:Pattern Matching for switch（switch 模式匹配）（第二次预览）\",\"JEP 421:Deprecate Finalization for Removal\",\"Java 17 中包含 14 个特性，Java 16 中包含 17 个特性，Java 15 中包含 14 个特性，Java 14 中包含 16 个特性。相比于前面发布的版本来说，Java 18 的新特性少了很多。\",\"这里只对 400、408、413、416、417、418、419 这几个我觉得比较重要的新特性进行详细介绍。\",\"相关阅读：\",\"OpenJDK Java 18 文档\",\"IntelliJ IDEA | Java 18 功能支持\"]},\"227\":{\"h\":\"JEP 400:默认字符集为 UTF-8\",\"t\":[\"JDK 终于将 UTF-8 设置为默认字符集。\",\"在 Java 17 及更早版本中，默认字符集是在 Java 虚拟机运行时才确定的，取决于不同的操作系统、区域设置等因素，因此存在潜在的风险。就比如说你在 Mac 上运行正常的一段打印文字到控制台的 Java 程序到了 Windows 上就会出现乱码，如果你不手动更改字符集的话。\"]},\"228\":{\"h\":\"JEP 408:简易的 Web 服务器\",\"t\":[\"Java 18 之后，你可以使用 jwebserver 命令启动一个简易的静态 Web 服务器。\",\"$ jwebserver Binding to loopback by default. For all interfaces use \\\"-b 0.0.0.0\\\" or \\\"-b ::\\\". Serving /cwd and subdirectories on 127.0.0.1 port 8000 URL: http://127.0.0.1:8000/ \",\"这个服务器不支持 CGI 和 Servlet，只限于静态文件。\"]},\"229\":{\"h\":\"JEP 413:优化 Java API 文档中的代码片段\",\"t\":[\"在 Java 18 之前，如果我们想要在 Javadoc 中引入代码片段可以使用 <pre>{@code ...}</pre> 。\",\"<pre>{@code lines of source code }</pre> \",\"<pre>{@code ...}</pre> 这种方式生成的效果比较一般。\",\"在 Java 18 之后，可以通过 @snippet 标签来做这件事情。\",\"/** * The following code shows how to use {@code Optional.isPresent}: * {@snippet : * if (v.isPresent()) { * System.out.println(\\\"v: \\\" + v.get()); * } * } */ \",\"@snippet 这种方式生成的效果更好且使用起来更方便一些。\"]},\"230\":{\"h\":\"JEP 416:使用方法句柄重新实现反射核心\",\"t\":[\"Java 18 改进了 java.lang.reflect.Method、Constructor 的实现逻辑，使之性能更好，速度更快。这项改动不会改动相关 API ，这意味着开发中不需要改动反射相关代码，就可以体验到性能更好反射。\",\"OpenJDK 官方给出了新老实现的反射性能基准测试结果。\",\"新老实现的反射性能基准测试结果\"]},\"231\":{\"h\":\"JEP 417: 向量 API（第三次孵化）\",\"t\":[\"向量（Vector） API 最初由 JEP 338 提出，并作为孵化 API集成到 Java 16 中。第二轮孵化由 JEP 414 提出并集成到 Java 17 中，第三轮孵化由 JEP 417 提出并集成到 Java 18 中，第四轮由 JEP 426 提出并集成到了 Java 19 中。\",\"向量计算由对向量的一系列操作组成。向量 API 用来表达向量计算，该计算可以在运行时可靠地编译为支持的 CPU 架构上的最佳向量指令，从而实现优于等效标量计算的性能。\",\"向量 API 的目标是为用户提供简洁易用且与平台无关的表达范围广泛的向量计算。\",\"这是对数组元素的简单标量计算：\",\"void scalarComputation(float[] a, float[] b, float[] c) { for (int i = 0; i < a.length; i++) { c[i] = (a[i] * a[i] + b[i] * b[i]) * -1.0f; } } \",\"这是使用 Vector API 进行的等效向量计算：\",\"static final VectorSpecies<Float> SPECIES = FloatVector.SPECIES_PREFERRED; void vectorComputation(float[] a, float[] b, float[] c) { int i = 0; int upperBound = SPECIES.loopBound(a.length); for (; i < upperBound; i += SPECIES.length()) { // FloatVector va, vb, vc; var va = FloatVector.fromArray(SPECIES, a, i); var vb = FloatVector.fromArray(SPECIES, b, i); var vc = va.mul(va) .add(vb.mul(vb)) .neg(); vc.intoArray(c, i); } for (; i < a.length; i++) { c[i] = (a[i] * a[i] + b[i] * b[i]) * -1.0f; } } \",\"在 JDK 18 中，向量 API 的性能得到了进一步的优化。\"]},\"232\":{\"h\":\"JEP 418:互联网地址解析 SPI\",\"t\":[\"Java 18 定义了一个全新的 SPI（service-provider interface），用于主要名称和地址的解析，以便 java.net.InetAddress 可以使用平台之外的第三方解析器。\"]},\"233\":{\"h\":\"JEP 419:Foreign Function & Memory API（第二次孵化）\",\"t\":[\"Java 程序可以通过该 API 与 Java 运行时之外的代码和数据进行互操作。通过高效地调用外部函数（即 JVM 之外的代码）和安全地访问外部内存（即不受 JVM 管理的内存），该 API 使 Java 程序能够调用本机库并处理本机数据，而不会像 JNI 那样危险和脆弱。\",\"外部函数和内存 API 在 Java 17 中进行了第一轮孵化，由 JEP 412 提出。第二轮孵化由 JEP 419 提出并集成到了 Java 18 中，预览由 JEP 424 提出并集成到了 Java 19 中。\",\"在 Java 19 新特性概览 中，我有详细介绍到外部函数和内存 API，这里就不再做额外的介绍了。\",\"File not found\"]},\"234\":{\"h\":\"Java 19 新特性概览\",\"t\":[\"JDK 19 定于 9 月 20 日正式发布以供生产使用，非长期支持版本。不过，JDK 19 中有一些比较重要的新特性值得关注。\",\"JDK 19 只有 7 个新特性：\",\"JEP 405: Record Patterns（记录模式）（预览）\",\"JEP 422: Linux/RISC-V Port\",\"JEP 424: Foreign Function & Memory API（外部函数和内存 API）（预览）\",\"JEP 425: Virtual Threads（虚拟线程）（预览）\",\"JEP 426: Vector（向量）API（第四次孵化）\",\"JEP 427: Pattern Matching for switch（switch 模式匹配）\",\"JEP 428: Structured Concurrency（结构化并发）（孵化）\",\"这里只对 424、425、426、428 这 4 个我觉得比较重要的新特性进行详细介绍。\",\"相关阅读：OpenJDK Java 19 文档\"]},\"235\":{\"h\":\"JEP 424: 外部函数和内存 API（预览）\",\"t\":[\"Java 程序可以通过该 API 与 Java 运行时之外的代码和数据进行互操作。通过高效地调用外部函数（即 JVM 之外的代码）和安全地访问外部内存（即不受 JVM 管理的内存），该 API 使 Java 程序能够调用本机库并处理本机数据，而不会像 JNI 那样危险和脆弱。\",\"外部函数和内存 API 在 Java 17 中进行了第一轮孵化，由 JEP 412 提出。第二轮孵化由 JEP 419 提出并集成到了 Java 18 中，预览由 JEP 424 提出并集成到了 Java 19 中。\",\"在没有外部函数和内存 API 之前：\",\"Java 通过 sun.misc.Unsafe 提供一些执行低级别、不安全操作的方法（如直接访问系统内存资源、自主管理内存资源等），Unsafe 类让 Java 语言拥有了类似 C 语言指针一样操作内存空间的能力的同时，也增加了 Java 语言的不安全性，不正确使用 Unsafe 类会使得程序出错的概率变大。\",\"Java 1.1 就已通过 Java 原生接口（JNI）支持了原生方法调用，但并不好用。JNI 实现起来过于复杂，步骤繁琐（具体的步骤可以参考这篇文章：Guide to JNI (Java Native Interface) ），不受 JVM 的语言安全机制控制，影响 Java 语言的跨平台特性。并且，JNI 的性能也不行，因为 JNI 方法调用不能从许多常见的 JIT 优化(如内联)中受益。虽然JNA、JNR和JavaCPP等框架对 JNI 进行了改进，但效果还是不太理想。\",\"引入外部函数和内存 API 就是为了解决 Java 访问外部函数和外部内存存在的一些痛点。\",\"Foreign Function & Memory API (FFM API) 定义了类和接口：\",\"分配外部内存：MemorySegment、、MemoryAddress和SegmentAllocator）；\",\"操作和访问结构化的外部内存：MemoryLayout, VarHandle；\",\"控制外部内存的分配和释放：MemorySession；\",\"调用外部函数：Linker、FunctionDescriptor和SymbolLookup。\",\"下面是 FFM API 使用示例，这段代码获取了 C 库函数的 radixsort 方法句柄，然后使用它对 Java 数组中的四个字符串进行排序。\",\"// 1. 在C库路径上查找外部函数 Linker linker = Linker.nativeLinker(); SymbolLookup stdlib = linker.defaultLookup(); MethodHandle radixSort = linker.downcallHandle( stdlib.lookup(\\\"radixsort\\\"), ...); // 2. 分配堆上内存以存储四个字符串 String[] javaStrings = { \\\"mouse\\\", \\\"cat\\\", \\\"dog\\\", \\\"car\\\" }; // 3. 分配堆外内存以存储四个指针 SegmentAllocator allocator = implicitAllocator(); MemorySegment offHeap = allocator.allocateArray(ValueLayout.ADDRESS, javaStrings.length); // 4. 将字符串从堆上复制到堆外 for (int i = 0; i < javaStrings.length; i++) { // 在堆外分配一个字符串，然后存储指向它的指针 MemorySegment cString = allocator.allocateUtf8String(javaStrings[i]); offHeap.setAtIndex(ValueLayout.ADDRESS, i, cString); } // 5. 通过调用外部函数对堆外数据进行排序 radixSort.invoke(offHeap, javaStrings.length, MemoryAddress.NULL, '\\\\0'); // 6. 将(重新排序的)字符串从堆外复制到堆上 for (int i = 0; i < javaStrings.length; i++) { MemoryAddress cStringPtr = offHeap.getAtIndex(ValueLayout.ADDRESS, i); javaStrings[i] = cStringPtr.getUtf8String(0); } assert Arrays.equals(javaStrings, new String[] {\\\"car\\\", \\\"cat\\\", \\\"dog\\\", \\\"mouse\\\"}); // true \"]},\"236\":{\"h\":\"JEP 425: 虚拟线程（预览）\",\"t\":[\"虚拟线程（Virtual Thread-）是 JDK 而不是 OS 实现的轻量级线程(Lightweight Process，LWP），许多虚拟线程共享同一个操作系统线程，虚拟线程的数量可以远大于操作系统线程的数量。\",\"虚拟线程在其他多线程语言中已经被证实是十分有用的，比如 Go 中的 Goroutine、Erlang 中的进程。\",\"虚拟线程避免了上下文切换的额外耗费，兼顾了多线程的优点，简化了高并发程序的复杂，可以有效减少编写、维护和观察高吞吐量并发应用程序的工作量。\",\"知乎有一个关于 Java 19 虚拟线程的讨论，感兴趣的可以去看看：https://www.zhihu.com/question/536743167 。\",\"Java 虚拟线程的详细解读和原理可以看下面这两篇文章：\",\"Java19 正式 GA！看虚拟线程如何大幅提高系统吞吐量\",\"虚拟线程 - VirtualThread 源码透视\"]},\"237\":{\"h\":\"JEP 426: 向量 API（第四次孵化）\",\"t\":[\"向量（Vector） API 最初由 JEP 338 提出，并作为孵化 API集成到 Java 16 中。第二轮孵化由 JEP 414 提出并集成到 Java 17 中，第三轮孵化由 JEP 417 提出并集成到 Java 18 中，第四轮由 JEP 426 提出并集成到了 Java 19 中。\",\"在 Java 18 新特性概览 中，我有详细介绍到向量 API，这里就不再做额外的介绍了。\"]},\"238\":{\"h\":\"JEP 428: 结构化并发(孵化)\",\"t\":[\"JDK 19 引入了结构化并发，一种多线程编程方法，目的是为了通过结构化并发 API 来简化多线程编程，并不是为了取代java.util.concurrent，目前处于孵化器阶段。\",\"结构化并发将不同线程中运行的多个任务视为单个工作单元，从而简化错误处理、提高可靠性并增强可观察性。也就是说，结构化并发保留了单线程代码的可读性、可维护性和可观察性。\",\"结构化并发的基本 API 是StructuredTaskScope。StructuredTaskScope 支持将任务拆分为多个并发子任务，在它们自己的线程中执行，并且子任务必须在主任务继续之前完成。\",\"StructuredTaskScope 的基本用法如下：\",\" try (var scope = new StructuredTaskScope<Object>()) { // 使用fork方法派生线程来执行子任务 Future<Integer> future1 = scope.fork(task1); Future<String> future2 = scope.fork(task2); // 等待线程完成 scope.join(); // 结果的处理可能包括处理或重新抛出异常 ... process results/exceptions ... } // close \",\"结构化并发非常适合虚拟线程，虚拟线程是 JDK 实现的轻量级线程。许多虚拟线程共享同一个操作系统线程，从而允许非常多的虚拟线程。\",\"File not found\"]},\"239\":{\"h\":\"Java 20 新特性概览\",\"t\":[\"JDK 20 于 2023 年 3 月 21 日发布，非长期支持版本。\",\"根据开发计划，下一个 LTS 版本就是将于 2023 年 9 月发布的 JDK 21。\",\"JDK 20 只有 7 个新特性：\",\"JEP 429：Scoped Values（作用域值）（第一次孵化）\",\"JEP 432：Record Patterns（记录模式）（第二次预览）\",\"JEP 433：switch 模式匹配（第四次预览）\",\"JEP 434: Foreign Function & Memory API（外部函数和内存 API）（第二次预览）\",\"JEP 436: Virtual Threads（虚拟线程）（第二次预览）\",\"JEP 437: Structured Concurrency（结构化并发）(第二次孵化)\",\"JEP 432：向量 API（第五次孵化）\"]},\"240\":{\"h\":\"JEP 429：作用域值（第一次孵化）\",\"t\":[\"作用域值（Scoped Values）它可以在线程内和线程间共享不可变的数据，优于线程局部变量，尤其是在使用大量虚拟线程时。\",\"final static ScopedValue<...> V = new ScopedValue<>(); // In some method ScopedValue.where(V, <value>) .run(() -> { ... V.get() ... call methods ... }); // In a method called directly or indirectly from the lambda expression ... V.get() ... \",\"作用域值允许在大型程序中的组件之间安全有效地共享数据，而无需求助于方法参数。\",\"关于作用域值的详细介绍，推荐阅读作用域值常见问题解答。\"]},\"241\":{\"h\":\"JEP 432：记录模式（第二次预览）\",\"t\":[\"记录模式（Record Patterns） 可对 record 的值进行解构，可以嵌套记录模式和类型模式，实现强大的、声明性的和可组合的数据导航和处理形式。\",\"记录模式不能单独使用，而是要与 instanceof 或 switch 模式匹配一同使用。\",\"记录模式在 Java 19 进行了第一次预览， 由JEP 405提出。JDK 20 中是第二次预览，由 JEP 432 提出。这次的改进包括：\",\"添加对通用记录模式类型参数推断的支持，\",\"添加对记录模式的支持以出现在增强语句的标题中for\",\"删除对命名记录模式的支持。\"]},\"242\":{\"h\":\"JEP 433：switch 模式匹配（第四次预览）\",\"t\":[\"正如 instanceof 一样， switch 也紧跟着增加了类型匹配自动转换功能。\",\"instanceof 代码示例：\",\"// Old code if (o instanceof String) { String s = (String)o; ... use s ... } // New code if (o instanceof String s) { ... use s ... } \",\"switch 代码示例：\",\"// Old code static String formatter(Object o) { String formatted = \\\"unknown\\\"; if (o instanceof Integer i) { formatted = String.format(\\\"int %d\\\", i); } else if (o instanceof Long l) { formatted = String.format(\\\"long %d\\\", l); } else if (o instanceof Double d) { formatted = String.format(\\\"double %f\\\", d); } else if (o instanceof String s) { formatted = String.format(\\\"String %s\\\", s); } return formatted; } // New code static String formatterPatternSwitch(Object o) { return switch (o) { case Integer i -> String.format(\\\"int %d\\\", i); case Long l -> String.format(\\\"long %d\\\", l); case Double d -> String.format(\\\"double %f\\\", d); case String s -> String.format(\\\"String %s\\\", s); default -> o.toString(); }; } \",\"switch 模式匹配分别在 Java17、Java18、Java19 中进行了预览，Java20 是第四次预览了。每一次的预览基本都会有一些小改进，这里就不细提了。\"]},\"243\":{\"h\":\"JEP 434: 外部函数和内存 API（第二次预览）\",\"t\":[\"Java 程序可以通过该 API 与 Java 运行时之外的代码和数据进行互操作。通过高效地调用外部函数（即 JVM 之外的代码）和安全地访问外部内存（即不受 JVM 管理的内存），该 API 使 Java 程序能够调用本机库并处理本机数据，而不会像 JNI 那样危险和脆弱。\",\"外部函数和内存 API 在 Java 17 中进行了第一轮孵化，由 JEP 412 提出。Java 18 中进行了第二次孵化，由 JEP 419 提出。Java 19 中是第一次预览，由 JEP 424 提出。\",\"JDK 20 中是第二次预览，由 JEP 434 提出，这次的改进包括：\",\"MemorySegment 和 MemoryAddress 抽象的统一\",\"增强的 MemoryLayout 层次结构\",\"MemorySession拆分为Arena和SegmentScope，以促进跨维护边界的段共享。\",\"在 Java 19 新特性概览 中，我有详细介绍到外部函数和内存 API，这里就不再做额外的介绍了。\"]},\"244\":{\"h\":\"JEP 436: 虚拟线程（第二次预览）\",\"t\":[\"虚拟线程（Virtual Thread-）是 JDK 而不是 OS 实现的轻量级线程(Lightweight Process，LWP），许多虚拟线程共享同一个操作系统线程，虚拟线程的数量可以远大于操作系统线程的数量。\",\"虚拟线程在其他多线程语言中已经被证实是十分有用的，比如 Go 中的 Goroutine、Erlang 中的进程。\",\"虚拟线程避免了上下文切换的额外耗费，兼顾了多线程的优点，简化了高并发程序的复杂，可以有效减少编写、维护和观察高吞吐量并发应用程序的工作量。\",\"知乎有一个关于 Java 19 虚拟线程的讨论，感兴趣的可以去看看：https://www.zhihu.com/question/536743167 。\",\"Java 虚拟线程的详细解读和原理可以看下面这两篇文章：\",\"Java19 正式 GA！看虚拟线程如何大幅提高系统吞吐量\",\"虚拟线程 - VirtualThread 源码透视\",\"虚拟线程在 Java 19 中进行了第一次预览，由JEP 425提出。JDK 20 中是第二次预览，做了一些细微变化，这里就不细提了。\"]},\"245\":{\"h\":\"JEP 437: 结构化并发(第二次孵化)\",\"t\":[\"Java 19 引入了结构化并发，一种多线程编程方法，目的是为了通过结构化并发 API 来简化多线程编程，并不是为了取代java.util.concurrent，目前处于孵化器阶段。\",\"结构化并发将不同线程中运行的多个任务视为单个工作单元，从而简化错误处理、提高可靠性并增强可观察性。也就是说，结构化并发保留了单线程代码的可读性、可维护性和可观察性。\",\"结构化并发的基本 API 是StructuredTaskScope。StructuredTaskScope 支持将任务拆分为多个并发子任务，在它们自己的线程中执行，并且子任务必须在主任务继续之前完成。\",\"StructuredTaskScope 的基本用法如下：\",\" try (var scope = new StructuredTaskScope<Object>()) { // 使用fork方法派生线程来执行子任务 Future<Integer> future1 = scope.fork(task1); Future<String> future2 = scope.fork(task2); // 等待线程完成 scope.join(); // 结果的处理可能包括处理或重新抛出异常 ... process results/exceptions ... } // close \",\"结构化并发非常适合虚拟线程，虚拟线程是 JDK 实现的轻量级线程。许多虚拟线程共享同一个操作系统线程，从而允许非常多的虚拟线程。\",\"JDK 20 中对结构化并发唯一变化是更新为支持在任务范围内创建的线程StructuredTaskScope继承范围值 这简化了跨线程共享不可变数据，详见JEP 429 。\"]},\"246\":{\"h\":\"JEP 432：向量 API（第五次孵化）\",\"t\":[\"向量计算由对向量的一系列操作组成。向量 API 用来表达向量计算，该计算可以在运行时可靠地编译为支持的 CPU 架构上的最佳向量指令，从而实现优于等效标量计算的性能。\",\"向量 API 的目标是为用户提供简洁易用且与平台无关的表达范围广泛的向量计算。\",\"向量（Vector） API 最初由 JEP 338 提出，并作为孵化 API集成到 Java 16 中。第二轮孵化由 JEP 414 提出并集成到 Java 17 中，第三轮孵化由 JEP 417 提出并集成到 Java 18 中，第四轮由 JEP 426 提出并集成到了 Java 19 中。\",\"Java20 的这次孵化基本没有改变向量 API ，只是进行了一些错误修复和性能增强，详见 JEP 438。\",\"File not found\"]},\"247\":{\"h\":\"Java 8 新特性实战\",\"t\":[\"本文来自cowbi的投稿~\",\"Oracle 于 2014 发布了 Java8（jdk1.8），诸多原因使它成为目前市场上使用最多的 jdk 版本。虽然发布距今已将近 7 年，但很多程序员对其新特性还是不够了解，尤其是用惯了 Java8 之前版本的老程序员，比如我。\",\"为了不脱离队伍太远，还是有必要对这些新特性做一些总结梳理。它较 jdk.7 有很多变化或者说是优化，比如 interface 里可以有静态方法，并且可以有方法体，这一点就颠覆了之前的认知；java.util.HashMap 数据结构里增加了红黑树；还有众所周知的 Lambda 表达式等等。本文不能把所有的新特性都给大家一一分享，只列出比较常用的新特性给大家做详细讲解。更多相关内容请看官网关于 Java8 的新特性的介绍。\"]},\"248\":{\"h\":\"Interface\",\"t\":[\"interface 的设计初衷是面向抽象，提高扩展性。这也留有一点遗憾，Interface 修改的时候，实现它的类也必须跟着改。\",\"为了解决接口的修改与现有的实现不兼容的问题。新 interface 的方法可以用default 或 static修饰，这样就可以有方法体，实现类也不必重写此方法。\",\"一个 interface 中可以有多个方法被它们修饰，这 2 个修饰符的区别主要也是普通方法和静态方法的区别。\",\"default修饰的方法，是普通实例方法，可以用this调用，可以被子类继承、重写。\",\"static修饰的方法，使用上和一般类静态方法一样。但它不能被子类继承，只能用Interface调用。\",\"我们来看一个实际的例子。\",\"public interface InterfaceNew { static void sm() { System.out.println(\\\"interface提供的方式实现\\\"); } static void sm2() { System.out.println(\\\"interface提供的方式实现\\\"); } default void def() { System.out.println(\\\"interface default方法\\\"); } default void def2() { System.out.println(\\\"interface default2方法\\\"); } //须要实现类重写 void f(); } public interface InterfaceNew1 { default void def() { System.out.println(\\\"InterfaceNew1 default方法\\\"); } } \",\"如果有一个类既实现了 InterfaceNew 接口又实现了 InterfaceNew1接口，它们都有def()，并且 InterfaceNew 接口和 InterfaceNew1接口没有继承关系的话，这时就必须重写def()。不然的话，编译的时候就会报错。\",\"public class InterfaceNewImpl implements InterfaceNew , InterfaceNew1{ public static void main(String[] args) { InterfaceNewImpl interfaceNew = new InterfaceNewImpl(); interfaceNew.def(); } @Override public void def() { InterfaceNew1.super.def(); } @Override public void f() { } } \",\"在 Java 8 ，接口和抽象类有什么区别的？\",\"很多小伙伴认为：“既然 interface 也可以有自己的方法实现，似乎和 abstract class 没多大区别了。”\",\"其实它们还是有区别的\",\"interface 和 class 的区别，好像是废话，主要有：\",\"接口多实现，类单继承\",\"接口的方法是 public abstract 修饰，变量是 public static final 修饰。 abstract class 可以用其他修饰符\",\"interface 的方法是更像是一个扩展插件。而 abstract class 的方法是要继承的。\",\"开始我们也提到，interface 新增default和static修饰的方法，为了解决接口的修改与现有的实现不兼容的问题，并不是为了要替代abstract class。在使用上，该用 abstract class 的地方还是要用 abstract class，不要因为 interface 的新特性而将之替换。\",\"记住接口永远和类不一样。\"]},\"249\":{\"h\":\"functional interface 函数式接口\",\"t\":[\"定义：也称 SAM 接口，即 Single Abstract Method interfaces，有且只有一个抽象方法，但可以有多个非抽象方法的接口。\",\"在 java 8 中专门有一个包放函数式接口java.util.function，该包下的所有接口都有 @FunctionalInterface 注解，提供函数式编程。\",\"在其他包中也有函数式接口，其中一些没有@FunctionalInterface 注解，但是只要符合函数式接口的定义就是函数式接口，与是否有\",\"@FunctionalInterface注解无关，注解只是在编译时起到强制规范定义的作用。其在 Lambda 表达式中有广泛的应用。\"]},\"250\":{\"h\":\"Lambda 表达式\",\"t\":[\"接下来谈众所周知的 Lambda 表达式。它是推动 Java 8 发布的最重要新特性。是继泛型(Generics)和注解(Annotation)以来最大的变化。\",\"使用 Lambda 表达式可以使代码变的更加简洁紧凑。让 java 也能支持简单的函数式编程。\",\"Lambda 表达式是一个匿名函数，java 8 允许把函数作为参数传递进方法中。\"]},\"251\":{\"h\":\"语法格式\",\"t\":[\"(parameters) -> expression 或 (parameters) ->{ statements; } \"]},\"252\":{\"h\":\"Lambda 实战\",\"t\":[\"我们用常用的实例来感受 Lambda 带来的便利\"]},\"253\":{\"h\":\"替代匿名内部类\",\"t\":[\"过去给方法传动态参数的唯一方法是使用内部类。比如\",\"1.Runnable 接口\",\"new Thread(new Runnable() { @Override public void run() { System.out.println(\\\"The runable now is using!\\\"); } }).start(); //用lambda new Thread(() -> System.out.println(\\\"It's a lambda function!\\\")).start(); \",\"2.Comparator 接口\",\"List<Integer> strings = Arrays.asList(1, 2, 3); Collections.sort(strings, new Comparator<Integer>() { @Override public int compare(Integer o1, Integer o2) { return o1 - o2;} }); //Lambda Collections.sort(strings, (Integer o1, Integer o2) -> o1 - o2); //分解开 Comparator<Integer> comparator = (Integer o1, Integer o2) -> o1 - o2; Collections.sort(strings, comparator); \",\"3.Listener 接口\",\"JButton button = new JButton(); button.addItemListener(new ItemListener() { @Override public void itemStateChanged(ItemEvent e) { e.getItem(); } }); //lambda button.addItemListener(e -> e.getItem()); \",\"4.自定义接口\",\"上面的 3 个例子是我们在开发过程中最常见的，从中也能体会到 Lambda 带来的便捷与清爽。它只保留实际用到的代码，把无用代码全部省略。那它对接口有没有要求呢？我们发现这些匿名内部类只重写了接口的一个方法，当然也只有一个方法须要重写。这就是我们上文提到的函数式接口，也就是说只要方法的参数是函数式接口都可以用 Lambda 表达式。\",\"@FunctionalInterface public interface Comparator<T>{} @FunctionalInterface public interface Runnable{} \",\"我们自定义一个函数式接口\",\"@FunctionalInterface public interface LambdaInterface { void f(); } //使用 public class LambdaClass { public static void forEg() { lambdaInterfaceDemo(()-> System.out.println(\\\"自定义函数式接口\\\")); } //函数式接口参数 static void lambdaInterfaceDemo(LambdaInterface i){ i.f(); } } \"]},\"254\":{\"h\":\"集合迭代\",\"t\":[\"void lamndaFor() { List<String> strings = Arrays.asList(\\\"1\\\", \\\"2\\\", \\\"3\\\"); //传统foreach for (String s : strings) { System.out.println(s); } //Lambda foreach strings.forEach((s) -> System.out.println(s)); //or strings.forEach(System.out::println); //map Map<Integer, String> map = new HashMap<>(); map.forEach((k,v)->System.out.println(v)); } \"]},\"255\":{\"h\":\"方法的引用\",\"t\":[\"Java 8 允许使用 :: 关键字来传递方法或者构造函数引用，无论如何，表达式返回的类型必须是 functional-interface。\",\"public class LambdaClassSuper { LambdaInterface sf(){ return null; } } public class LambdaClass extends LambdaClassSuper { public static LambdaInterface staticF() { return null; } public LambdaInterface f() { return null; } void show() { //1.调用静态函数，返回类型必须是functional-interface LambdaInterface t = LambdaClass::staticF; //2.实例方法调用 LambdaClass lambdaClass = new LambdaClass(); LambdaInterface lambdaInterface = lambdaClass::f; //3.超类上的方法调用 LambdaInterface superf = super::sf; //4. 构造方法调用 LambdaInterface tt = LambdaClassSuper::new; } } \"]},\"256\":{\"h\":\"访问变量\",\"t\":[\"int i = 0; Collections.sort(strings, (Integer o1, Integer o2) -> o1 - i); //i =3; \",\"lambda 表达式可以引用外边变量，但是该变量默认拥有 final 属性，不能被修改，如果修改，编译时就报错。\"]},\"257\":{\"h\":\"Stream\",\"t\":[\"java 新增了 java.util.stream 包，它和之前的流大同小异。之前接触最多的是资源流，比如java.io.FileInputStream，通过流把文件从一个地方输入到另一个地方，它只是内容搬运工，对文件内容不做任何CRUD。\",\"Stream依然不存储数据，不同的是它可以检索(Retrieve)和逻辑处理集合数据、包括筛选、排序、统计、计数等。可以想象成是 Sql 语句。\",\"它的源数据可以是 Collection、Array 等。由于它的方法参数都是函数式接口类型，所以一般和 Lambda 配合使用。\"]},\"258\":{\"h\":\"流类型\",\"t\":[\"stream 串行流\",\"parallelStream 并行流，可多线程执行\"]},\"259\":{\"h\":\"常用方法\",\"t\":[\"接下来我们看java.util.stream.Stream常用方法\",\"/** * 返回一个串行流 */ default Stream<E> stream() /** * 返回一个并行流 */ default Stream<E> parallelStream() /** * 返回T的流 */ public static<T> Stream<T> of(T t) /** * 返回其元素是指定值的顺序流。 */ public static<T> Stream<T> of(T... values) { return Arrays.stream(values); } /** * 过滤，返回由与给定predicate匹配的该流的元素组成的流 */ Stream<T> filter(Predicate<? super T> predicate); /** * 此流的所有元素是否与提供的predicate匹配。 */ boolean allMatch(Predicate<? super T> predicate) /** * 此流任意元素是否有与提供的predicate匹配。 */ boolean anyMatch(Predicate<? super T> predicate); /** * 返回一个 Stream的构建器。 */ public static<T> Builder<T> builder(); /** * 使用 Collector对此流的元素进行归纳 */ <R, A> R collect(Collector<? super T, A, R> collector); /** * 返回此流中的元素数。 */ long count(); /** * 返回由该流的不同元素（根据 Object.equals(Object) ）组成的流。 */ Stream<T> distinct(); /** * 遍历 */ void forEach(Consumer<? super T> action); /** * 用于获取指定数量的流，截短长度不能超过 maxSize 。 */ Stream<T> limit(long maxSize); /** * 用于映射每个元素到对应的结果 */ <R> Stream<R> map(Function<? super T, ? extends R> mapper); /** * 根据提供的 Comparator进行排序。 */ Stream<T> sorted(Comparator<? super T> comparator); /** * 在丢弃流的第一个 n元素后，返回由该流的 n元素组成的流。 */ Stream<T> skip(long n); /** * 返回一个包含此流的元素的数组。 */ Object[] toArray(); /** * 使用提供的 generator函数返回一个包含此流的元素的数组，以分配返回的数组，以及分区执行或调整大小可能需要的任何其他数组。 */ <A> A[] toArray(IntFunction<A[]> generator); /** * 合并流 */ public static <T> Stream<T> concat(Stream<? extends T> a, Stream<? extends T> b) \"]},\"260\":{\"h\":\"实战\",\"t\":[\"本文列出 Stream 具有代表性的方法之使用，更多的使用方法还是要看 Api。\",\"@Test public void test() { List<String> strings = Arrays.asList(\\\"abc\\\", \\\"def\\\", \\\"gkh\\\", \\\"abc\\\"); //返回符合条件的stream Stream<String> stringStream = strings.stream().filter(s -> \\\"abc\\\".equals(s)); //计算流符合条件的流的数量 long count = stringStream.count(); //forEach遍历->打印元素 strings.stream().forEach(System.out::println); //limit 获取到1个元素的stream Stream<String> limit = strings.stream().limit(1); //toArray 比如我们想看这个limitStream里面是什么，比如转换成String[],比如循环 String[] array = limit.toArray(String[]::new); //map 对每个元素进行操作返回新流 Stream<String> map = strings.stream().map(s -> s + \\\"22\\\"); //sorted 排序并打印 strings.stream().sorted().forEach(System.out::println); //Collectors collect 把abc放入容器中 List<String> collect = strings.stream().filter(string -> \\\"abc\\\".equals(string)).collect(Collectors.toList()); //把list转为string，各元素用，号隔开 String mergedString = strings.stream().filter(string -> !string.isEmpty()).collect(Collectors.joining(\\\",\\\")); //对数组的统计，比如用 List<Integer> number = Arrays.asList(1, 2, 5, 4); IntSummaryStatistics statistics = number.stream().mapToInt((x) -> x).summaryStatistics(); System.out.println(\\\"列表中最大的数 : \\\"+statistics.getMax()); System.out.println(\\\"列表中最小的数 : \\\"+statistics.getMin()); System.out.println(\\\"平均数 : \\\"+statistics.getAverage()); System.out.println(\\\"所有数之和 : \\\"+statistics.getSum()); //concat 合并流 List<String> strings2 = Arrays.asList(\\\"xyz\\\", \\\"jqx\\\"); Stream.concat(strings2.stream(),strings.stream()).count(); //注意 一个Stream只能操作一次，不能断开，否则会报错。 Stream stream = strings.stream(); //第一次使用 stream.limit(2); //第二次使用 stream.forEach(System.out::println); //报错 java.lang.IllegalStateException: stream has already been operated upon or closed //但是可以这样, 连续使用 stream.limit(2).forEach(System.out::println); } \"]},\"261\":{\"h\":\"延迟执行\",\"t\":[\"在执行返回 Stream 的方法时，并不立刻执行，而是等返回一个非 Stream 的方法后才执行。因为拿到 Stream 并不能直接用，而是需要处理成一个常规类型。这里的 Stream 可以想象成是二进制流（2 个完全不一样的东东），拿到也看不懂。\",\"我们下面分解一下 filter 方法。\",\"@Test public void laziness(){ List<String> strings = Arrays.asList(\\\"abc\\\", \\\"def\\\", \\\"gkh\\\", \\\"abc\\\"); Stream<Integer> stream = strings.stream().filter(new Predicate() { @Override public boolean test(Object o) { System.out.println(\\\"Predicate.test 执行\\\"); return true; } }); System.out.println(\\\"count 执行\\\"); stream.count(); } /*-------执行结果--------*/ count 执行 Predicate.test 执行 Predicate.test 执行 Predicate.test 执行 Predicate.test 执行 \",\"按执行顺序应该是先打印 4 次「Predicate.test 执行」，再打印「count 执行」。实际结果恰恰相反。说明 filter 中的方法并没有立刻执行，而是等调用count()方法后才执行。\",\"上面都是串行 Stream 的实例。并行 parallelStream 在使用方法上和串行一样。主要区别是 parallelStream 可多线程执行，是基于 ForkJoin 框架实现的，有时间大家可以了解一下 ForkJoin 框架和 ForkJoinPool。这里可以简单的理解它是通过线程池来实现的，这样就会涉及到线程安全，线程消耗等问题。下面我们通过代码来体验一下并行流的多线程执行。\",\"@Test public void parallelStreamTest(){ List<Integer> numbers = Arrays.asList(1, 2, 5, 4); numbers.parallelStream() .forEach(num->System.out.println(Thread.currentThread().getName()+\\\">>\\\"+num)); } //执行结果 main>>5 ForkJoinPool.commonPool-worker-2>>4 ForkJoinPool.commonPool-worker-11>>1 ForkJoinPool.commonPool-worker-9>>2 \",\"从结果中我们看到，for-each 用到的是多线程。\"]},\"262\":{\"h\":\"小结\",\"t\":[\"从源码和实例中我们可以总结出一些 stream 的特点\",\"通过简单的链式编程，使得它可以方便地对遍历处理后的数据进行再处理。\",\"方法参数都是函数式接口类型\",\"一个 Stream 只能操作一次，操作完就关闭了，继续使用这个 stream 会报错。\",\"Stream 不保存数据，不改变数据源\"]},\"263\":{\"h\":\"Optional\",\"t\":[\"在阿里巴巴开发手册关于 Optional 的介绍中这样写到：\",\"防止 NPE，是程序员的基本修养，注意 NPE 产生的场景：\",\"1） 返回类型为基本数据类型，return 包装数据类型的对象时，自动拆箱有可能产生 NPE。\",\"反例：public int f() { return Integer 对象}， 如果为 null，自动解箱抛 NPE。\",\"2） 数据库的查询结果可能为 null。\",\"3） 集合里的元素即使 isNotEmpty，取出的数据元素也可能为 null。\",\"4） 远程调用返回对象时，一律要求进行空指针判断，防止 NPE。\",\"5） 对于 Session 中获取的数据，建议进行 NPE 检查，避免空指针。\",\"6） 级联调用 obj.getA().getB().getC()；一连串调用，易产生 NPE。\",\"正例：使用 JDK8 的 Optional 类来防止 NPE 问题。\",\"他建议使用 Optional 解决 NPE（java.lang.NullPointerException）问题，它就是为 NPE 而生的，其中可以包含空值或非空值。下面我们通过源码逐步揭开 Optional 的红盖头。\",\"假设有一个 Zoo 类，里面有个属性 Dog，需求要获取 Dog 的 age。\",\"class Zoo { private Dog dog; } class Dog { private int age; } \",\"传统解决 NPE 的办法如下：\",\"Zoo zoo = getZoo(); if(zoo != null){ Dog dog = zoo.getDog(); if(dog != null){ int age = dog.getAge(); System.out.println(age); } } \",\"层层判断对象非空，有人说这种方式很丑陋不优雅，我并不这么认为。反而觉得很整洁，易读，易懂。你们觉得呢？\",\"Optional 是这样的实现的：\",\"Optional.ofNullable(zoo).map(o -> o.getDog()).map(d -> d.getAge()).ifPresent(age -> System.out.println(age) ); \",\"是不是简洁了很多呢？\"]},\"264\":{\"h\":\"如何创建一个 Optional\",\"t\":[\"上例中Optional.ofNullable是其中一种创建 Optional 的方式。我们先看一下它的含义和其他创建 Optional 的源码方法。\",\"/** * Common instance for {@code empty()}. 全局EMPTY对象 */ private static final Optional<?> EMPTY = new Optional<>(); /** * Optional维护的值 */ private final T value; /** * 如果value是null就返回EMPTY，否则就返回of(T) */ public static <T> Optional<T> ofNullable(T value) { return value == null ? empty() : of(value); } /** * 返回 EMPTY 对象 */ public static<T> Optional<T> empty() { Optional<T> t = (Optional<T>) EMPTY; return t; } /** * 返回Optional对象 */ public static <T> Optional<T> of(T value) { return new Optional<>(value); } /** * 私有构造方法，给value赋值 */ private Optional(T value) { this.value = Objects.requireNonNull(value); } /** * 所以如果of(T value) 的value是null，会抛出NullPointerException异常，这样貌似就没处理NPE问题 */ public static <T> T requireNonNull(T obj) { if (obj == null) throw new NullPointerException(); return obj; } \",\"ofNullable 方法和of方法唯一区别就是当 value 为 null 时，ofNullable 返回的是EMPTY，of 会抛出 NullPointerException 异常。如果需要把 NullPointerException 暴漏出来就用 of，否则就用 ofNullable。\",\"map() 和 flatMap() 有什么区别的？\",\"map 和 flatMap 都是将一个函数应用于集合中的每个元素，但不同的是map返回一个新的集合，flatMap是将每个元素都映射为一个集合，最后再将这个集合展平。\",\"在实际应用场景中，如果map返回的是数组，那么最后得到的是一个二维数组，使用flatMap就是为了将这个二维数组展平变成一个一维数组。\",\"public class MapAndFlatMapExample { public static void main(String[] args) { List<String[]> listOfArrays = Arrays.asList( new String[]{\\\"apple\\\", \\\"banana\\\", \\\"cherry\\\"}, new String[]{\\\"orange\\\", \\\"grape\\\", \\\"pear\\\"}, new String[]{\\\"kiwi\\\", \\\"melon\\\", \\\"pineapple\\\"} ); List<String[]> mapResult = listOfArrays.stream() .map(array -> Arrays.stream(array).map(String::toUpperCase).toArray(String[]::new)) .collect(Collectors.toList()); System.out.println(\\\"Using map:\\\"); System.out.println(mapResult); List<String> flatMapResult = listOfArrays.stream() .flatMap(array -> Arrays.stream(array).map(String::toUpperCase)) .collect(Collectors.toList()); System.out.println(\\\"Using flatMap:\\\"); System.out.println(flatMapResult); } } \",\"运行结果:\",\"Using map: [[APPLE, BANANA, CHERRY], [ORANGE, GRAPE, PEAR], [KIWI, MELON, PINEAPPLE]] Using flatMap: [APPLE, BANANA, CHERRY, ORANGE, GRAPE, PEAR, KIWI, MELON, PINEAPPLE] \",\"最简单的理解就是flatMap()可以将map()的结果展开。\",\"在Optional里面，当使用map()时，如果映射函数返回的是一个普通值，它会将这个值包装在一个新的Optional中。而使用flatMap时，如果映射函数返回的是一个Optional，它会将这个返回的Optional展平，不再包装成嵌套的Optional。\",\"下面是一个对比的示例代码：\",\"public static void main(String[] args) { int userId = 1; // 使用flatMap的代码 String cityUsingFlatMap = getUserById(userId) .flatMap(OptionalExample::getAddressByUser) .map(Address::getCity) .orElse(\\\"Unknown\\\"); System.out.println(\\\"User's city using flatMap: \\\" + cityUsingFlatMap); // 不使用flatMap的代码 Optional<Optional<Address>> optionalAddress = getUserById(userId) .map(OptionalExample::getAddressByUser); String cityWithoutFlatMap; if (optionalAddress.isPresent()) { Optional<Address> addressOptional = optionalAddress.get(); if (addressOptional.isPresent()) { Address address = addressOptional.get(); cityWithoutFlatMap = address.getCity(); } else { cityWithoutFlatMap = \\\"Unknown\\\"; } } else { cityWithoutFlatMap = \\\"Unknown\\\"; } System.out.println(\\\"User's city without flatMap: \\\" + cityWithoutFlatMap); } \",\"在Stream和Optional中正确使用flatMap可以减少很多不必要的代码。\"]},\"265\":{\"h\":\"判断 value 是否为 null\",\"t\":[\"/** * value是否为null */ public boolean isPresent() { return value != null; } /** * 如果value不为null执行consumer.accept */ public void ifPresent(Consumer<? super T> consumer) { if (value != null) consumer.accept(value); } \"]},\"266\":{\"h\":\"获取 value\",\"t\":[\"/** * Return the value if present, otherwise invoke {@code other} and return * the result of that invocation. * 如果value != null 返回value，否则返回other的执行结果 */ public T orElseGet(Supplier<? extends T> other) { return value != null ? value : other.get(); } /** * 如果value != null 返回value，否则返回T */ public T orElse(T other) { return value != null ? value : other; } /** * 如果value != null 返回value，否则抛出参数返回的异常 */ public <X extends Throwable> T orElseThrow(Supplier<? extends X> exceptionSupplier) throws X { if (value != null) { return value; } else { throw exceptionSupplier.get(); } } /** * value为null抛出NoSuchElementException，不为空返回value。 */ public T get() { if (value == null) { throw new NoSuchElementException(\\\"No value present\\\"); } return value; } \"]},\"267\":{\"h\":\"过滤值\",\"t\":[\"/** * 1. 如果是empty返回empty * 2. predicate.test(value)==true 返回this，否则返回empty */ public Optional<T> filter(Predicate<? super T> predicate) { Objects.requireNonNull(predicate); if (!isPresent()) return this; else return predicate.test(value) ? this : empty(); } \"]},\"268\":{\"h\":\"小结\",\"t\":[\"看完 Optional 源码，Optional 的方法真的非常简单，值得注意的是如果坚决不想看见 NPE，就不要用 of()、 get()、flatMap(..)。最后再综合用一下 Optional 的高频方法。\",\"Optional.ofNullable(zoo).map(o -> o.getDog()).map(d -> d.getAge()).filter(v->v==1).orElse(3); \"]},\"269\":{\"h\":\"Date-Time API\",\"t\":[\"这是对java.util.Date强有力的补充，解决了 Date 类的大部分痛点：\",\"非线程安全\",\"时区处理麻烦\",\"各种格式化、和时间计算繁琐\",\"设计有缺陷，Date 类同时包含日期和时间；还有一个 java.sql.Date，容易混淆。\",\"我们从常用的时间实例来对比 java.util.Date 和新 Date 有什么区别。用java.util.Date的代码该改改了。\"]},\"270\":{\"h\":\"java.time 主要类\",\"t\":[\"java.util.Date 既包含日期又包含时间，而 java.time 把它们进行了分离\",\"LocalDateTime.class //日期+时间 format: yyyy-MM-ddTHH:mm:ss.SSS LocalDate.class //日期 format: yyyy-MM-dd LocalTime.class //时间 format: HH:mm:ss \"]},\"271\":{\"h\":\"格式化\",\"t\":[\"Java 8 之前:\",\"public void oldFormat(){ Date now = new Date(); //format yyyy-MM-dd SimpleDateFormat sdf = new SimpleDateFormat(\\\"yyyy-MM-dd\\\"); String date = sdf.format(now); System.out.println(String.format(\\\"date format : %s\\\", date)); //format HH:mm:ss SimpleDateFormat sdft = new SimpleDateFormat(\\\"HH:mm:ss\\\"); String time = sdft.format(now); System.out.println(String.format(\\\"time format : %s\\\", time)); //format yyyy-MM-dd HH:mm:ss SimpleDateFormat sdfdt = new SimpleDateFormat(\\\"yyyy-MM-dd HH:mm:ss\\\"); String datetime = sdfdt.format(now); System.out.println(String.format(\\\"dateTime format : %s\\\", datetime)); } \",\"Java 8 之后:\",\"public void newFormat(){ //format yyyy-MM-dd LocalDate date = LocalDate.now(); System.out.println(String.format(\\\"date format : %s\\\", date)); //format HH:mm:ss LocalTime time = LocalTime.now().withNano(0); System.out.println(String.format(\\\"time format : %s\\\", time)); //format yyyy-MM-dd HH:mm:ss LocalDateTime dateTime = LocalDateTime.now(); DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(\\\"yyyy-MM-dd HH:mm:ss\\\"); String dateTimeStr = dateTime.format(dateTimeFormatter); System.out.println(String.format(\\\"dateTime format : %s\\\", dateTimeStr)); } \"]},\"272\":{\"h\":\"字符串转日期格式\",\"t\":[\"Java 8 之前:\",\"//已弃用 Date date = new Date(\\\"2021-01-26\\\"); //替换为 SimpleDateFormat sdf = new SimpleDateFormat(\\\"yyyy-MM-dd\\\"); Date date1 = sdf.parse(\\\"2021-01-26\\\"); \",\"Java 8 之后:\",\"LocalDate date = LocalDate.of(2021, 1, 26); LocalDate.parse(\\\"2021-01-26\\\"); LocalDateTime dateTime = LocalDateTime.of(2021, 1, 26, 12, 12, 22); LocalDateTime.parse(\\\"2021-01-26 12:12:22\\\"); LocalTime time = LocalTime.of(12, 12, 22); LocalTime.parse(\\\"12:12:22\\\"); \",\"Java 8 之前 转换都需要借助 SimpleDateFormat 类，而Java 8 之后只需要 LocalDate、LocalTime、LocalDateTime的 of 或 parse 方法。\"]},\"273\":{\"h\":\"日期计算\",\"t\":[\"下面仅以一周后日期为例，其他单位（年、月、日、1/2 日、时等等）大同小异。另外，这些单位都在 java.time.temporal.ChronoUnit 枚举中定义。\",\"Java 8 之前:\",\"public void afterDay(){ //一周后的日期 SimpleDateFormat formatDate = new SimpleDateFormat(\\\"yyyy-MM-dd\\\"); Calendar ca = Calendar.getInstance(); ca.add(Calendar.DATE, 7); Date d = ca.getTime(); String after = formatDate.format(d); System.out.println(\\\"一周后日期：\\\" + after); //算两个日期间隔多少天，计算间隔多少年，多少月方法类似 String dates1 = \\\"2021-12-23\\\"; String dates2 = \\\"2021-02-26\\\"; SimpleDateFormat format = new SimpleDateFormat(\\\"yyyy-MM-dd\\\"); Date date1 = format.parse(dates1); Date date2 = format.parse(dates2); int day = (int) ((date1.getTime() - date2.getTime()) / (1000 * 3600 * 24)); System.out.println(dates1 + \\\"和\\\" + dates2 + \\\"相差\\\" + day + \\\"天\\\"); //结果：2021-02-26和2021-12-23相差300天 } \",\"Java 8 之后:\",\"public void pushWeek(){ //一周后的日期 LocalDate localDate = LocalDate.now(); //方法1 LocalDate after = localDate.plus(1, ChronoUnit.WEEKS); //方法2 LocalDate after2 = localDate.plusWeeks(1); System.out.println(\\\"一周后日期：\\\" + after); //算两个日期间隔多少天，计算间隔多少年，多少月 LocalDate date1 = LocalDate.parse(\\\"2021-02-26\\\"); LocalDate date2 = LocalDate.parse(\\\"2021-12-23\\\"); Period period = Period.between(date1, date2); System.out.println(\\\"date1 到 date2 相隔：\\\" + period.getYears() + \\\"年\\\" + period.getMonths() + \\\"月\\\" + period.getDays() + \\\"天\\\"); //打印结果是 “date1 到 date2 相隔：0年9月27天” //这里period.getDays()得到的天是抛去年月以外的天数，并不是总天数 //如果要获取纯粹的总天数应该用下面的方法 long day = date2.toEpochDay() - date1.toEpochDay(); System.out.println(date1 + \\\"和\\\" + date2 + \\\"相差\\\" + day + \\\"天\\\"); //打印结果：2021-02-26和2021-12-23相差300天 } \"]},\"274\":{\"h\":\"获取指定日期\",\"t\":[\"除了日期计算繁琐，获取特定一个日期也很麻烦，比如获取本月最后一天，第一天。\",\"Java 8 之前:\",\"public void getDay() { SimpleDateFormat format = new SimpleDateFormat(\\\"yyyy-MM-dd\\\"); //获取当前月第一天： Calendar c = Calendar.getInstance(); c.set(Calendar.DAY_OF_MONTH, 1); String first = format.format(c.getTime()); System.out.println(\\\"first day:\\\" + first); //获取当前月最后一天 Calendar ca = Calendar.getInstance(); ca.set(Calendar.DAY_OF_MONTH, ca.getActualMaximum(Calendar.DAY_OF_MONTH)); String last = format.format(ca.getTime()); System.out.println(\\\"last day:\\\" + last); //当年最后一天 Calendar currCal = Calendar.getInstance(); Calendar calendar = Calendar.getInstance(); calendar.clear(); calendar.set(Calendar.YEAR, currCal.get(Calendar.YEAR)); calendar.roll(Calendar.DAY_OF_YEAR, -1); Date time = calendar.getTime(); System.out.println(\\\"last day:\\\" + format.format(time)); } \",\"Java 8 之后:\",\"public void getDayNew() { LocalDate today = LocalDate.now(); //获取当前月第一天： LocalDate firstDayOfThisMonth = today.with(TemporalAdjusters.firstDayOfMonth()); // 取本月最后一天 LocalDate lastDayOfThisMonth = today.with(TemporalAdjusters.lastDayOfMonth()); //取下一天： LocalDate nextDay = lastDayOfThisMonth.plusDays(1); //当年最后一天 LocalDate lastday = today.with(TemporalAdjusters.lastDayOfYear()); //2021年最后一个周日，如果用Calendar是不得烦死。 LocalDate lastMondayOf2021 = LocalDate.parse(\\\"2021-12-31\\\").with(TemporalAdjusters.lastInMonth(DayOfWeek.SUNDAY)); } \",\"java.time.temporal.TemporalAdjusters 里面还有很多便捷的算法，这里就不带大家看 Api 了，都很简单，看了秒懂。\"]},\"275\":{\"h\":\"JDBC 和 java8\",\"t\":[\"现在 jdbc 时间类型和 java8 时间类型对应关系是\",\"Date ---> LocalDate\",\"Time ---> LocalTime\",\"Timestamp ---> LocalDateTime\",\"而之前统统对应 Date，也只有 Date。\"]},\"276\":{\"h\":\"时区\",\"t\":[\"时区：正式的时区划分为每隔经度 15° 划分一个时区，全球共 24 个时区，每个时区相差 1 小时。但为了行政上的方便，常将 1 个国家或 1 个省份划在一起，比如我国幅员宽广，大概横跨 5 个时区，实际上只用东八时区的标准时即北京时间为准。\",\"java.util.Date 对象实质上存的是 1970 年 1 月 1 日 0 点（ GMT）至 Date 对象所表示时刻所经过的毫秒数。也就是说不管在哪个时区 new Date，它记录的毫秒数都一样，和时区无关。但在使用上应该把它转换成当地时间，这就涉及到了时间的国际化。java.util.Date 本身并不支持国际化，需要借助 TimeZone。\",\"//北京时间：Wed Jan 27 14:05:29 CST 2021 Date date = new Date(); SimpleDateFormat bjSdf = new SimpleDateFormat(\\\"yyyy-MM-dd HH:mm:ss\\\"); //北京时区 bjSdf.setTimeZone(TimeZone.getTimeZone(\\\"Asia/Shanghai\\\")); System.out.println(\\\"毫秒数:\\\" + date.getTime() + \\\", 北京时间:\\\" + bjSdf.format(date)); //东京时区 SimpleDateFormat tokyoSdf = new SimpleDateFormat(\\\"yyyy-MM-dd HH:mm:ss\\\"); tokyoSdf.setTimeZone(TimeZone.getTimeZone(\\\"Asia/Tokyo\\\")); // 设置东京时区 System.out.println(\\\"毫秒数:\\\" + date.getTime() + \\\", 东京时间:\\\" + tokyoSdf.format(date)); //如果直接print会自动转成当前时区的时间 System.out.println(date); //Wed Jan 27 14:05:29 CST 2021 \",\"在新特性中引入了 java.time.ZonedDateTime 来表示带时区的时间。它可以看成是 LocalDateTime + ZoneId。\",\"//当前时区时间 ZonedDateTime zonedDateTime = ZonedDateTime.now(); System.out.println(\\\"当前时区时间: \\\" + zonedDateTime); //东京时间 ZoneId zoneId = ZoneId.of(ZoneId.SHORT_IDS.get(\\\"JST\\\")); ZonedDateTime tokyoTime = zonedDateTime.withZoneSameInstant(zoneId); System.out.println(\\\"东京时间: \\\" + tokyoTime); // ZonedDateTime 转 LocalDateTime LocalDateTime localDateTime = tokyoTime.toLocalDateTime(); System.out.println(\\\"东京时间转当地时间: \\\" + localDateTime); //LocalDateTime 转 ZonedDateTime ZonedDateTime localZoned = localDateTime.atZone(ZoneId.systemDefault()); System.out.println(\\\"本地时区时间: \\\" + localZoned); //打印结果 当前时区时间: 2021-01-27T14:43:58.735+08:00[Asia/Shanghai] 东京时间: 2021-01-27T15:43:58.735+09:00[Asia/Tokyo] 东京时间转当地时间: 2021-01-27T15:43:58.735 当地时区时间: 2021-01-27T15:53:35.618+08:00[Asia/Shanghai] \"]},\"277\":{\"h\":\"小结\",\"t\":[\"通过上面比较新老 Date 的不同，当然只列出部分功能上的区别，更多功能还得自己去挖掘。总之 date-time-api 给日期操作带来了福利。在日常工作中遇到 date 类型的操作，第一考虑的是 date-time-api，实在解决不了再考虑老的 Date。\"]},\"278\":{\"h\":\"总结\",\"t\":[\"我们梳理总结的 java 8 新特性有\",\"Interface & functional Interface\",\"Lambda\",\"Stream\",\"Optional\",\"Date time-api\",\"这些都是开发当中比较常用的特性。梳理下来发现它们真香，而我却没有更早的应用。总觉得学习 java 8 新特性比较麻烦，一直使用老的实现方式。其实这些新特性几天就可以掌握，一但掌握，效率会有很大的提高。其实我们涨工资也是涨的学习的钱，不学习终究会被淘汰，35 岁危机会提前来临。\",\"File not found\"]},\"279\":{\"h\":\"Java 9 新特性概览\",\"t\":[\"Java 9 发布于 2017 年 9 月 21 日 。作为 Java 8 之后 3 年半才发布的新版本，Java 9 带来了很多重大的变化其中最重要的改动是 Java 平台模块系统的引入，其他还有诸如集合、Stream 流......。\",\"你可以在 Archived OpenJDK General-Availability Releases 上下载自己需要的 JDK 版本！官方的新特性说明文档地址：https://openjdk.java.net/projects/jdk/ 。\",\"概览（精选了一部分）：\",\"JEP 222: Java 命令行工具\",\"JEP 261: 模块化系统\",\"JEP 248：G1 成为默认垃圾回收器\",\"JEP 193: 变量句柄\",\"JEP 254：字符串存储结构优化\"]},\"280\":{\"h\":\"JShell\",\"t\":[\"JShell 是 Java 9 新增的一个实用工具。为 Java 提供了类似于 Python 的实时命令行交互工具。\",\"在 JShell 中可以直接输入表达式并查看其执行结果。\",\"JShell 为我们带来了哪些好处呢？\",\"降低了输出第一行 Java 版\\\"Hello World！\\\"的门槛，能够提高新手的学习热情。\",\"在处理简单的小逻辑，验证简单的小问题时，比 IDE 更有效率（并不是为了取代 IDE，对于复杂逻辑的验证，IDE 更合适，两者互补）。\",\"......\",\"JShell 的代码和普通的可编译代码，有什么不一样？\",\"一旦语句输入完成，JShell 立即就能返回执行的结果，而不再需要编辑器、编译器、解释器。\",\"JShell 支持变量的重复声明，后面声明的会覆盖前面声明的。\",\"JShell 支持独立的表达式比如普通的加法运算 1 + 1。\",\"......\"]},\"281\":{\"h\":\"模块化系统\",\"t\":[\"模块系统是Jigsaw Project的一部分，把模块化开发实践引入到了 Java 平台中，可以让我们的代码可重用性更好！\",\"什么是模块系统？ 官方的定义是：\",\"A uniquely named, reusable group of related packages, as well as resources (such as images and XML files) and a module descriptor。\",\"简单来说，你可以将一个模块看作是一组唯一命名、可重用的包、资源和模块描述文件（module-info.java）。\",\"任意一个 jar 文件，只要加上一个模块描述文件（module-info.java），就可以升级为一个模块。\",\"在引入了模块系统之后，JDK 被重新组织成 94 个模块。Java 应用可以通过新增的 jlink 工具 (Jlink 是随 Java 9 一起发布的新命令行工具。它允许开发人员为基于模块的 Java 应用程序创建自己的轻量级、定制的 JRE)，创建出只包含所依赖的 JDK 模块的自定义运行时镜像。这样可以极大的减少 Java 运行时环境的大小。\",\"我们可以通过 exports 关键词精准控制哪些类可以对外开放使用，哪些类只能内部使用。\",\"module my.module { //exports 公开指定包的所有公共成员 exports com.my.package.name; } module my.module { //exports…to 限制访问的成员范围 export com.my.package.name to com.specific.package; } \",\"想要深入了解 Java 9 的模块化，可以参考下面这几篇文章：\",\"《Project Jigsaw: Module System Quick-Start Guide》\",\"《Java 9 Modules: part 1》\",\"Java 9 揭秘（2. 模块化系统）\"]},\"282\":{\"h\":\"G1 成为默认垃圾回收器\",\"t\":[\"在 Java 8 的时候，默认垃圾回收器是 Parallel Scavenge（新生代）+Parallel Old（老年代）。到了 Java 9, CMS 垃圾回收器被废弃了，G1（Garbage-First Garbage Collector） 成为了默认垃圾回收器。\",\"G1 还是在 Java 7 中被引入的，经过两个版本优异的表现成为成为默认垃圾回收器。\"]},\"283\":{\"h\":\"快速创建不可变集合\",\"t\":[\"增加了List.of()、Set.of()、Map.of() 和 Map.ofEntries()等工厂方法来创建不可变集合（有点参考 Guava 的味道）：\",\"List.of(\\\"Java\\\", \\\"C++\\\"); Set.of(\\\"Java\\\", \\\"C++\\\"); Map.of(\\\"Java\\\", 1, \\\"C++\\\", 2); \",\"使用 of() 创建的集合为不可变集合，不能进行添加、删除、替换、 排序等操作，不然会报 java.lang.UnsupportedOperationException 异常。\"]},\"284\":{\"h\":\"String 存储结构优化\",\"t\":[\"Java 8 及之前的版本，String 一直是用 char[] 存储。在 Java 9 之后，String 的实现改用 byte[] 数组存储字符串，节省了空间。\",\"public final class String implements java.io.Serializable,Comparable<String>, CharSequence { // @Stable 注解表示变量最多被修改一次，称为“稳定的”。 @Stable private final byte[] value; } \"]},\"285\":{\"h\":\"接口私有方法\",\"t\":[\"Java 9 允许在接口中使用私有方法。这样的话，接口的使用就更加灵活了，有点像是一个简化版的抽象类。\",\"public interface MyInterface { private void methodPrivate(){ } } \"]},\"286\":{\"h\":\"try-with-resources 增强\",\"t\":[\"在 Java 9 之前，我们只能在 try-with-resources 块中声明变量：\",\"try (Scanner scanner = new Scanner(new File(\\\"testRead.txt\\\")); PrintWriter writer = new PrintWriter(new File(\\\"testWrite.txt\\\"))) { // omitted } \",\"在 Java 9 之后，在 try-with-resources 语句中可以使用 effectively-final 变量。\",\"final Scanner scanner = new Scanner(new File(\\\"testRead.txt\\\")); PrintWriter writer = new PrintWriter(new File(\\\"testWrite.txt\\\")) try (scanner;writer) { // omitted } \",\"什么是 effectively-final 变量？ 简单来说就是没有被 final 修饰但是值在初始化后从未更改的变量。\",\"正如上面的代码所演示的那样，即使 writer 变量没有被显示声明为 final，但它在第一次被复制后就不会改变了，因此，它就是 effectively-final 变量。\"]},\"287\":{\"h\":\"Stream & Optional 增强\",\"t\":[\"Stream 中增加了新的方法 ofNullable()、dropWhile()、takeWhile() 以及 iterate() 方法的重载方法。\",\"Java 9 中的 ofNullable() 方 法允许我们创建一个单元素的 Stream，可以包含一个非空元素，也可以创建一个空 Stream。 而在 Java 8 中则不可以创建空的 Stream 。\",\"Stream<String> stringStream = Stream.ofNullable(\\\"Java\\\"); System.out.println(stringStream.count());// 1 Stream<String> nullStream = Stream.ofNullable(null); System.out.println(nullStream.count());//0 \",\"takeWhile() 方法可以从 Stream 中依次获取满足条件的元素，直到不满足条件为止结束获取。\",\"List<Integer> integerList = List.of(11, 33, 66, 8, 9, 13); integerList.stream().takeWhile(x -> x < 50).forEach(System.out::println);// 11 33 \",\"dropWhile() 方法的效果和 takeWhile() 相反。\",\"List<Integer> integerList2 = List.of(11, 33, 66, 8, 9, 13); integerList2.stream().dropWhile(x -> x < 50).forEach(System.out::println);// 66 8 9 13 \",\"iterate() 方法的新重载方法提供了一个 Predicate 参数 (判断条件)来决定什么时候结束迭代\",\"public static<T> Stream<T> iterate(final T seed, final UnaryOperator<T> f) { } // 新增加的重载方法 public static<T> Stream<T> iterate(T seed, Predicate<? super T> hasNext, UnaryOperator<T> next) { } \",\"两者的使用对比如下，新的 iterate() 重载方法更加灵活一些。\",\"// 使用原始 iterate() 方法输出数字 1~10 Stream.iterate(1, i -> i + 1).limit(10).forEach(System.out::println); // 使用新的 iterate() 重载方法输出数字 1~10 Stream.iterate(1, i -> i <= 10, i -> i + 1).forEach(System.out::println); \",\"Optional 类中新增了 ifPresentOrElse()、or() 和 stream() 等方法\",\"ifPresentOrElse() 方法接受两个参数 Consumer 和 Runnable ，如果 Optional 不为空调用 Consumer 参数，为空则调用 Runnable 参数。\",\"public void ifPresentOrElse(Consumer<? super T> action, Runnable emptyAction) Optional<Object> objectOptional = Optional.empty(); objectOptional.ifPresentOrElse(System.out::println, () -> System.out.println(\\\"Empty!!!\\\"));// Empty!!! \",\"or() 方法接受一个 Supplier 参数 ，如果 Optional 为空则返回 Supplier 参数指定的 Optional 值。\",\"public Optional<T> or(Supplier<? extends Optional<? extends T>> supplier) Optional<Object> objectOptional = Optional.empty(); objectOptional.or(() -> Optional.of(\\\"java\\\")).ifPresent(System.out::println);//java \"]},\"288\":{\"h\":\"进程 API\",\"t\":[\"Java 9 增加了 java.lang.ProcessHandle 接口来实现对原生进程进行管理，尤其适合于管理长时间运行的进程。\",\"// 获取当前正在运行的 JVM 的进程 ProcessHandle currentProcess = ProcessHandle.current(); // 输出进程的 id System.out.println(currentProcess.pid()); // 输出进程的信息 System.out.println(currentProcess.info()); \",\"ProcessHandle 接口概览：\"]},\"289\":{\"h\":\"响应式流 （ Reactive Streams ）\",\"t\":[\"在 Java 9 中的 java.util.concurrent.Flow 类中新增了反应式流规范的核心接口 。\",\"Flow 中包含了 Flow.Publisher、Flow.Subscriber、Flow.Subscription 和 Flow.Processor 等 4 个核心接口。Java 9 还提供了SubmissionPublisher 作为Flow.Publisher 的一个实现。\",\"关于 Java 9 响应式流更详细的解读，推荐你看 Java 9 揭秘（17. Reactive Streams ）- 林本托 这篇文章。\"]},\"290\":{\"h\":\"变量句柄\",\"t\":[\"变量句柄是一个变量或一组变量的引用，包括静态域，非静态域，数组元素和堆外数据结构中的组成部分等。\",\"变量句柄的含义类似于已有的方法句柄 MethodHandle ，由 Java 类 java.lang.invoke.VarHandle 来表示，可以使用类 java.lang.invoke.MethodHandles.Lookup 中的静态工厂方法来创建 VarHandle 对象。\",\"VarHandle 的出现替代了 java.util.concurrent.atomic 和 sun.misc.Unsafe 的部分操作。并且提供了一系列标准的内存屏障操作，用于更加细粒度的控制内存排序。在安全性、可用性、性能上都要优于现有的 API。\"]},\"291\":{\"h\":\"其它\",\"t\":[\"平台日志 API 改进：Java 9 允许为 JDK 和应用配置同样的日志实现。新增了 System.LoggerFinder 用来管理 JDK 使 用的日志记录器实现。JVM 在运行时只有一个系统范围的 LoggerFinder 实例。我们可以通过添加自己的 System.LoggerFinder 实现来让 JDK 和应用使用 SLF4J 等其他日志记录框架。\",\"CompletableFuture类增强：新增了几个新的方法（completeAsync ，orTimeout 等）。\",\"Nashorn 引擎的增强：Nashorn 是从 Java8 开始引入的 JavaScript 引擎，Java9 对 Nashorn 做了些增强，实现了一些 ES6 的新特性（Java 11 中已经被弃用）。\",\"I/O 流的新特性：增加了新的方法来读取和复制 InputStream 中包含的数据。\",\"改进应用的安全性能：Java 9 新增了 4 个 SHA- 3 哈希算法，SHA3-224、SHA3-256、SHA3-384 和 SHA3-512。\",\"改进方法句柄（Method Handle）：方法句柄从 Java7 开始引入，Java9 在类java.lang.invoke.MethodHandles 中新增了更多的静态方法来创建不同类型的方法句柄。\",\"......\"]},\"292\":{\"h\":\"参考\",\"t\":[\"Java version history：https://en.wikipedia.org/wiki/Java_version_history\",\"Release Notes for JDK 9 and JDK 9 Update Releases : https://www.oracle.com/java/technologies/javase/9-all-relnotes.html\",\"《深入剖析 Java 新特性》-极客时间 - JShell：怎么快速验证简单的小问题？\",\"New Features in Java 9:https://www.baeldung.com/new-java-9\",\"Java – Try with Resources：https://www.baeldung.com/java-try-with-resources\",\"File not found\"]},\"293\":{\"h\":\"Deploy\"},\"294\":{\"h\":\"Services\"},\"295\":{\"h\":\"Homebrew\"},\"296\":{\"h\":\"Develop\"},\"297\":{\"h\":\"Idea\"},\"298\":{\"h\":\"Iterm2\"},\"299\":{\"h\":\"New Features\"},\"300\":{\"h\":\"Java\"}},\"dirtCount\":0,\"index\":[[\"怎么快速验证简单的小问题\",{\"1\":{\"292\":1}}],[\"极客时间\",{\"1\":{\"292\":1}}],[\"哈希算法\",{\"1\":{\"291\":1}}],[\"林本托\",{\"1\":{\"289\":1}}],[\"推荐你看\",{\"1\":{\"289\":1}}],[\"推荐阅读作用域值常见问题解答\",{\"1\":{\"240\":1}}],[\"推荐阅读\",{\"1\":{\"207\":1}}],[\"响应式流更详细的解读\",{\"1\":{\"289\":1}}],[\"响应式流\",{\"0\":{\"289\":1}}],[\"尤其适合于管理长时间运行的进程\",{\"1\":{\"288\":1}}],[\"尤其是用惯了\",{\"1\":{\"247\":1}}],[\"尤其是在使用大量虚拟线程时\",{\"1\":{\"240\":1}}],[\"什么是\",{\"1\":{\"286\":1}}],[\"什么是模块系统\",{\"1\":{\"281\":1}}],[\"稳定的\",{\"1\":{\"284\":1}}],[\"称为\",{\"1\":{\"284\":1}}],[\"成为了默认垃圾回收器\",{\"1\":{\"282\":1}}],[\"成为默认垃圾回收器\",{\"0\":{\"282\":1},\"1\":{\"279\":1}}],[\"老年代\",{\"1\":{\"282\":1}}],[\"揭秘\",{\"1\":{\"281\":1,\"289\":1}}],[\"想要深入了解\",{\"1\":{\"281\":1}}],[\"限制访问的成员范围\",{\"1\":{\"281\":1}}],[\"公开指定包的所有公共成员\",{\"1\":{\"281\":1}}],[\"哪些类只能内部使用\",{\"1\":{\"281\":1}}],[\"被重新组织成\",{\"1\":{\"281\":1}}],[\"被弃用时的版本\",{\"1\":{\"207\":1}}],[\"任意一个\",{\"1\":{\"281\":1}}],[\"任何扩展密封类的类本身都必须声明为\",{\"1\":{\"199\":1}}],[\"资源和模块描述文件\",{\"1\":{\"281\":1}}],[\"后面声明的会覆盖前面声明的\",{\"1\":{\"280\":1}}],[\"后续随着用户的增多\",{\"1\":{\"9\":1}}],[\"立即就能返回执行的结果\",{\"1\":{\"280\":1}}],[\"两者的使用对比如下\",{\"1\":{\"287\":1}}],[\"两者互补\",{\"1\":{\"280\":1}}],[\"两个文件内容不相同的情况\",{\"1\":{\"163\":1}}],[\"两个文件内容相同的情况\",{\"1\":{\"163\":1}}],[\"比\",{\"1\":{\"280\":1}}],[\"比如获取本月最后一天\",{\"1\":{\"274\":1}}],[\"比如用\",{\"1\":{\"260\":1}}],[\"比如循环\",{\"1\":{\"260\":1}}],[\"比如转换成string\",{\"1\":{\"260\":1}}],[\"比如java\",{\"1\":{\"257\":1}}],[\"比如我国幅员宽广\",{\"1\":{\"276\":1}}],[\"比如我们想看这个limitstream里面是什么\",{\"1\":{\"260\":1}}],[\"比如我们要安装\",{\"1\":{\"32\":1}}],[\"比如我\",{\"1\":{\"247\":1}}],[\"比如给该用户下所有的库赋予查询的权限\",{\"1\":{\"49\":1}}],[\"比如\",{\"1\":{\"31\":1,\"190\":1,\"207\":2,\"236\":1,\"244\":1,\"247\":1,\"253\":1}}],[\"比如卸载\",{\"1\":{\"21\":1}}],[\"比如说\",{\"1\":{\"15\":1}}],[\"版\",{\"1\":{\"280\":1}}],[\"版本就是将于\",{\"1\":{\"239\":1}}],[\"版本时\",{\"1\":{\"207\":1}}],[\"版本中\",{\"1\":{\"200\":1}}],[\"版本中根本不存在\",{\"1\":{\"179\":1}}],[\"版本的发布都伴随着对\",{\"1\":{\"180\":1}}],[\"版本对其的改动或修改\",{\"1\":{\"179\":1}}],[\"版本\",{\"1\":{\"165\":1,\"202\":1,\"210\":1,\"211\":1,\"212\":1,\"216\":2,\"247\":1,\"279\":1}}],[\"降低了输出第一行\",{\"1\":{\"280\":1}}],[\"岁危机会提前来临\",{\"1\":{\"278\":1}}],[\"效率会有很大的提高\",{\"1\":{\"278\":1}}],[\"效果图如下\",{\"1\":{\"127\":1}}],[\"梳理下来发现它们真香\",{\"1\":{\"278\":1}}],[\"总觉得学习\",{\"1\":{\"278\":1}}],[\"总结\",{\"0\":{\"278\":1}}],[\"总之\",{\"1\":{\"277\":1}}],[\"东京时间转当地时间\",{\"1\":{\"276\":2}}],[\"东京时间\",{\"1\":{\"276\":4}}],[\"东京时区\",{\"1\":{\"276\":1}}],[\"毫秒数\",{\"1\":{\"276\":2}}],[\"北京时区\",{\"1\":{\"276\":1}}],[\"北京时间\",{\"1\":{\"276\":2}}],[\"至\",{\"1\":{\"276\":1}}],[\"点\",{\"1\":{\"276\":1}}],[\"点击下载\",{\"1\":{\"81\":1}}],[\"点击下载idea\",{\"1\":{\"52\":1}}],[\"点击搜索\",{\"1\":{\"38\":1}}],[\"点击就会进入到软件的介绍页面\",{\"1\":{\"18\":1}}],[\"常将\",{\"1\":{\"276\":1}}],[\"常用方法\",{\"0\":{\"259\":1}}],[\"常用插件\",{\"0\":{\"60\":1,\"61\":1}}],[\"常用快捷键\",{\"0\":{\"57\":1,\"58\":1}}],[\"常用\",{\"0\":{\"30\":1}}],[\"常用命令\",{\"0\":{\"24\":1}}],[\"常用操作\",{\"0\":{\"11\":1}}],[\"划分一个时区\",{\"1\":{\"276\":1}}],[\"得到的天是抛去年月以外的天数\",{\"1\":{\"273\":1}}],[\"天\",{\"1\":{\"273\":3}}],[\"算两个日期间隔多少天\",{\"1\":{\"273\":2}}],[\"算法\",{\"1\":{\"190\":1,\"217\":1}}],[\"枚举中定义\",{\"1\":{\"273\":1}}],[\"已弃用\",{\"1\":{\"272\":1}}],[\"已经没有理由使用了\",{\"1\":{\"218\":1}}],[\"已经可以正式使用了\",{\"1\":{\"194\":1}}],[\"既包含日期又包含时间\",{\"1\":{\"270\":1}}],[\"既然\",{\"1\":{\"248\":1}}],[\"容易混淆\",{\"1\":{\"269\":1}}],[\"看了秒懂\",{\"1\":{\"274\":1}}],[\"看完\",{\"1\":{\"268\":1}}],[\"看虚拟线程如何大幅提高系统吞吐量\",{\"1\":{\"236\":1,\"244\":1}}],[\"获取当前正在运行的\",{\"1\":{\"288\":1}}],[\"获取当前月最后一天\",{\"1\":{\"274\":1}}],[\"获取当前月第一天\",{\"1\":{\"274\":2}}],[\"获取特定一个日期也很麻烦\",{\"1\":{\"274\":1}}],[\"获取指定日期\",{\"0\":{\"274\":1}}],[\"获取\",{\"0\":{\"266\":1}}],[\"获取到1个元素的stream\",{\"1\":{\"260\":1}}],[\"暴漏出来就用\",{\"1\":{\"264\":1}}],[\"给日期操作带来了福利\",{\"1\":{\"277\":1}}],[\"给value赋值\",{\"1\":{\"264\":1}}],[\"给用户赋予crud的权限\",{\"1\":{\"49\":1}}],[\"私有构造方法\",{\"1\":{\"264\":1}}],[\"否则抛出参数返回的异常\",{\"1\":{\"266\":1}}],[\"否则返回empty\",{\"1\":{\"267\":1}}],[\"否则返回t\",{\"1\":{\"266\":1}}],[\"否则返回other的执行结果\",{\"1\":{\"266\":1}}],[\"否则就用\",{\"1\":{\"264\":1}}],[\"否则就返回of\",{\"1\":{\"264\":1}}],[\"否则会报错\",{\"1\":{\"260\":1}}],[\"易懂\",{\"1\":{\"263\":1}}],[\"易读\",{\"1\":{\"263\":1}}],[\"易产生\",{\"1\":{\"263\":1}}],[\"层层判断对象非空\",{\"1\":{\"263\":1}}],[\"层次结构\",{\"1\":{\"243\":1}}],[\"他建议使用\",{\"1\":{\"263\":1}}],[\"他们分别是\",{\"1\":{\"39\":1}}],[\"避免空指针\",{\"1\":{\"263\":1}}],[\"建议进行\",{\"1\":{\"263\":1}}],[\"建议使用integer\",{\"1\":{\"207\":1}}],[\"取下一天\",{\"1\":{\"274\":1}}],[\"取本月最后一天\",{\"1\":{\"274\":1}}],[\"取出的数据元素也可能为\",{\"1\":{\"263\":1}}],[\"取决于不同的操作系统\",{\"1\":{\"227\":1}}],[\"反而觉得很整洁\",{\"1\":{\"263\":1}}],[\"反例\",{\"1\":{\"263\":1}}],[\"反编译插件\",{\"1\":{\"61\":1}}],[\"产生的场景\",{\"1\":{\"263\":1}}],[\"防止\",{\"1\":{\"263\":2}}],[\"小时\",{\"1\":{\"276\":1}}],[\"小结\",{\"0\":{\"262\":1,\"268\":1,\"277\":1}}],[\"小程序\",{\"1\":{\"218\":1}}],[\"框架和\",{\"1\":{\"261\":1}}],[\"框架实现的\",{\"1\":{\"261\":1}}],[\"次\",{\"1\":{\"261\":1}}],[\"拿到也看不懂\",{\"1\":{\"261\":1}}],[\"延迟执行\",{\"0\":{\"261\":1}}],[\"连续使用\",{\"1\":{\"260\":1}}],[\"连接mysql\",{\"1\":{\"49\":1}}],[\"报错\",{\"1\":{\"260\":1}}],[\"平均数\",{\"1\":{\"260\":1}}],[\"平台日志\",{\"1\":{\"291\":1}}],[\"平台中\",{\"1\":{\"281\":1}}],[\"平台模块系统的引入\",{\"1\":{\"279\":1}}],[\"平台的一个特性\",{\"1\":{\"214\":1}}],[\"平台下的msi和exe\",{\"1\":{\"190\":1}}],[\"平台到\",{\"1\":{\"190\":1}}],[\"平台时更加考虑的是jvm\",{\"1\":{\"180\":1}}],[\"平台\",{\"1\":{\"155\":1}}],[\"列表中最小的数\",{\"1\":{\"260\":1}}],[\"列表中最大的数\",{\"1\":{\"260\":1}}],[\"列出当前的存储库\",{\"1\":{\"26\":1}}],[\"号隔开\",{\"1\":{\"260\":1}}],[\"各种格式化\",{\"1\":{\"269\":1}}],[\"各元素用\",{\"1\":{\"260\":1}}],[\"各类版本控制忽略文件生成工具\",{\"1\":{\"61\":1}}],[\"具有代表性的方法之使用\",{\"1\":{\"260\":1}}],[\"具体的步骤可以参考这篇文章\",{\"1\":{\"235\":1}}],[\"具体能够被归档的类包括所有已被加载\",{\"1\":{\"174\":1}}],[\"具体某个包所在的目录\",{\"1\":{\"10\":1}}],[\"合并流\",{\"1\":{\"259\":1,\"260\":1}}],[\"截短长度不能超过\",{\"1\":{\"259\":1}}],[\"遍历\",{\"1\":{\"259\":1}}],[\"串行流\",{\"1\":{\"258\":1}}],[\"流的新特性\",{\"1\":{\"291\":1}}],[\"流\",{\"1\":{\"279\":1}}],[\"流类型\",{\"0\":{\"258\":1}}],[\"流程引擎\",{\"1\":{\"61\":1}}],[\"配合使用\",{\"1\":{\"257\":1}}],[\"配置oh\",{\"0\":{\"134\":1}}],[\"配置\",{\"0\":{\"130\":1}}],[\"配置界面profiles\",{\"1\":{\"129\":1}}],[\"配置界面\",{\"1\":{\"128\":1,\"129\":1}}],[\"配置主题\",{\"1\":{\"128\":1}}],[\"配置iterm2\",{\"0\":{\"128\":1}}],[\"配置其中一个\",{\"1\":{\"78\":1}}],[\"配置gradle\",{\"1\":{\"72\":1}}],[\"配置文件一键转换成\",{\"1\":{\"61\":1}}],[\"配置存放目录\",{\"1\":{\"53\":1}}],[\"配置存放目录c\",{\"1\":{\"53\":1}}],[\"配置npm\",{\"1\":{\"48\":1}}],[\"配置环境变量\",{\"1\":{\"45\":1}}],[\"计算间隔多少年\",{\"1\":{\"273\":2}}],[\"计算流符合条件的流的数量\",{\"1\":{\"260\":1}}],[\"计算表达式\",{\"1\":{\"115\":1}}],[\"计数等\",{\"1\":{\"257\":1}}],[\"统计\",{\"1\":{\"257\":1}}],[\"构造方法调用\",{\"1\":{\"255\":1}}],[\"超类上的方法调用\",{\"1\":{\"255\":1}}],[\"传统解决\",{\"1\":{\"263\":1}}],[\"传统foreach\",{\"1\":{\"254\":1}}],[\"传统的\",{\"1\":{\"168\":1}}],[\"把模块化开发实践引入到了\",{\"1\":{\"281\":1}}],[\"把它们进行了分离\",{\"1\":{\"270\":1}}],[\"把list转为string\",{\"1\":{\"260\":1}}],[\"把abc放入容器中\",{\"1\":{\"260\":1}}],[\"把无用代码全部省略\",{\"1\":{\"253\":1}}],[\"把中央仓库的查找集成到了\",{\"1\":{\"61\":1}}],[\"过滤值\",{\"0\":{\"267\":1}}],[\"过滤\",{\"1\":{\"259\":1}}],[\"过去给方法传动态参数的唯一方法是使用内部类\",{\"1\":{\"253\":1}}],[\"过后的下一代\",{\"1\":{\"190\":1}}],[\"替代匿名内部类\",{\"0\":{\"253\":1}}],[\"替换为\",{\"1\":{\"272\":1}}],[\"替换了之前版本中包含的\",{\"1\":{\"158\":1}}],[\"替换成\",{\"1\":{\"148\":1}}],[\"替换\",{\"1\":{\"61\":1,\"145\":1,\"283\":1}}],[\"替换文字\",{\"1\":{\"58\":1}}],[\"替换bottles源\",{\"1\":{\"14\":1}}],[\"替换brew\",{\"1\":{\"14\":1}}],[\"带来的便捷与清爽\",{\"1\":{\"253\":1}}],[\"带来的便利\",{\"1\":{\"252\":1}}],[\"带来了很多重大的变化其中最重要的改动是\",{\"1\":{\"279\":1}}],[\"带来了\",{\"1\":{\"226\":1}}],[\"带来了两项更新\",{\"1\":{\"166\":1}}],[\"让\",{\"1\":{\"250\":1}}],[\"让你可以找到性能瓶颈\",{\"1\":{\"61\":1}}],[\"接下来我们看java\",{\"1\":{\"259\":1}}],[\"接下来谈众所周知的\",{\"1\":{\"250\":1}}],[\"接口概览\",{\"1\":{\"288\":1}}],[\"接口来实现对原生进程进行管理\",{\"1\":{\"288\":1}}],[\"接口的使用就更加灵活了\",{\"1\":{\"285\":1}}],[\"接口的方法是\",{\"1\":{\"248\":1}}],[\"接口私有方法\",{\"0\":{\"285\":1}}],[\"接口多实现\",{\"1\":{\"248\":1}}],[\"接口和抽象类有什么区别的\",{\"1\":{\"248\":1}}],[\"接口和\",{\"1\":{\"248\":1}}],[\"接口又实现了\",{\"1\":{\"248\":1}}],[\"接口添加了一个默认方法\",{\"1\":{\"192\":1}}],[\"接口\",{\"1\":{\"62\":1,\"249\":1,\"253\":3}}],[\"接口方法和\",{\"1\":{\"61\":1}}],[\"记住接口永远和类不一样\",{\"1\":{\"248\":1}}],[\"记录模式在\",{\"1\":{\"241\":1}}],[\"记录模式不能单独使用\",{\"1\":{\"241\":1}}],[\"记录模式\",{\"0\":{\"241\":1},\"1\":{\"234\":1,\"239\":1,\"241\":1}}],[\"记录类型变更历史\",{\"1\":{\"211\":1}}],[\"记录类型\",{\"0\":{\"211\":1}}],[\"修饰但是值在初始化后从未更改的变量\",{\"1\":{\"286\":1}}],[\"修饰\",{\"1\":{\"248\":2}}],[\"修改的时候\",{\"1\":{\"248\":1}}],[\"修改完后需重启idea才能生效\",{\"1\":{\"73\":1}}],[\"修改配色\",{\"1\":{\"61\":1}}],[\"修改为\",{\"1\":{\"61\":1,\"99\":1}}],[\"修改默认shell为zsh\",{\"1\":{\"13\":1}}],[\"好像是废话\",{\"1\":{\"248\":1}}],[\"好在国内的清华大学和中科大提供了\",{\"1\":{\"34\":1}}],[\"好在\",{\"1\":{\"8\":1,\"37\":1}}],[\"没多大区别了\",{\"1\":{\"248\":1}}],[\"没有密封类之前\",{\"1\":{\"199\":1}}],[\"没有办法正常的工作\",{\"1\":{\"27\":1}}],[\"似乎和\",{\"1\":{\"248\":1}}],[\"须要实现类重写\",{\"1\":{\"248\":1}}],[\"诸多原因使它成为目前市场上使用最多的\",{\"1\":{\"247\":1}}],[\"诸如\",{\"1\":{\"25\":1}}],[\"详见\",{\"1\":{\"246\":1}}],[\"详见jep\",{\"1\":{\"245\":1}}],[\"详情可以看\",{\"1\":{\"155\":1}}],[\"做了一些细微变化\",{\"1\":{\"244\":1}}],[\"做了些增强\",{\"1\":{\"201\":1,\"291\":1}}],[\"抽象的统一\",{\"1\":{\"243\":1}}],[\"抽象类\",{\"1\":{\"199\":1}}],[\"每个时区相差\",{\"1\":{\"276\":1}}],[\"每一次的预览基本都会有一些小改进\",{\"1\":{\"242\":1}}],[\"每次加锁都锁在了不同的对象上\",{\"1\":{\"207\":1}}],[\"每次\",{\"1\":{\"180\":1}}],[\"优于线程局部变量\",{\"1\":{\"240\":1}}],[\"优化\",{\"0\":{\"229\":1},\"1\":{\"235\":1}}],[\"优化奠定基础\",{\"1\":{\"155\":1}}],[\"作用域值允许在大型程序中的组件之间安全有效地共享数据\",{\"1\":{\"240\":1}}],[\"作用域值\",{\"0\":{\"240\":1},\"1\":{\"239\":1,\"240\":1}}],[\"作为flow\",{\"1\":{\"289\":1}}],[\"作为\",{\"1\":{\"214\":1,\"279\":1}}],[\"作为继\",{\"1\":{\"190\":1}}],[\"作为标准平台在增加新特性的严谨态度\",{\"1\":{\"179\":1}}],[\"作为预览特性加入\",{\"1\":{\"167\":1}}],[\"作为局部变量的类型而不是实际类型\",{\"1\":{\"156\":1}}],[\"结果\",{\"1\":{\"273\":1}}],[\"结果的处理可能包括处理或重新抛出异常\",{\"1\":{\"238\":1,\"245\":1}}],[\"结构化并发非常适合虚拟线程\",{\"1\":{\"238\":1,\"245\":1}}],[\"结构化并发的基本\",{\"1\":{\"238\":1,\"245\":1}}],[\"结构化并发保留了单线程代码的可读性\",{\"1\":{\"238\":1,\"245\":1}}],[\"结构化并发将不同线程中运行的多个任务视为单个工作单元\",{\"1\":{\"238\":1,\"245\":1}}],[\"结构化并发\",{\"0\":{\"238\":1,\"245\":1},\"1\":{\"234\":1,\"239\":1}}],[\"结构中\",{\"1\":{\"143\":1}}],[\"源码\",{\"1\":{\"268\":1}}],[\"源码透视\",{\"1\":{\"236\":1,\"244\":1}}],[\"源代码是使用版本管理工具\",{\"1\":{\"214\":1}}],[\"源代码中使用\",{\"1\":{\"204\":1}}],[\"源代码在内存中编译\",{\"1\":{\"157\":1}}],[\"源代码\",{\"1\":{\"157\":2}}],[\"感兴趣的可以去看看\",{\"1\":{\"236\":1,\"244\":1}}],[\"感觉有点厉害\",{\"1\":{\"64\":1}}],[\"知乎有一个关于\",{\"1\":{\"236\":1,\"244\":1}}],[\"维护和观察高吞吐量并发应用程序的工作量\",{\"1\":{\"236\":1,\"244\":1}}],[\"维护它所需的工作量很大\",{\"1\":{\"222\":1}}],[\"兼顾了多线程的优点\",{\"1\":{\"236\":1,\"244\":1}}],[\"许多虚拟线程共享同一个操作系统线程\",{\"1\":{\"236\":1,\"238\":1,\"244\":1,\"245\":1}}],[\"库函数的\",{\"1\":{\"235\":1}}],[\"库的发行版上\",{\"1\":{\"214\":1}}],[\"影响\",{\"1\":{\"235\":1}}],[\"虚拟线程在\",{\"1\":{\"244\":1}}],[\"虚拟线程在其他多线程语言中已经被证实是十分有用的\",{\"1\":{\"236\":1,\"244\":1}}],[\"虚拟线程是\",{\"1\":{\"238\":1,\"245\":1}}],[\"虚拟线程的详细解读和原理可以看下面这两篇文章\",{\"1\":{\"236\":1,\"244\":1}}],[\"虚拟线程的讨论\",{\"1\":{\"236\":1,\"244\":1}}],[\"虚拟线程的数量可以远大于操作系统线程的数量\",{\"1\":{\"236\":1,\"244\":1}}],[\"虚拟线程避免了上下文切换的额外耗费\",{\"1\":{\"236\":1,\"244\":1}}],[\"虚拟线程\",{\"0\":{\"236\":1,\"244\":1},\"1\":{\"234\":1,\"236\":2,\"239\":1,\"244\":2}}],[\"虚拟机运行时才确定的\",{\"1\":{\"227\":1}}],[\"虚拟机的优化\",{\"1\":{\"180\":1}}],[\"虚拟机优化\",{\"0\":{\"180\":1}}],[\"虚拟机\",{\"1\":{\"147\":1}}],[\"速度更快\",{\"1\":{\"230\":1}}],[\"速度会快很多\",{\"1\":{\"10\":1}}],[\"互联网地址解析\",{\"0\":{\"232\":1},\"1\":{\"226\":1}}],[\"那它对接口有没有要求呢\",{\"1\":{\"253\":1}}],[\"那样危险和脆弱\",{\"1\":{\"224\":1,\"233\":1,\"235\":1,\"243\":1}}],[\"那么最后得到的是一个二维数组\",{\"1\":{\"264\":1}}],[\"那么这种类就很适合使用record来声明\",{\"1\":{\"187\":1}}],[\"那么只需要执行\",{\"1\":{\"15\":1}}],[\"向前发展\",{\"1\":{\"223\":1}}],[\"向量计算由对向量的一系列操作组成\",{\"1\":{\"231\":1,\"246\":1}}],[\"向量\",{\"0\":{\"203\":1,\"225\":1,\"231\":1,\"237\":1,\"246\":1},\"1\":{\"203\":1,\"216\":1,\"225\":1,\"226\":1,\"231\":4,\"234\":1,\"237\":1,\"239\":1,\"246\":3}}],[\"多少月\",{\"1\":{\"273\":1}}],[\"多少月方法类似\",{\"1\":{\"273\":1}}],[\"多年来\",{\"1\":{\"223\":1}}],[\"多个\",{\"1\":{\"168\":1}}],[\"级联调用\",{\"1\":{\"263\":1}}],[\"级\",{\"1\":{\"222\":1}}],[\"保留实验性的\",{\"1\":{\"222\":1}}],[\"保存之后\",{\"1\":{\"107\":1}}],[\"保存时的一些自动操作\",{\"1\":{\"61\":1}}],[\"激活机制已过时且不再使用\",{\"1\":{\"220\":1}}],[\"激活机制\",{\"1\":{\"220\":1}}],[\"激活地址\",{\"1\":{\"112\":1}}],[\"值\",{\"1\":{\"287\":1}}],[\"值的判断也进行了优化\",{\"1\":{\"219\":1}}],[\"值得注意的是如果坚决不想看见\",{\"1\":{\"268\":1}}],[\"值得注意的是\",{\"1\":{\"207\":1}}],[\"正例\",{\"1\":{\"263\":1}}],[\"正式的时区划分为每隔经度\",{\"1\":{\"276\":1}}],[\"正式\",{\"1\":{\"236\":1,\"244\":1}}],[\"正式发布\",{\"1\":{\"215\":1}}],[\"正如上面的代码所演示的那样\",{\"1\":{\"286\":1}}],[\"正如\",{\"1\":{\"219\":1,\"242\":1}}],[\"浏览器端运行的\",{\"1\":{\"218\":1}}],[\"弃用安全管理器\",{\"1\":{\"223\":1}}],[\"弃用安全管理器以便在将来的版本中删除\",{\"1\":{\"223\":1}}],[\"弃用安全管理器以进行删除\",{\"0\":{\"223\":1},\"1\":{\"216\":1}}],[\"弃用\",{\"0\":{\"218\":1}}],[\"又称为确定性随机位生成器\",{\"1\":{\"217\":1}}],[\"且缺少常见的伪随机算法支持\",{\"1\":{\"217\":1}}],[\"渲染管道\",{\"1\":{\"216\":1}}],[\"恢复始终严格的浮点语义\",{\"1\":{\"216\":1}}],[\"社区八年努力的成果\",{\"1\":{\"216\":1}}],[\"社区的\",{\"1\":{\"214\":1}}],[\"发布的最重要新特性\",{\"1\":{\"250\":1}}],[\"发布了\",{\"1\":{\"247\":1}}],[\"发布于\",{\"1\":{\"141\":1,\"279\":1}}],[\"发行版也适用\",{\"1\":{\"214\":1}}],[\"发行版\",{\"1\":{\"214\":2}}],[\"仓库\",{\"1\":{\"214\":1}}],[\"现在\",{\"1\":{\"275\":1}}],[\"现在迁移到了\",{\"1\":{\"214\":1}}],[\"现在在\",{\"1\":{\"208\":1,\"214\":1}}],[\"迁移到\",{\"1\":{\"214\":3}}],[\"粘合代码\",{\"1\":{\"214\":1}}],[\"原生接口\",{\"1\":{\"214\":1,\"235\":1}}],[\"原文写的很不错\",{\"1\":{\"207\":1}}],[\"访问变量\",{\"0\":{\"256\":1}}],[\"访问外部函数和外部内存存在的一些痛点\",{\"1\":{\"235\":1}}],[\"访问原生代码的特性\",{\"1\":{\"214\":1}}],[\"访问堆信息\",{\"1\":{\"158\":1}}],[\"纯\",{\"1\":{\"214\":1}}],[\"孵化\",{\"0\":{\"224\":1,\"238\":1},\"1\":{\"214\":1,\"216\":1,\"234\":1}}],[\"外部函数和内存\",{\"0\":{\"224\":1,\"235\":1,\"243\":1},\"1\":{\"216\":1,\"224\":1,\"226\":1,\"233\":1,\"234\":1,\"235\":1,\"239\":1,\"243\":1}}],[\"外部链接器\",{\"1\":{\"214\":1}}],[\"外部内存访问\",{\"0\":{\"209\":1}}],[\"环回连接更安全\",{\"1\":{\"214\":1}}],[\"环境变量的配置\",{\"0\":{\"45\":1}}],[\"环境\",{\"0\":{\"27\":1}}],[\"区域设置等因素\",{\"1\":{\"227\":1}}],[\"区域时\",{\"1\":{\"171\":1}}],[\"区别在于套接字是通过文件系统路径名而不是\",{\"1\":{\"214\":1}}],[\"套接字比\",{\"1\":{\"214\":1}}],[\"套接字用于同一主机上的进程间通信\",{\"1\":{\"214\":1}}],[\"套接字支持\",{\"1\":{\"214\":1}}],[\"套接字一直是大多数\",{\"1\":{\"214\":1}}],[\"套接字通道和服务器套接字通道\",{\"1\":{\"214\":1}}],[\"套接字通道\",{\"1\":{\"214\":1}}],[\"集合里的元素即使\",{\"1\":{\"263\":1}}],[\"集合迭代\",{\"0\":{\"254\":1}}],[\"集合增强\",{\"0\":{\"145\":1}}],[\"集成到了\",{\"1\":{\"213\":1,\"221\":1}}],[\"仍然可以使用单个命令行选项放宽对所有软件包的封装\",{\"1\":{\"212\":1}}],[\"仍使用\",{\"1\":{\"148\":1}}],[\"强封装由\",{\"1\":{\"212\":1}}],[\"强制返回\",{\"0\":{\"120\":1}}],[\"强制步入\",{\"1\":{\"115\":1}}],[\"鼓励开发人员从使用内部元素迁移到使用标准\",{\"1\":{\"212\":1}}],[\"内部\",{\"1\":{\"212\":1}}],[\"内部元素\",{\"0\":{\"212\":1},\"1\":{\"216\":1}}],[\"内存更快速地返回到操作系统\",{\"1\":{\"206\":1}}],[\"除外\",{\"1\":{\"212\":1}}],[\"除非它用一个常量表达式初始化\",{\"1\":{\"211\":1}}],[\"除了日期计算繁琐\",{\"1\":{\"274\":1}}],[\"除了命令行\",{\"1\":{\"39\":1}}],[\"除了使用命令行搜索以外\",{\"1\":{\"18\":1}}],[\"非静态域\",{\"1\":{\"290\":1}}],[\"非静态内部类可以定义非常量的静态成员\",{\"1\":{\"211\":2}}],[\"非线程安全\",{\"1\":{\"269\":1}}],[\"非商业的\",{\"1\":{\"214\":1}}],[\"非长期支持版本\",{\"1\":{\"226\":1,\"234\":1,\"239\":1}}],[\"非长期支持\",{\"1\":{\"202\":1}}],[\"首次引入\",{\"1\":{\"210\":1}}],[\"隐式等\",{\"1\":{\"209\":1}}],[\"隐藏类不能直接被其他类的字节码使用\",{\"1\":{\"197\":1}}],[\"隐藏类是为框架\",{\"1\":{\"197\":1}}],[\"隐藏类\",{\"0\":{\"197\":1}}],[\"隐藏用户名和主机名\",{\"1\":{\"127\":1}}],[\"显式\",{\"1\":{\"209\":1}}],[\"显示不同日志信息级别的颜色和背景色\",{\"1\":{\"61\":1}}],[\"控制外部内存的分配和释放\",{\"1\":{\"235\":1}}],[\"控制\",{\"1\":{\"209\":1,\"212\":1}}],[\"控制台中文乱码\",{\"0\":{\"73\":1,\"101\":1}}],[\"无论如何\",{\"1\":{\"255\":1}}],[\"无论操作何种内存\",{\"1\":{\"209\":1}}],[\"无需用户进行试运行来为每个应用程序创建类列表\",{\"1\":{\"174\":1}}],[\"无需自己单独配置了^\",{\"1\":{\"64\":1}}],[\"持久内存\",{\"1\":{\"209\":1}}],[\"通用\",{\"1\":{\"209\":1}}],[\"通过上面比较新老\",{\"1\":{\"277\":1}}],[\"通过简单的链式编程\",{\"1\":{\"262\":1}}],[\"通过流把文件从一个地方输入到另一个地方\",{\"1\":{\"257\":1}}],[\"通过调用外部函数对堆外数据进行排序\",{\"1\":{\"235\":1}}],[\"通过高效地调用外部函数\",{\"1\":{\"224\":1,\"233\":1,\"235\":1,\"243\":1}}],[\"通过把要被回收的区域集\",{\"1\":{\"166\":1}}],[\"通过\",{\"1\":{\"152\":1,\"184\":1,\"235\":1}}],[\"通过引入一套纯净的垃圾收集器接口来将不同垃圾收集器的源代码分隔开\",{\"1\":{\"143\":1}}],[\"通过切换线程控制线程执行顺序\",{\"1\":{\"122\":1}}],[\"通过快捷键生成注释\",{\"1\":{\"61\":1}}],[\"应该是\",{\"1\":{\"209\":1}}],[\"应该能够对各种外部内存\",{\"1\":{\"209\":1}}],[\"应该使用\",{\"1\":{\"207\":1}}],[\"应用可以通过新增的\",{\"1\":{\"281\":1}}],[\"应用商店\",{\"1\":{\"208\":1}}],[\"应用吞吐能力不会下降超过\",{\"1\":{\"155\":1}}],[\"应用程序创建自己的轻量级\",{\"1\":{\"281\":1}}],[\"应用程序执行结束时动态进行类归档\",{\"1\":{\"174\":1}}],[\"应用程序类数据共享\",{\"0\":{\"147\":1},\"1\":{\"141\":1}}],[\"应用程序\",{\"1\":{\"26\":2,\"208\":1}}],[\"应用的扩展\",{\"1\":{\"10\":1}}],[\"简单来说就是没有被\",{\"1\":{\"286\":1}}],[\"简单来说\",{\"1\":{\"281\":1}}],[\"简化了高并发程序的复杂\",{\"1\":{\"236\":1,\"244\":1}}],[\"简易的\",{\"0\":{\"228\":1},\"1\":{\"226\":1}}],[\"简而言之\",{\"1\":{\"207\":1}}],[\"简称\",{\"1\":{\"147\":1}}],[\"均不同\",{\"1\":{\"207\":1}}],[\"示例\",{\"1\":{\"207\":1}}],[\"举个自增的例子\",{\"1\":{\"207\":1}}],[\"举个栗子\",{\"1\":{\"61\":1}}],[\"告警\",{\"1\":{\"207\":1}}],[\"函数式接口参数\",{\"1\":{\"253\":1}}],[\"函数式接口\",{\"0\":{\"249\":1}}],[\"函数\",{\"1\":{\"207\":1}}],[\"仔细观察原始类型的包装类\",{\"1\":{\"207\":1}}],[\"存储\",{\"1\":{\"284\":1}}],[\"存储结构优化\",{\"0\":{\"284\":1}}],[\"存储空间\",{\"1\":{\"214\":1}}],[\"存在使用风险\",{\"1\":{\"207\":1}}],[\"存档\",{\"0\":{\"174\":1}}],[\"元素用于指定标记了\",{\"1\":{\"207\":1}}],[\"早在\",{\"1\":{\"207\":1}}],[\"剖析\",{\"1\":{\"207\":1,\"215\":1}}],[\"弹性元空间这个特性可将未使用的\",{\"1\":{\"206\":1}}],[\"弹性元空间\",{\"0\":{\"206\":1}}],[\"消除\",{\"1\":{\"205\":1}}],[\"甚至是异常\",{\"1\":{\"207\":1}}],[\"甚至在大堆上也允许在毫秒内暂停\",{\"1\":{\"205\":1}}],[\"甚至于能打开\",{\"1\":{\"61\":1}}],[\"尽管\",{\"1\":{\"203\":1,\"225\":1}}],[\"大概横跨\",{\"1\":{\"276\":1}}],[\"大同小异\",{\"1\":{\"273\":1}}],[\"大多数现代\",{\"1\":{\"203\":1,\"225\":1}}],[\"大大加大了\",{\"1\":{\"147\":1}}],[\"技术\",{\"1\":{\"203\":1,\"225\":1}}],[\"充分利用单指令多数据\",{\"1\":{\"203\":1,\"225\":1}}],[\"架构上的最佳向量指令\",{\"1\":{\"231\":1,\"246\":1}}],[\"架构上的最佳向量硬件指令\",{\"1\":{\"203\":1,\"225\":1}}],[\"架构上使用\",{\"1\":{\"214\":1}}],[\"架包选择\",{\"1\":{\"61\":1}}],[\"第一考虑的是\",{\"1\":{\"277\":1}}],[\"第一天\",{\"1\":{\"274\":1}}],[\"第一次使用\",{\"1\":{\"260\":1}}],[\"第一次孵化外部内存访问\",{\"1\":{\"209\":1}}],[\"第一次孵化\",{\"0\":{\"203\":1,\"240\":1},\"1\":{\"239\":1}}],[\"第五次孵化\",{\"0\":{\"246\":1},\"1\":{\"239\":1}}],[\"第四次预览\",{\"0\":{\"242\":1},\"1\":{\"239\":1}}],[\"第四次孵化\",{\"0\":{\"237\":1},\"1\":{\"234\":1}}],[\"第四轮由\",{\"1\":{\"203\":1,\"225\":1,\"231\":1,\"237\":1,\"246\":1}}],[\"第二次使用\",{\"1\":{\"260\":1}}],[\"第二次预览\",{\"0\":{\"241\":1,\"243\":1,\"244\":1},\"1\":{\"226\":1,\"239\":3}}],[\"第二次孵化\",{\"0\":{\"225\":1,\"233\":1,\"245\":1},\"1\":{\"216\":1,\"226\":1,\"239\":1}}],[\"第二轮孵化由\",{\"1\":{\"203\":1,\"224\":1,\"225\":1,\"231\":1,\"233\":1,\"235\":1,\"237\":1,\"246\":1}}],[\"第三次孵化\",{\"0\":{\"209\":1,\"231\":1},\"1\":{\"226\":1}}],[\"第三轮孵化由\",{\"1\":{\"203\":1,\"225\":1,\"231\":1,\"237\":1,\"246\":1}}],[\"启用\",{\"0\":{\"204\":1}}],[\"启用偏向锁定\",{\"1\":{\"201\":1}}],[\"启动单文件源代码程序\",{\"0\":{\"157\":1},\"1\":{\"151\":1}}],[\"启动速度就会得到提升\",{\"1\":{\"147\":1}}],[\"偏向锁的引入增加了\",{\"1\":{\"201\":1}}],[\"禁用和废弃偏向锁\",{\"1\":{\"201\":1}}],[\"继续使用这个\",{\"1\":{\"262\":1}}],[\"继续收集更多反馈\",{\"1\":{\"210\":1}}],[\"继续孵化\",{\"1\":{\"208\":1}}],[\"继续预览特性\",{\"1\":{\"200\":1}}],[\"继承\",{\"1\":{\"199\":1}}],[\"封闭类可以不使用\",{\"1\":{\"199\":1}}],[\"密封类得到了改进\",{\"1\":{\"213\":1,\"221\":1}}],[\"密封类由\",{\"1\":{\"213\":1,\"221\":1}}],[\"密封类可以对继承或者实现它们的类进行限制\",{\"1\":{\"199\":1}}],[\"密封类\",{\"0\":{\"199\":1,\"213\":1,\"221\":1},\"1\":{\"199\":1,\"216\":1}}],[\"密码\",{\"1\":{\"49\":1}}],[\"经过两个版本优异的表现成为成为默认垃圾回收器\",{\"1\":{\"282\":1}}],[\"经过多个版本的迭代\",{\"1\":{\"194\":1}}],[\"经常占用过多的堆外内存\",{\"1\":{\"206\":1}}],[\"经常会在执行命令的时候触发更新\",{\"1\":{\"28\":1}}],[\"功成而退\",{\"1\":{\"190\":1}}],[\"功能支持\",{\"1\":{\"226\":1}}],[\"功能基础上再次拓展\",{\"1\":{\"147\":1}}],[\"功能\",{\"0\":{\"147\":1},\"1\":{\"141\":1,\"158\":1}}],[\"功能很多\",{\"1\":{\"58\":1}}],[\"垃圾收集器中最后一个延迟源可以极大地提高应用程序的性能和效率\",{\"1\":{\"205\":1}}],[\"垃圾收集器\",{\"1\":{\"190\":1}}],[\"垃圾回收器被废弃了\",{\"1\":{\"282\":1}}],[\"垃圾回收器能中止垃圾回收过程\",{\"1\":{\"166\":1}}],[\"垃圾回收器接口\",{\"0\":{\"143\":1},\"1\":{\"141\":1}}],[\"虽然发布距今已将近\",{\"1\":{\"247\":1}}],[\"虽然jna\",{\"1\":{\"235\":1}}],[\"虽然其性能优于现有的\",{\"1\":{\"195\":1}}],[\"虽然其实\",{\"1\":{\"190\":1}}],[\"虽然官方没有提供\",{\"1\":{\"8\":1}}],[\"生如逆旅\",{\"1\":{\"188\":3}}],[\"生成随机数\",{\"1\":{\"217\":1}}],[\"生成对象\",{\"1\":{\"61\":1}}],[\"生成\",{\"1\":{\"58\":1}}],[\"生成静态文件\",{\"1\":{\"3\":1}}],[\"素履所往\",{\"1\":{\"188\":3}}],[\"凡心所向\",{\"1\":{\"188\":3}}],[\"共三个\",{\"1\":{\"187\":1}}],[\"共享相同的归档文件时\",{\"1\":{\"147\":1}}],[\"数组元素和堆外数据结构中的组成部分等\",{\"1\":{\"290\":1}}],[\"数组存储字符串\",{\"1\":{\"284\":1}}],[\"数组中的四个字符串进行排序\",{\"1\":{\"235\":1}}],[\"数据库的查询结果可能为\",{\"1\":{\"263\":1}}],[\"数据结构里增加了红黑树\",{\"1\":{\"247\":1}}],[\"数据类\",{\"1\":{\"187\":1}}],[\"数字签名算法\",{\"0\":{\"195\":1}}],[\"数字格式化工具类\",{\"0\":{\"164\":1}}],[\"数字\",{\"1\":{\"140\":1}}],[\"变量没有被显示声明为\",{\"1\":{\"286\":1}}],[\"变量\",{\"1\":{\"286\":3}}],[\"变量句柄的含义类似于已有的方法句柄\",{\"1\":{\"290\":1}}],[\"变量句柄是一个变量或一组变量的引用\",{\"1\":{\"290\":1}}],[\"变量句柄\",{\"0\":{\"290\":1},\"1\":{\"279\":1}}],[\"变量是\",{\"1\":{\"248\":1}}],[\"变量注释模板\",{\"1\":{\"61\":1}}],[\"变为正式版本\",{\"1\":{\"185\":1}}],[\"假设有一个\",{\"1\":{\"263\":1}}],[\"假设这段代码会发生空指针\",{\"1\":{\"184\":1}}],[\"假设您要删除用户帐户\",{\"1\":{\"49\":1}}],[\"空指针异常精准提示\",{\"0\":{\"184\":1}}],[\"空格风格之间切换\",{\"1\":{\"61\":1}}],[\"整体优化的方向是高效\",{\"1\":{\"180\":1}}],[\"移植到\",{\"1\":{\"214\":2}}],[\"移植到了\",{\"1\":{\"214\":1}}],[\"移植\",{\"1\":{\"214\":2}}],[\"移除了\",{\"1\":{\"190\":1}}],[\"移除老旧的不再适用于今天的垃圾回收算法等\",{\"1\":{\"180\":1}}],[\"移动鼠标到类上\",{\"1\":{\"61\":1}}],[\"另一方面个人认为是对于预览特性应该采取审慎使用的态度\",{\"1\":{\"179\":1}}],[\"另外\",{\"1\":{\"142\":1,\"176\":1,\"199\":1,\"273\":1}}],[\"才正式转正进入\",{\"1\":{\"179\":1}}],[\"才能使用\",{\"1\":{\"165\":1}}],[\"到了\",{\"1\":{\"201\":1,\"282\":1}}],[\"到\",{\"1\":{\"179\":1,\"212\":1,\"273\":2}}],[\"到行尾\",{\"1\":{\"140\":1}}],[\"到行首\",{\"1\":{\"140\":1}}],[\"必须指定其他命令行选项\",{\"1\":{\"179\":1}}],[\"必须在root用户下执行\",{\"1\":{\"49\":2}}],[\"规格和实现是完整的\",{\"1\":{\"179\":1}}],[\"规范\",{\"1\":{\"158\":1}}],[\"先贴一段\",{\"1\":{\"179\":1}}],[\"补充\",{\"0\":{\"178\":1}}],[\"条件\",{\"1\":{\"177\":1}}],[\"块中声明变量\",{\"1\":{\"286\":1}}],[\"块\",{\"1\":{\"177\":1}}],[\"块的关键字\",{\"1\":{\"177\":1}}],[\"转\",{\"1\":{\"276\":2}}],[\"转换都需要借助\",{\"1\":{\"272\":1}}],[\"转换为\",{\"1\":{\"176\":1}}],[\"转正\",{\"0\":{\"185\":1,\"194\":1,\"196\":1,\"210\":1,\"211\":1,\"221\":1},\"1\":{\"216\":1}}],[\"转义序列如\",{\"1\":{\"176\":1}}],[\"转实体类\",{\"1\":{\"61\":1}}],[\"个\",{\"1\":{\"291\":1}}],[\"个核心接口\",{\"1\":{\"289\":1}}],[\"个模块\",{\"1\":{\"281\":1}}],[\"个省份划在一起\",{\"1\":{\"276\":1}}],[\"个国家或\",{\"1\":{\"276\":1}}],[\"个时区\",{\"1\":{\"276\":2}}],[\"个完全不一样的东东\",{\"1\":{\"261\":1}}],[\"个例子是我们在开发过程中最常见的\",{\"1\":{\"253\":1}}],[\"个修饰符的区别主要也是普通方法和静态方法的区别\",{\"1\":{\"248\":1}}],[\"个我觉得比较重要的新特性进行详细介绍\",{\"1\":{\"234\":1}}],[\"个特性\",{\"1\":{\"226\":4}}],[\"个类都各有缺陷\",{\"1\":{\"217\":1}}],[\"个新特性\",{\"1\":{\"216\":1,\"226\":1,\"234\":1,\"239\":1}}],[\"个新元素\",{\"1\":{\"207\":1}}],[\"个新的方法来操作文本块\",{\"1\":{\"176\":1}}],[\"个人感觉是终于可以在日常开发工具中先体验下\",{\"1\":{\"190\":1}}],[\"个人认为迄今为止mac平台最好用的终端\",{\"1\":{\"126\":1}}],[\"个人使用必备插件\",{\"1\":{\"61\":1}}],[\"quick\",{\"1\":{\"281\":1}}],[\"question\",{\"1\":{\"236\":1,\"244\":1}}],[\"query\",{\"1\":{\"176\":2}}],[\"qq\",{\"1\":{\"142\":1}}],[\"写的很赞\",{\"1\":{\"215\":1}}],[\"写法\",{\"1\":{\"176\":4}}],[\"写入到文本文件中\",{\"1\":{\"147\":1}}],[\"未支持文本块之前的\",{\"1\":{\"176\":2}}],[\"符号中间的任何内容都会被解释为字符串的一部分\",{\"1\":{\"176\":1}}],[\"引入外部函数和内存\",{\"1\":{\"235\":1}}],[\"引入外部内存访问\",{\"1\":{\"209\":2}}],[\"引入了结构化并发\",{\"1\":{\"238\":1,\"245\":1}}],[\"引入了实验性的提前\",{\"1\":{\"222\":1}}],[\"引入了打包工具\",{\"1\":{\"208\":1}}],[\"引入的\",{\"1\":{\"185\":1,\"190\":1}}],[\"引入新的垃圾回收算法\",{\"1\":{\"180\":1}}],[\"引入\",{\"0\":{\"177\":1},\"1\":{\"211\":1}}],[\"引入三重双引号来定义多行文本\",{\"1\":{\"176\":1}}],[\"引擎的增强\",{\"1\":{\"291\":1}}],[\"引擎彻底移除\",{\"1\":{\"201\":1}}],[\"引擎\",{\"1\":{\"61\":1,\"201\":1,\"291\":1}}],[\"定制的\",{\"1\":{\"281\":1}}],[\"定于\",{\"1\":{\"234\":1}}],[\"定义\",{\"1\":{\"249\":1}}],[\"定义了类和接口\",{\"1\":{\"235\":1}}],[\"定义了一个全新的\",{\"1\":{\"232\":1}}],[\"定义类\",{\"1\":{\"187\":1}}],[\"定义的类\",{\"1\":{\"187\":1}}],[\"定义多行字符串时只能通过换行转义或者换行连接符来变通支持的问题\",{\"1\":{\"176\":1}}],[\"定位\",{\"1\":{\"61\":1}}],[\"允许为\",{\"1\":{\"291\":1}}],[\"允许使用\",{\"1\":{\"255\":1}}],[\"允许把函数作为参数传递进方法中\",{\"1\":{\"250\":1}}],[\"允许在接口中使用私有方法\",{\"1\":{\"285\":1}}],[\"允许在\",{\"1\":{\"174\":1,\"204\":1}}],[\"允许将一组类预处理为共享归档文件\",{\"1\":{\"147\":1}}],[\"动态\",{\"0\":{\"174\":1}}],[\"终于将\",{\"1\":{\"227\":1}}],[\"终于成为了正式功能\",{\"1\":{\"208\":1}}],[\"终于迎来了重大更新\",{\"1\":{\"172\":1}}],[\"终端输入\",{\"1\":{\"139\":1}}],[\"周期中清空\",{\"1\":{\"171\":1}}],[\"释放未使用内存\",{\"0\":{\"171\":1}}],[\"之外的代码\",{\"1\":{\"224\":1,\"233\":1,\"235\":1,\"243\":1}}],[\"之前接触最多的是资源流\",{\"1\":{\"257\":1}}],[\"之前版本的老程序员\",{\"1\":{\"247\":1}}],[\"之前\",{\"1\":{\"184\":1,\"207\":1,\"211\":1,\"217\":1,\"229\":1,\"235\":1,\"271\":1,\"272\":2,\"273\":1,\"274\":1,\"286\":1}}],[\"之前的版本中\",{\"1\":{\"169\":1}}],[\"之后只需要\",{\"1\":{\"272\":1}}],[\"之后便可不再输入\",{\"1\":{\"65\":1}}],[\"之后\",{\"1\":{\"13\":1,\"184\":1,\"214\":1,\"228\":1,\"229\":1,\"271\":1,\"272\":1,\"273\":1,\"274\":1,\"279\":1,\"284\":1,\"286\":1}}],[\"模块的自定义运行时镜像\",{\"1\":{\"281\":1}}],[\"模块系统是jigsaw\",{\"1\":{\"281\":1}}],[\"模块化系统\",{\"0\":{\"281\":1},\"1\":{\"279\":1,\"281\":1}}],[\"模块名称从\",{\"1\":{\"208\":1}}],[\"模式变量不再隐式为\",{\"1\":{\"210\":1}}],[\"模式匹配分别在\",{\"1\":{\"242\":1}}],[\"模式匹配一同使用\",{\"1\":{\"241\":1}}],[\"模式匹配新特性\",{\"1\":{\"200\":1}}],[\"模式匹配\",{\"0\":{\"169\":1,\"200\":1,\"210\":1,\"242\":1},\"1\":{\"210\":1,\"226\":1,\"234\":1,\"239\":1}}],[\"模型的部署\",{\"1\":{\"208\":1}}],[\"模板参数配置\",{\"1\":{\"91\":1}}],[\"拆分为强制和可选部分\",{\"1\":{\"166\":1}}],[\"混合收集集合\",{\"1\":{\"166\":1}}],[\"收集器优化\",{\"0\":{\"166\":1}}],[\"收费\",{\"1\":{\"61\":1}}],[\"占据主要市场份额的今天有更大的可落地性\",{\"1\":{\"165\":1}}],[\"暂停与堆大小无关等\",{\"1\":{\"165\":1}}],[\"暂时只支持\",{\"1\":{\"62\":1}}],[\"格\",{\"1\":{\"162\":1}}],[\"格式化\",{\"0\":{\"271\":1}}],[\"格式化模版\",{\"1\":{\"61\":1}}],[\"格式化代码样式\",{\"1\":{\"58\":1}}],[\"缩进\",{\"1\":{\"162\":1}}],[\"缩小字体\",{\"1\":{\"56\":1}}],[\"飞行记录器之前是商业版\",{\"1\":{\"158\":1}}],[\"飞行记录器\",{\"1\":{\"158\":1}}],[\"装订扩展\",{\"1\":{\"158\":1}}],[\"例如\",{\"1\":{\"158\":1,\"212\":1}}],[\"例如打开终端模拟器的新实例\",{\"1\":{\"137\":2,\"138\":1}}],[\"协议\",{\"1\":{\"158\":1,\"214\":1}}],[\"堆内存等\",{\"1\":{\"209\":1}}],[\"堆内存返回给操作系统\",{\"1\":{\"166\":1}}],[\"堆之外的外部内存\",{\"1\":{\"209\":1}}],[\"堆由一组称为\",{\"1\":{\"171\":1}}],[\"堆分配采样方法\",{\"1\":{\"158\":1}}],[\"堆栈和垃圾收集情况一目了然\",{\"1\":{\"61\":1}}],[\"堆栈的可视化工具\",{\"1\":{\"61\":1}}],[\"低时延的垃圾回收表现\",{\"1\":{\"180\":1}}],[\"低开销的\",{\"1\":{\"158\":1}}],[\"低延迟的垃圾收集器\",{\"1\":{\"155\":1}}],[\"分解开\",{\"1\":{\"253\":1}}],[\"分配堆外内存以存储四个指针\",{\"1\":{\"235\":1}}],[\"分配堆上内存以存储四个字符串\",{\"1\":{\"235\":1}}],[\"分配外部内存\",{\"1\":{\"235\":1}}],[\"分配有限的内存资源\",{\"1\":{\"158\":1}}],[\"分屏效果等\",{\"1\":{\"127\":1}}],[\"初学者并希望尝试简单程序的人特别有用\",{\"1\":{\"157\":1}}],[\"初始化新zsh配置\",{\"1\":{\"134\":1}}],[\"唯一的约束在于所有相关的类必须定义在同一个\",{\"1\":{\"157\":1}}],[\"声明性的和可组合的数据导航和处理形式\",{\"1\":{\"241\":1}}],[\"声明时必须初始化\",{\"1\":{\"156\":1}}],[\"声明高亮\",{\"1\":{\"127\":1}}],[\"便引入了局部变量类型推断这一关键特性\",{\"1\":{\"156\":1}}],[\"便附带两个用\",{\"1\":{\"148\":1}}],[\"处在实验阶段\",{\"1\":{\"155\":1}}],[\"位平台\",{\"1\":{\"155\":1}}],[\"针以及\",{\"1\":{\"155\":1}}],[\"特性的设计和实现容易\",{\"1\":{\"179\":1}}],[\"特性和利用\",{\"1\":{\"155\":1}}],[\"特性在原来的\",{\"1\":{\"147\":1}}],[\"与是否有\",{\"1\":{\"249\":1}}],[\"与\",{\"1\":{\"155\":2,\"224\":1,\"233\":1,\"235\":1,\"243\":1}}],[\"停顿时间不超过\",{\"1\":{\"155\":1}}],[\"停止某个服务\",{\"1\":{\"25\":1}}],[\"主线存储库中\",{\"1\":{\"214\":1}}],[\"主要类\",{\"0\":{\"270\":1}}],[\"主要区别是\",{\"1\":{\"261\":1}}],[\"主要有\",{\"1\":{\"248\":1}}],[\"主要用于接受更多的使用反馈\",{\"1\":{\"200\":1}}],[\"主要用于返回一个值\",{\"1\":{\"177\":1}}],[\"主要在类型强转前探测对象的具体类型\",{\"1\":{\"169\":1}}],[\"主要目标是\",{\"1\":{\"165\":1}}],[\"主要为了满足如下目标进行设计\",{\"1\":{\"155\":1}}],[\"主导开发的\",{\"1\":{\"165\":1}}],[\"主题地址\",{\"1\":{\"128\":1}}],[\"主题\",{\"0\":{\"128\":1},\"1\":{\"128\":2}}],[\"主题插件\",{\"1\":{\"61\":1}}],[\"判断条件\",{\"1\":{\"287\":1}}],[\"判断\",{\"0\":{\"265\":1}}],[\"判断指定的\",{\"1\":{\"154\":1}}],[\"判断字符串是否为空\",{\"1\":{\"153\":1}}],[\"返回this\",{\"1\":{\"267\":1}}],[\"返回t的流\",{\"1\":{\"259\":1}}],[\"返回value\",{\"1\":{\"266\":3}}],[\"返回的是empty\",{\"1\":{\"264\":1}}],[\"返回optional对象\",{\"1\":{\"264\":1}}],[\"返回\",{\"1\":{\"264\":1}}],[\"返回类型为基本数据类型\",{\"1\":{\"263\":1}}],[\"返回类型必须是functional\",{\"1\":{\"255\":1}}],[\"返回符合条件的stream\",{\"1\":{\"260\":1}}],[\"返回此流中的元素数\",{\"1\":{\"259\":1}}],[\"返回由该流的\",{\"1\":{\"259\":1}}],[\"返回由该流的不同元素\",{\"1\":{\"259\":1}}],[\"返回由与给定predicate匹配的该流的元素组成的流\",{\"1\":{\"259\":1}}],[\"返回由行终止符分隔的字符串集合\",{\"1\":{\"153\":1}}],[\"返回其元素是指定值的顺序流\",{\"1\":{\"259\":1}}],[\"返回一个包含此流的元素的数组\",{\"1\":{\"259\":1}}],[\"返回一个\",{\"1\":{\"259\":1}}],[\"返回一个并行流\",{\"1\":{\"259\":1}}],[\"返回一个串行流\",{\"1\":{\"259\":1}}],[\"返回入参集合的一个不可变拷贝\",{\"1\":{\"145\":1}}],[\"去除字符串尾部空格\",{\"1\":{\"153\":1}}],[\"去除字符串首部空格\",{\"1\":{\"153\":1}}],[\"去除字符串首尾空格\",{\"1\":{\"153\":1}}],[\"去官网下载\",{\"1\":{\"127\":1}}],[\"增加参数后提示的异常中很明确的告知了哪里为空导致\",{\"1\":{\"184\":1}}],[\"增加了新的方法来读取和复制\",{\"1\":{\"291\":1}}],[\"增加了新的接口类型和实现\",{\"1\":{\"217\":1}}],[\"增加了list\",{\"1\":{\"283\":1}}],[\"增加了\",{\"1\":{\"207\":1,\"288\":1}}],[\"增加了两个的字符串处理方法\",{\"1\":{\"162\":1}}],[\"增加了一系列的字符串处理方法\",{\"1\":{\"153\":1}}],[\"增强的\",{\"1\":{\"243\":1}}],[\"增强的伪随机数生成器\",{\"0\":{\"217\":1},\"1\":{\"216\":1}}],[\"增强了\",{\"1\":{\"168\":1}}],[\"增强\",{\"0\":{\"146\":1,\"153\":1,\"154\":1,\"162\":1,\"163\":1,\"168\":1,\"171\":1,\"177\":1,\"189\":1,\"286\":1,\"287\":1},\"1\":{\"166\":1}}],[\"异步\",{\"1\":{\"152\":1}}],[\"异常\",{\"1\":{\"145\":1,\"264\":1,\"283\":1}}],[\"异常断点\",{\"0\":{\"117\":1}}],[\"该包下的所有接口都有\",{\"1\":{\"249\":1}}],[\"该用\",{\"1\":{\"248\":1}}],[\"该计算可以在运行时可靠地编译为支持的\",{\"1\":{\"231\":1,\"246\":1}}],[\"该孵化器\",{\"1\":{\"203\":1,\"214\":1,\"225\":1}}],[\"该功能的设计\",{\"1\":{\"179\":1}}],[\"该\",{\"1\":{\"152\":1,\"203\":1,\"214\":1,\"224\":1,\"225\":1,\"233\":1,\"235\":1,\"243\":1}}],[\"几乎被完全重写\",{\"1\":{\"152\":1}}],[\"标签来做这件事情\",{\"1\":{\"229\":1}}],[\"标记\",{\"1\":{\"207\":2}}],[\"标配将应用打成\",{\"1\":{\"190\":1}}],[\"标准化\",{\"0\":{\"152\":1},\"1\":{\"151\":1}}],[\"标识\",{\"1\":{\"61\":1}}],[\"表示单个空格\",{\"1\":{\"188\":1}}],[\"表示行尾\",{\"1\":{\"188\":1}}],[\"表示会对\",{\"1\":{\"151\":1}}],[\"表达式可以引用外边变量\",{\"1\":{\"256\":1}}],[\"表达式可以使代码变的更加简洁紧凑\",{\"1\":{\"250\":1}}],[\"表达式返回的类型必须是\",{\"1\":{\"255\":1}}],[\"表达式是一个匿名函数\",{\"1\":{\"250\":1}}],[\"表达式等等\",{\"1\":{\"247\":1}}],[\"表达式引入了类似\",{\"1\":{\"185\":1}}],[\"表达式中有广泛的应用\",{\"1\":{\"249\":1}}],[\"表达式中就多了一个关键字用于跳出\",{\"1\":{\"177\":1}}],[\"表达式中使用\",{\"1\":{\"156\":2}}],[\"表达式\",{\"0\":{\"250\":1},\"1\":{\"168\":1,\"250\":1,\"253\":1}}],[\"表中查询数据\",{\"1\":{\"49\":1}}],[\"相反\",{\"1\":{\"287\":1}}],[\"相隔\",{\"1\":{\"273\":2}}],[\"相差\",{\"1\":{\"273\":2}}],[\"相比于前面发布的版本来说\",{\"1\":{\"226\":1}}],[\"相比较上个版本无变化\",{\"1\":{\"210\":1}}],[\"相比\",{\"1\":{\"151\":1,\"165\":1}}],[\"相关阅读\",{\"1\":{\"142\":1,\"148\":1,\"202\":1,\"216\":1,\"226\":1,\"234\":1}}],[\"相关行去掉或注释不用它\",{\"1\":{\"110\":1}}],[\"于\",{\"1\":{\"151\":1,\"239\":1,\"247\":1}}],[\"于是\",{\"1\":{\"142\":1}}],[\"参数指定的\",{\"1\":{\"287\":1}}],[\"参数\",{\"1\":{\"287\":4}}],[\"参数中添加\",{\"1\":{\"184\":1}}],[\"参数的局部变量语法\",{\"0\":{\"156\":1},\"1\":{\"151\":1}}],[\"参数便可将\",{\"1\":{\"148\":1}}],[\"参考文献\",{\"0\":{\"215\":1}}],[\"参考\",{\"0\":{\"150\":1,\"159\":1,\"181\":1,\"292\":1}}],[\"备用存储装置上的堆分配\",{\"1\":{\"149\":1}}],[\"备份您现有的~\",{\"1\":{\"134\":1}}],[\"安全管理器可追溯到\",{\"1\":{\"223\":1}}],[\"安全\",{\"1\":{\"209\":1}}],[\"安全点\",{\"1\":{\"205\":1}}],[\"安全点的情况下实现线程回调\",{\"1\":{\"149\":1}}],[\"安全点的概念\",{\"1\":{\"149\":1}}],[\"安装成功之后\",{\"1\":{\"137\":1}}],[\"安装方法\",{\"1\":{\"133\":1}}],[\"安装并设置zsh\",{\"1\":{\"133\":1}}],[\"安装oh\",{\"0\":{\"131\":1},\"1\":{\"133\":1}}],[\"安装之后\",{\"0\":{\"53\":1}}],[\"安装node\",{\"1\":{\"48\":1}}],[\"安装git\",{\"1\":{\"47\":1}}],[\"安装完了有提示的\",{\"1\":{\"46\":1,\"48\":1,\"49\":1}}],[\"安装完毕后查看版本号\",{\"1\":{\"47\":1}}],[\"安装完毕后\",{\"1\":{\"44\":1}}],[\"安装完成后\",{\"1\":{\"40\":1,\"41\":1}}],[\"安装源\",{\"1\":{\"44\":1}}],[\"安装配置开发环境\",{\"0\":{\"42\":1}}],[\"安装的服务\",{\"1\":{\"41\":1}}],[\"安装某个软件\",{\"1\":{\"26\":1}}],[\"安装命令行软件的时候非常简单\",{\"1\":{\"15\":1}}],[\"安装软件\",{\"0\":{\"15\":1},\"1\":{\"44\":1}}],[\"安装软件这种小事\",{\"1\":{\"8\":1}}],[\"安装和卸载\",{\"0\":{\"14\":1}}],[\"安装xcode命令\",{\"1\":{\"13\":1}}],[\"安装command\",{\"1\":{\"13\":1}}],[\"安装\",{\"0\":{\"12\":1,\"44\":1},\"1\":{\"10\":1,\"14\":1,\"26\":1,\"46\":1,\"49\":1,\"61\":1,\"62\":1}}],[\"安装好后所在的目录\",{\"1\":{\"10\":1}}],[\"安装包的描述文件\",{\"1\":{\"10\":1}}],[\"局部管控\",{\"1\":{\"149\":1}}],[\"局部变量类型推断\",{\"0\":{\"142\":1},\"1\":{\"141\":2}}],[\"郑雨迪\",{\"1\":{\"148\":1}}],[\"深入剖析\",{\"1\":{\"292\":1}}],[\"深入浅出\",{\"1\":{\"148\":1}}],[\"深度集成\",{\"1\":{\"61\":1}}],[\"但为了行政上的方便\",{\"1\":{\"276\":1}}],[\"但可以有多个非抽象方法的接口\",{\"1\":{\"249\":1}}],[\"但它在第一次被复制后就不会改变了\",{\"1\":{\"286\":1}}],[\"但它不能被子类继承\",{\"1\":{\"248\":1}}],[\"但它会提示\",{\"1\":{\"201\":1}}],[\"但很多程序员对其新特性还是不够了解\",{\"1\":{\"247\":1}}],[\"但效果还是不太理想\",{\"1\":{\"235\":1}}],[\"但并不好用\",{\"1\":{\"214\":1,\"235\":1}}],[\"但关键内部\",{\"1\":{\"212\":1}}],[\"但不同的是map返回一个新的集合\",{\"1\":{\"264\":1}}],[\"但不是为了删除\",{\"1\":{\"218\":1}}],[\"但不是永久性的\",{\"1\":{\"179\":1}}],[\"但不属于默认基层\",{\"1\":{\"174\":1}}],[\"但在使用上应该把它转换成当地时间\",{\"1\":{\"276\":1}}],[\"但在\",{\"1\":{\"158\":1}}],[\"但通过向\",{\"1\":{\"148\":1}}],[\"但是可以这样\",{\"1\":{\"260\":1}}],[\"但是可转换的标量操作集有限且易受代码更改的影响\",{\"1\":{\"203\":1,\"225\":1}}],[\"但是该变量默认拥有\",{\"1\":{\"256\":1}}],[\"但是只要符合函数式接口的定义就是函数式接口\",{\"1\":{\"249\":1}}],[\"但是从一个公司角度来说\",{\"1\":{\"180\":1}}],[\"但是其实际价值依然需要在使用中去验证\",{\"1\":{\"179\":1}}],[\"但是\",{\"1\":{\"144\":1}}],[\"但是在使用时\",{\"1\":{\"29\":1}}],[\"但是在\",{\"1\":{\"8\":1}}],[\"及之前的版本\",{\"1\":{\"284\":1}}],[\"及更早版本中\",{\"1\":{\"227\":1}}],[\"及时返回未使用的已分配内存\",{\"1\":{\"166\":1}}],[\"及\",{\"1\":{\"148\":1}}],[\"语义上存在多种可能性\",{\"1\":{\"207\":1}}],[\"语言的跨平台特性\",{\"1\":{\"235\":1}}],[\"语言的不安全性\",{\"1\":{\"235\":1}}],[\"语言指针一样操作内存空间的能力的同时\",{\"1\":{\"235\":1}}],[\"语言拥有了类似\",{\"1\":{\"235\":1}}],[\"语言标准\",{\"1\":{\"204\":1}}],[\"语言特性\",{\"0\":{\"204\":1},\"1\":{\"204\":1}}],[\"语言编写的\",{\"1\":{\"148\":1}}],[\"语法格式\",{\"0\":{\"251\":1}}],[\"语法条件匹配成功后的执行块\",{\"1\":{\"168\":1,\"185\":1}}],[\"语法存在容易漏写\",{\"1\":{\"168\":1}}],[\"语句中可以使用\",{\"1\":{\"286\":1}}],[\"语句直接输出在\",{\"1\":{\"61\":1}}],[\"语句\",{\"1\":{\"49\":1,\"199\":1,\"257\":1}}],[\"支持独立的表达式比如普通的加法运算\",{\"1\":{\"280\":1}}],[\"支持变量的重复声明\",{\"1\":{\"280\":1}}],[\"支持将任务拆分为多个并发子任务\",{\"1\":{\"238\":1,\"245\":1}}],[\"支持了原生方法调用\",{\"1\":{\"214\":1,\"235\":1}}],[\"支持在局部方法和接口中使用\",{\"1\":{\"211\":1}}],[\"支持自动向量化\",{\"1\":{\"203\":1,\"225\":1}}],[\"支持文本块之后的\",{\"1\":{\"176\":2}}],[\"支持两个\",{\"1\":{\"176\":1}}],[\"支持的时间线\",{\"1\":{\"151\":1,\"216\":1}}],[\"支持\",{\"1\":{\"147\":1,\"216\":1}}],[\"支持shell\",{\"1\":{\"13\":1}}],[\"程序到了\",{\"1\":{\"227\":1}}],[\"程序能够调用本机库并处理本机数据\",{\"1\":{\"224\":1,\"233\":1,\"235\":1,\"243\":1}}],[\"程序可以通过该\",{\"1\":{\"224\":1,\"233\":1,\"235\":1,\"243\":1}}],[\"程序安全有效地访问\",{\"1\":{\"209\":1}}],[\"程序的启动时间\",{\"1\":{\"147\":1}}],[\"程序员难免要安装一些代码字体\",{\"1\":{\"32\":1}}],[\"同步块中使用值类型\",{\"1\":{\"207\":2}}],[\"同步\",{\"1\":{\"152\":1}}],[\"同时保留\",{\"1\":{\"220\":1}}],[\"同时保持线程处于阻塞状态\",{\"1\":{\"149\":1}}],[\"同时兼顾了安全性\",{\"1\":{\"214\":1}}],[\"同时使用了\",{\"1\":{\"187\":1}}],[\"同时在使用\",{\"1\":{\"177\":1}}],[\"同时还改进了其他\",{\"1\":{\"158\":1}}],[\"同时减少多个虚拟机在同一个物理或虚拟的机器上运行时的资源占用\",{\"1\":{\"147\":1}}],[\"同时会使用与年轻代回收和混合回收相同的并行工作线程数量\",{\"1\":{\"144\":1}}],[\"同样使用\",{\"1\":{\"9\":1}}],[\"改为java\",{\"1\":{\"152\":1}}],[\"改为并行的标记清除算法\",{\"1\":{\"144\":1}}],[\"改进方法句柄\",{\"1\":{\"291\":1}}],[\"改进应用的安全性能\",{\"1\":{\"291\":1}}],[\"改进了\",{\"1\":{\"230\":1}}],[\"改进和扩展\",{\"1\":{\"174\":1}}],[\"改进\",{\"1\":{\"141\":1,\"291\":1}}],[\"造成的应用停顿的影响\",{\"1\":{\"144\":1}}],[\"旨在避免进行\",{\"1\":{\"144\":1}}],[\"组成的流\",{\"1\":{\"259\":1}}],[\"组成垃圾收集器\",{\"1\":{\"143\":1}}],[\"组合关键字\",{\"1\":{\"142\":1}}],[\"❌编译不通过\",{\"1\":{\"142\":3}}],[\"循环中\",{\"1\":{\"142\":1}}],[\"提高扩展性\",{\"1\":{\"248\":1}}],[\"提高可靠性并增强可观察性\",{\"1\":{\"238\":1,\"245\":1}}],[\"提出了再次预览\",{\"1\":{\"213\":1,\"221\":1}}],[\"提出预览\",{\"1\":{\"213\":1,\"221\":1}}],[\"提出并集成到了\",{\"1\":{\"203\":1,\"224\":2,\"225\":1,\"231\":1,\"233\":2,\"235\":2,\"237\":1,\"246\":1}}],[\"提出并集成到\",{\"1\":{\"203\":2,\"225\":2,\"231\":2,\"237\":2,\"246\":2}}],[\"提出\",{\"1\":{\"203\":1,\"224\":1,\"225\":1,\"231\":1,\"233\":1,\"235\":1,\"237\":1,\"241\":1,\"243\":4,\"246\":1}}],[\"提供函数式编程\",{\"1\":{\"249\":1}}],[\"提供一些执行低级别\",{\"1\":{\"235\":1}}],[\"提供一种紧凑的语法来定义类中的不可变数据\",{\"1\":{\"211\":1}}],[\"提供非阻塞请求和响应语义\",{\"1\":{\"152\":1}}],[\"提供大力支持\",{\"1\":{\"151\":1}}],[\"提供了类似于\",{\"1\":{\"280\":1}}],[\"提供了静态类型\",{\"1\":{\"214\":1}}],[\"提供了静态方法copyof\",{\"1\":{\"145\":1}}],[\"提供了一个\",{\"1\":{\"203\":1,\"225\":1}}],[\"提供了\",{\"1\":{\"142\":1,\"185\":1}}],[\"提示颜色修改\",{\"0\":{\"113\":1}}],[\"也只有\",{\"1\":{\"275\":1}}],[\"也能支持简单的函数式编程\",{\"1\":{\"250\":1}}],[\"也能处理几个\",{\"1\":{\"155\":1}}],[\"也称\",{\"1\":{\"249\":1}}],[\"也称为种子\",{\"1\":{\"217\":1}}],[\"也可以创建一个空\",{\"1\":{\"287\":1}}],[\"也可以有自己的方法实现\",{\"1\":{\"248\":1}}],[\"也可以通过\",{\"1\":{\"208\":1}}],[\"也就是说不管在哪个时区\",{\"1\":{\"276\":1}}],[\"也就是说只要方法的参数是函数式接口都可以用\",{\"1\":{\"253\":1}}],[\"也就是说\",{\"1\":{\"238\":1,\"245\":1}}],[\"也增加了\",{\"1\":{\"235\":1}}],[\"也很少用于保护服务器端代码\",{\"1\":{\"223\":1}}],[\"也紧跟着增加了类型匹配自动转换功能\",{\"1\":{\"219\":1,\"242\":1}}],[\"也提供了支持\",{\"1\":{\"214\":1}}],[\"也提供了方便我们安装字体的\",{\"1\":{\"32\":1}}],[\"也不建议在\",{\"1\":{\"207\":1}}],[\"也够用\",{\"1\":{\"190\":1}}],[\"也采用标记\",{\"1\":{\"155\":1}}],[\"也会有相应的提示\",{\"1\":{\"145\":1}}],[\"也算是众望所归了\",{\"1\":{\"142\":1}}],[\"由jep\",{\"1\":{\"241\":1,\"244\":1}}],[\"由\",{\"1\":{\"213\":1,\"221\":1,\"224\":1,\"233\":1,\"235\":1,\"241\":1,\"243\":4,\"290\":1}}],[\"由于它的方法参数都是函数式接口类型\",{\"1\":{\"257\":1}}],[\"由于\",{\"1\":{\"214\":1}}],[\"由于文本块是一项预览功能\",{\"1\":{\"176\":1}}],[\"由于太多\",{\"1\":{\"142\":1}}],[\"由线程本身或者\",{\"1\":{\"149\":1}}],[\"由开发者\",{\"1\":{\"9\":1}}],[\"实例\",{\"1\":{\"291\":1}}],[\"实例方法调用\",{\"1\":{\"255\":1}}],[\"实在解决不了再考虑老的\",{\"1\":{\"277\":1}}],[\"实际上只用东八时区的标准时即北京时间为准\",{\"1\":{\"276\":1}}],[\"实际结果恰恰相反\",{\"1\":{\"261\":1}}],[\"实战\",{\"0\":{\"252\":1,\"260\":1}}],[\"实操\",{\"1\":{\"207\":1,\"215\":1}}],[\"实现来让\",{\"1\":{\"291\":1}}],[\"实现类也不必重写此方法\",{\"1\":{\"248\":1}}],[\"实现它的类也必须跟着改\",{\"1\":{\"248\":1}}],[\"实现强大的\",{\"1\":{\"241\":1}}],[\"实现起来过于复杂\",{\"1\":{\"235\":1}}],[\"实现了一些\",{\"1\":{\"201\":1,\"291\":1}}],[\"实现\",{\"1\":{\"158\":1,\"165\":1,\"172\":1,\"195\":1}}],[\"实现的轻量级线程\",{\"1\":{\"236\":1,\"238\":1,\"244\":1,\"245\":1}}],[\"实现的数字签名算法\",{\"1\":{\"195\":1}}],[\"实现的\",{\"1\":{\"148\":1}}],[\"实现的组件分散在代码库的各个部分\",{\"1\":{\"143\":1}}],[\"实验性的基于\",{\"0\":{\"148\":1},\"1\":{\"141\":1}}],[\"实体类转\",{\"1\":{\"61\":1}}],[\"实体类\",{\"1\":{\"61\":1}}],[\"扩展加入了应用类的\",{\"1\":{\"147\":1}}],[\"扩展\",{\"0\":{\"147\":1},\"1\":{\"141\":1}}],[\"精选了一部分\",{\"1\":{\"141\":1,\"151\":1,\"279\":1}}],[\"概览\",{\"1\":{\"141\":1,\"151\":1,\"279\":1}}],[\"线程消耗等问题\",{\"1\":{\"261\":1}}],[\"线程栈处理从安全点转移到一个并发阶段\",{\"1\":{\"205\":1}}],[\"线程来执行\",{\"1\":{\"149\":1}}],[\"线程\",{\"1\":{\"149\":1}}],[\"线程管控等一批新特性\",{\"1\":{\"141\":1}}],[\"线程调试\",{\"0\":{\"122\":1}}],[\"性能上都要优于现有的\",{\"1\":{\"290\":1}}],[\"性能提升\",{\"1\":{\"141\":1}}],[\"性能测试之类的监控器\",{\"1\":{\"61\":1}}],[\"月发布的\",{\"1\":{\"239\":1}}],[\"月份\",{\"1\":{\"216\":1}}],[\"月份发布的\",{\"1\":{\"151\":2}}],[\"月\",{\"1\":{\"141\":1,\"151\":2,\"202\":1,\"216\":1,\"226\":1,\"234\":1,\"239\":1,\"273\":2,\"276\":1,\"279\":1}}],[\"年半才发布的新版本\",{\"1\":{\"279\":1}}],[\"年\",{\"1\":{\"141\":1,\"151\":4,\"202\":1,\"216\":2,\"226\":1,\"239\":2,\"247\":1,\"273\":2,\"276\":1,\"279\":1}}],[\"前进后退\",{\"1\":{\"140\":1}}],[\"清屏\",{\"1\":{\"140\":1}}],[\"清除当前行\",{\"1\":{\"140\":1}}],[\"清理旧版本\",{\"1\":{\"26\":1}}],[\"清理软件的旧版\",{\"0\":{\"23\":1}}],[\"垂直分屏\",{\"1\":{\"140\":1}}],[\"水平分屏\",{\"1\":{\"140\":1}}],[\"切换屏幕\",{\"1\":{\"140\":1}}],[\"切换全屏\",{\"1\":{\"140\":1}}],[\"切换标签\",{\"1\":{\"140\":1}}],[\"切换国内的镜像源\",{\"0\":{\"34\":1}}],[\"左右方向键\",{\"1\":{\"140\":1}}],[\"新生代\",{\"1\":{\"282\":1}}],[\"新\",{\"1\":{\"248\":1}}],[\"新老实现的反射性能基准测试结果\",{\"1\":{\"230\":1}}],[\"新的\",{\"1\":{\"216\":1,\"287\":1}}],[\"新的垃圾回收器\",{\"1\":{\"158\":1}}],[\"新语法特性\",{\"1\":{\"207\":1,\"215\":1}}],[\"新加入了一个安全性和性能都更强的基于\",{\"1\":{\"195\":1}}],[\"新引入了下面这些方法\",{\"1\":{\"193\":1}}],[\"新版的\",{\"1\":{\"169\":1}}],[\"新一代垃圾回收器\",{\"1\":{\"155\":1}}],[\"新增加的重载方法\",{\"1\":{\"287\":1}}],[\"新增的一个实用工具\",{\"1\":{\"280\":1}}],[\"新增default和static修饰的方法\",{\"1\":{\"248\":1}}],[\"新增了几个新的方法\",{\"1\":{\"291\":1}}],[\"新增了\",{\"1\":{\"190\":1,\"257\":1,\"291\":2}}],[\"新增了对复杂的数字进行格式化的支持\",{\"1\":{\"164\":1}}],[\"新增了isempty\",{\"1\":{\"154\":1}}],[\"新增了orelsethrow\",{\"1\":{\"146\":1}}],[\"新增配置\",{\"1\":{\"73\":1}}],[\"新特性\",{\"1\":{\"292\":1}}],[\"新特性比较麻烦\",{\"1\":{\"278\":1}}],[\"新特性有\",{\"1\":{\"278\":1}}],[\"新特性实战\",{\"0\":{\"247\":1}}],[\"新特性一一解析\",{\"1\":{\"215\":1}}],[\"新特性中介绍过\",{\"1\":{\"189\":1}}],[\"新特性概述\",{\"1\":{\"181\":1}}],[\"新特性概览\",{\"0\":{\"141\":1,\"151\":1,\"160\":1,\"182\":1,\"202\":1,\"216\":1,\"226\":1,\"234\":1,\"239\":1,\"279\":1},\"1\":{\"203\":1,\"213\":1,\"221\":1,\"224\":1,\"225\":1,\"233\":1,\"237\":1,\"243\":1}}],[\"新特性之局部变量类型推断\",{\"1\":{\"142\":1}}],[\"新建标签\",{\"1\":{\"140\":1}}],[\"更合适\",{\"1\":{\"280\":1}}],[\"更多功能还得自己去挖掘\",{\"1\":{\"277\":1}}],[\"更多的使用方法还是要看\",{\"1\":{\"260\":1}}],[\"更多相关内容请看官网关于\",{\"1\":{\"247\":1}}],[\"更强大的封装\",{\"1\":{\"216\":1}}],[\"更有效率\",{\"1\":{\"280\":1}}],[\"更有效\",{\"1\":{\"214\":1}}],[\"更加严格的引用检查和密封类的继承关系\",{\"1\":{\"213\":1,\"221\":1}}],[\"更改为\",{\"1\":{\"208\":1}}],[\"更改为如下\",{\"1\":{\"137\":1,\"138\":1}}],[\"更快的定位和解决问题\",{\"1\":{\"184\":1}}],[\"更大的吞吐量\",{\"1\":{\"144\":1}}],[\"更新内容\",{\"1\":{\"210\":1,\"211\":1}}],[\"更新类型\",{\"1\":{\"210\":1,\"211\":1}}],[\"更新\",{\"0\":{\"28\":1}}],[\"更新指定包\",{\"1\":{\"26\":1}}],[\"更新homebrew\",{\"1\":{\"26\":1}}],[\"更新一个已经安装的包\",{\"0\":{\"20\":1}}],[\"更新brew\",{\"1\":{\"14\":1}}],[\"找到plugins=\",{\"1\":{\"137\":1,\"138\":1}}],[\"执行结果\",{\"1\":{\"261\":2}}],[\"执行\",{\"1\":{\"261\":9}}],[\"执行下面指令自动安装\",{\"1\":{\"137\":1}}],[\"执行如下命令\",{\"1\":{\"35\":1,\"36\":1}}],[\"它就是\",{\"1\":{\"286\":1}}],[\"它就是为\",{\"1\":{\"263\":1}}],[\"它允许开发人员为基于模块的\",{\"1\":{\"281\":1}}],[\"它可以看成是\",{\"1\":{\"276\":1}}],[\"它可以在线程内和线程间共享不可变的数据\",{\"1\":{\"240\":1}}],[\"它记录的毫秒数都一样\",{\"1\":{\"276\":1}}],[\"它会将这个返回的optional展平\",{\"1\":{\"264\":1}}],[\"它会将这个值包装在一个新的optional中\",{\"1\":{\"264\":1}}],[\"它的源数据可以是\",{\"1\":{\"257\":1}}],[\"它只是内容搬运工\",{\"1\":{\"257\":1}}],[\"它只保留实际用到的代码\",{\"1\":{\"253\":1}}],[\"它和之前的流大同小异\",{\"1\":{\"257\":1}}],[\"它是推动\",{\"1\":{\"250\":1}}],[\"它较\",{\"1\":{\"247\":1}}],[\"它一直不是保护客户端\",{\"1\":{\"223\":1}}],[\"它十分的小\",{\"1\":{\"214\":1}}],[\"它还提供了外来函数支持\",{\"1\":{\"214\":1}}],[\"它还允许在打包时指定启动时参数\",{\"1\":{\"208\":1}}],[\"它们都有def\",{\"1\":{\"248\":1}}],[\"它们在很大程度上类似于\",{\"1\":{\"214\":1}}],[\"它们将被释放并返回到页面缓存\",{\"1\":{\"171\":1}}],[\"它扩展了继承的通道机制以支持\",{\"1\":{\"214\":1}}],[\"它支持原生打包格式\",{\"1\":{\"208\":1}}],[\"它要求更新各种平台编译器的最低可接受版本\",{\"1\":{\"204\":1}}],[\"它并不会完全取代\",{\"1\":{\"195\":1}}],[\"它类似于\",{\"1\":{\"176\":1}}],[\"它使用\",{\"1\":{\"172\":1}}],[\"它将删除自己\",{\"1\":{\"135\":1}}],[\"它应该使用oh\",{\"1\":{\"134\":1}}],[\"它找不到\",{\"1\":{\"107\":1}}],[\"创建出只包含所依赖的\",{\"1\":{\"281\":1}}],[\"创建的集合为不可变集合\",{\"1\":{\"145\":1,\"283\":1}}],[\"创建一个新的zsh配置文件\",{\"1\":{\"134\":1}}],[\"创建部署脚本deploy\",{\"0\":{\"3\":1}}],[\"输出进程的信息\",{\"1\":{\"288\":1}}],[\"输出进程的\",{\"1\":{\"288\":1}}],[\"输出\",{\"1\":{\"132\":2,\"162\":1,\"164\":1,\"188\":1,\"195\":1}}],[\"输入\",{\"1\":{\"61\":1}}],[\"输入下面的指令\",{\"1\":{\"44\":1}}],[\"输入命令\",{\"1\":{\"29\":1}}],[\"输入你想要的关键词\",{\"1\":{\"17\":1}}],[\"则表示该\",{\"1\":{\"207\":1}}],[\"则进一步明确了\",{\"1\":{\"207\":1}}],[\"则执行步骤二的内容\",{\"1\":{\"132\":1}}],[\"则说明配置已生效\",{\"1\":{\"45\":1}}],[\"键\",{\"1\":{\"128\":1,\"129\":1}}],[\"按执行顺序应该是先打印\",{\"1\":{\"261\":1}}],[\"按最近最少使用\",{\"1\":{\"171\":1}}],[\"按command\",{\"1\":{\"129\":1}}],[\"按\",{\"1\":{\"128\":1}}],[\"按常理我们会百度一下\",{\"1\":{\"61\":1}}],[\"目的是为了通过结构化并发\",{\"1\":{\"238\":1,\"245\":1}}],[\"目录下\",{\"1\":{\"127\":1}}],[\"目前处于孵化器阶段\",{\"1\":{\"238\":1,\"245\":1}}],[\"目前\",{\"1\":{\"62\":1,\"155\":1,\"212\":1}}],[\"地址和端口号寻址的\",{\"1\":{\"214\":1}}],[\"地址\",{\"1\":{\"127\":1}}],[\"界面也不够友好\",{\"1\":{\"127\":1}}],[\"手动制造抛出异常\",{\"0\":{\"119\":1}}],[\"字符串存储结构优化\",{\"1\":{\"279\":1}}],[\"字符串转日期格式\",{\"0\":{\"272\":1}}],[\"字符串从堆外复制到堆上\",{\"1\":{\"235\":1}}],[\"字段断点\",{\"0\":{\"116\":1}}],[\"字体和插件以及其他非开源软件\",{\"1\":{\"26\":2}}],[\"而在\",{\"1\":{\"287\":1}}],[\"而我却没有更早的应用\",{\"1\":{\"278\":1}}],[\"而之前统统对应\",{\"1\":{\"275\":1}}],[\"而java\",{\"1\":{\"272\":1}}],[\"而使用flatmap时\",{\"1\":{\"264\":1}}],[\"而生的\",{\"1\":{\"263\":1}}],[\"而是等调用count\",{\"1\":{\"261\":1}}],[\"而是等返回一个非\",{\"1\":{\"261\":1}}],[\"而是需要处理成一个常规类型\",{\"1\":{\"261\":1}}],[\"而是要与\",{\"1\":{\"241\":1}}],[\"而是将它们集成到\",{\"1\":{\"214\":1}}],[\"而无需求助于方法参数\",{\"1\":{\"240\":1}}],[\"而无需任何中间的\",{\"1\":{\"214\":1}}],[\"而\",{\"1\":{\"177\":1,\"207\":1,\"248\":1,\"270\":1}}],[\"而且从代码整洁性层面来看\",{\"1\":{\"168\":1}}],[\"而不再需要编辑器\",{\"1\":{\"280\":1}}],[\"而不是\",{\"1\":{\"236\":1,\"244\":1}}],[\"而不是只能启用或停止所有线程\",{\"1\":{\"149\":1}}],[\"而不会像\",{\"1\":{\"224\":1,\"233\":1,\"235\":1,\"243\":1}}],[\"而不需要打断点\",{\"1\":{\"115\":1}}],[\"而用\",{\"1\":{\"61\":1}}],[\"只要加上一个模块描述文件\",{\"1\":{\"281\":1}}],[\"只要种子确定了\",{\"1\":{\"217\":1}}],[\"只列出比较常用的新特性给大家做详细讲解\",{\"1\":{\"247\":1}}],[\"只是进行了一些错误修复和性能增强\",{\"1\":{\"246\":1}}],[\"只是还没有完成赋值\",{\"1\":{\"115\":1}}],[\"只有\",{\"1\":{\"234\":1,\"239\":1}}],[\"只限于静态文件\",{\"1\":{\"228\":1}}],[\"只允许\",{\"1\":{\"199\":1}}],[\"只能操作一次\",{\"1\":{\"262\":1}}],[\"只能用interface调用\",{\"1\":{\"248\":1}}],[\"只能用于局部变量上\",{\"1\":{\"156\":1}}],[\"只能在运行时生成类并通过反射间接使用它们\",{\"1\":{\"197\":1}}],[\"只会跳出当前\",{\"1\":{\"177\":1}}],[\"只支持\",{\"1\":{\"155\":1}}],[\"只需从命令行运行uninstall\",{\"1\":{\"135\":1}}],[\"只需要声明属性\",{\"1\":{\"187\":1}}],[\"只需要打开这款插件\",{\"1\":{\"61\":1}}],[\"只需要执行如下命令\",{\"1\":{\"32\":1}}],[\"只需要执行\",{\"1\":{\"15\":1}}],[\"步骤繁琐\",{\"1\":{\"235\":1}}],[\"步骤二\",{\"0\":{\"133\":1}}],[\"步骤一\",{\"0\":{\"132\":1}}],[\"步出\",{\"1\":{\"115\":1}}],[\"步入\",{\"1\":{\"115\":1}}],[\"步过\",{\"1\":{\"115\":1}}],[\"跳转到光标所在代码执行的行\",{\"1\":{\"115\":1}}],[\"跳出当前方法\",{\"1\":{\"56\":1}}],[\"基础\",{\"0\":{\"115\":1}}],[\"调用静态函数\",{\"1\":{\"255\":1}}],[\"调用外部函数\",{\"1\":{\"235\":1}}],[\"调试\",{\"0\":{\"114\":1}}],[\"调优节省本地内存空间\",{\"1\":{\"75\":1}}],[\"邮箱随意填写\",{\"1\":{\"112\":1}}],[\"法允许我们创建一个单元素的\",{\"1\":{\"287\":1}}],[\"法二\",{\"0\":{\"110\":1}}],[\"法一\",{\"0\":{\"109\":1}}],[\"叫同事将c\",{\"1\":{\"109\":1}}],[\"66\",{\"1\":{\"287\":3}}],[\"618+08\",{\"1\":{\"276\":1}}],[\"619\",{\"1\":{\"107\":2}}],[\"6\",{\"1\":{\"168\":1,\"216\":1,\"235\":1,\"263\":1}}],[\"6961\",{\"1\":{\"158\":1}}],[\"6066\",{\"1\":{\"158\":1}}],[\"64\",{\"1\":{\"13\":1,\"44\":1,\"45\":1,\"46\":1,\"107\":1}}],[\"94\",{\"1\":{\"281\":1}}],[\"9>>2\",{\"1\":{\"261\":1}}],[\"99\",{\"1\":{\"165\":1,\"184\":1}}],[\"9\",{\"0\":{\"279\":1},\"1\":{\"107\":1,\"148\":1,\"151\":4,\"152\":1,\"165\":1,\"168\":1,\"207\":1,\"212\":1,\"216\":2,\"218\":1,\"222\":1,\"226\":1,\"234\":1,\"239\":1,\"279\":3,\"280\":1,\"281\":4,\"282\":1,\"284\":1,\"285\":1,\"286\":2,\"287\":4,\"288\":1,\"289\":4,\"291\":2,\"292\":5}}],[\"再打印\",{\"1\":{\"261\":1}}],[\"再次启动时直接读取此启动文本并加载\",{\"1\":{\"147\":1}}],[\"再次从\",{\"1\":{\"49\":1}}],[\"再双击查看错误信息如下\",{\"1\":{\"107\":1}}],[\"问题\",{\"0\":{\"107\":1},\"1\":{\"124\":1,\"263\":2}}],[\"双击没反应\",{\"0\":{\"106\":1}}],[\"双击即可打开\",{\"1\":{\"61\":1}}],[\"以分配返回的数组\",{\"1\":{\"259\":1}}],[\"以促进跨维护边界的段共享\",{\"1\":{\"243\":1}}],[\"以进行删除\",{\"0\":{\"218\":1}}],[\"以允许\",{\"1\":{\"209\":1}}],[\"以允许应用类放置在共享存档中\",{\"1\":{\"147\":1}}],[\"以编程方式调用\",{\"1\":{\"208\":1}}],[\"以下介绍摘自\",{\"1\":{\"207\":1}}],[\"以来最大的变化\",{\"1\":{\"250\":1}}],[\"以来最重要的长期支持\",{\"1\":{\"216\":1}}],[\"以来\",{\"1\":{\"206\":1}}],[\"以便\",{\"1\":{\"232\":1}}],[\"以便与旧版\",{\"1\":{\"223\":1}}],[\"以便开发人员可以继续使用外部构建的编译器版本进行\",{\"1\":{\"222\":1}}],[\"以便他们及其用户都可以无缝升级到将来的\",{\"1\":{\"212\":1}}],[\"以便更容易地使用将文件内容视为文件系统的文件系统提供程序\",{\"1\":{\"173\":1}}],[\"以便在空闲时自动将\",{\"1\":{\"166\":1}}],[\"以便在运行时能够进行内存映射以减少\",{\"1\":{\"147\":1}}],[\"以及分区执行或调整大小可能需要的任何其他数组\",{\"1\":{\"259\":1}}],[\"以及更高版本\",{\"1\":{\"214\":1}}],[\"以及应该使用更好的替代方案等\",{\"1\":{\"207\":1}}],[\"以及会话散列和扩展主密钥扩展\",{\"1\":{\"158\":1}}],[\"以及\",{\"1\":{\"151\":1,\"187\":1,\"287\":1}}],[\"以带来更好的性能提升\",{\"1\":{\"144\":1}}],[\"以免中途扩容影响启动速度\",{\"1\":{\"105\":1}}],[\"以后支持的首个长期版本\",{\"1\":{\"151\":1}}],[\"以后\",{\"1\":{\"15\":1}}],[\"日期计算\",{\"0\":{\"273\":1}}],[\"日期\",{\"1\":{\"270\":1}}],[\"日期+时间\",{\"1\":{\"270\":1}}],[\"日期格式修改\",{\"1\":{\"100\":1}}],[\"日发布\",{\"1\":{\"239\":1}}],[\"日正式发布以供生产使用\",{\"1\":{\"234\":1}}],[\"日正式发布\",{\"1\":{\"151\":1,\"202\":1,\"216\":1,\"226\":1}}],[\"日\",{\"1\":{\"141\":1,\"273\":2,\"276\":1,\"279\":1}}],[\"日志可转换成\",{\"1\":{\"61\":1}}],[\"上下载自己需要的\",{\"1\":{\"279\":1}}],[\"上例中optional\",{\"1\":{\"264\":1}}],[\"上面都是串行\",{\"1\":{\"261\":1}}],[\"上面的\",{\"1\":{\"253\":1}}],[\"上就会出现乱码\",{\"1\":{\"227\":1}}],[\"上运行正常的一段打印文字到控制台的\",{\"1\":{\"227\":1}}],[\"上主要\",{\"1\":{\"214\":1}}],[\"上托管\",{\"1\":{\"214\":1}}],[\"上的\",{\"1\":{\"208\":3}}],[\"上都可以使用的一种指令\",{\"1\":{\"203\":1,\"225\":1}}],[\"上一条命令\",{\"1\":{\"140\":1}}],[\"上\",{\"0\":{\"99\":1}}],[\"属性\",{\"0\":{\"99\":1},\"1\":{\"256\":1}}],[\"属性上\",{\"1\":{\"61\":1}}],[\"光标放在需要注释的\",{\"0\":{\"99\":1}}],[\"光标放在需要注释的类\",{\"1\":{\"61\":1}}],[\"此流任意元素是否有与提供的predicate匹配\",{\"1\":{\"259\":1}}],[\"此流的所有元素是否与提供的predicate匹配\",{\"1\":{\"259\":1}}],[\"此外\",{\"1\":{\"214\":1}}],[\"此提案将\",{\"1\":{\"214\":1}}],[\"此特性为\",{\"1\":{\"214\":1}}],[\"此特性会默认强封装\",{\"1\":{\"212\":1}}],[\"此缓存中的\",{\"1\":{\"171\":1}}],[\"此功能允许使用\",{\"1\":{\"157\":1}}],[\"此时方法已执行完毕\",{\"1\":{\"115\":1}}],[\"此处的end$标识光标最后的位置\",{\"1\":{\"97\":1}}],[\"此idea版本好像会自动识别git配置\",{\"1\":{\"64\":1}}],[\"脚本第1个参数\",{\"1\":{\"96\":1}}],[\"回收算法相比\",{\"1\":{\"155\":1}}],[\"回退断点\",{\"1\":{\"115\":1}}],[\"回车\",{\"1\":{\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1}}],[\"回显\",{\"1\":{\"45\":1,\"46\":1,\"47\":1}}],[\"回显版本号的相关信息\",{\"1\":{\"44\":1}}],[\"|\",{\"1\":{\"91\":2,\"207\":1,\"215\":1,\"226\":1}}],[\"编写可移植的高性能向量算法\",{\"1\":{\"203\":1,\"225\":1}}],[\"编辑\",{\"1\":{\"138\":1}}],[\"编辑vim\",{\"1\":{\"137\":1}}],[\"编码设置\",{\"0\":{\"83\":1,\"84\":1}}],[\"编译时就报错\",{\"1\":{\"256\":1}}],[\"编译的时候就会报错\",{\"1\":{\"248\":1}}],[\"编译期将会产生\",{\"1\":{\"207\":1}}],[\"编译器接口\",{\"1\":{\"222\":1}}],[\"编译器将检索源文件\",{\"1\":{\"199\":1}}],[\"编译器根据分配给变量的值推断出类型\",{\"1\":{\"156\":1}}],[\"编译器的基础\",{\"1\":{\"148\":1}}],[\"编译器负责推断出类型\",{\"1\":{\"142\":1}}],[\"编译器\",{\"0\":{\"148\":1,\"222\":1},\"1\":{\"141\":1,\"148\":2,\"216\":1,\"222\":2,\"280\":1}}],[\"编译\",{\"1\":{\"58\":1,\"222\":1}}],[\"需求要获取\",{\"1\":{\"263\":1}}],[\"需save\",{\"1\":{\"82\":1}}],[\"需eclipse\",{\"1\":{\"80\":1}}],[\"需要借助\",{\"1\":{\"276\":1}}],[\"需要梯子\",{\"1\":{\"208\":1}}],[\"需要有\",{\"1\":{\"177\":1}}],[\"需要升级到\",{\"1\":{\"165\":1}}],[\"需要翻墙才能打开\",{\"1\":{\"128\":1}}],[\"需要在javac编译和java运行时增加参数\",{\"1\":{\"167\":1}}],[\"需要在\",{\"1\":{\"61\":1}}],[\"需要安装\",{\"1\":{\"61\":1}}],[\"需要一层一层进入或路径加上双引号进入\",{\"1\":{\"53\":1}}],[\"阿里巴巴java开发手册\",{\"0\":{\"81\":1}}],[\"阿里\",{\"0\":{\"80\":1}}],[\"阿里代码规范\",{\"1\":{\"61\":1}}],[\"阿里代码规约检测\",{\"1\":{\"61\":1}}],[\"都很简单\",{\"1\":{\"274\":1}}],[\"都是将一个函数应用于集合中的每个元素\",{\"1\":{\"264\":1}}],[\"都是有一些服务端软件在后台运行\",{\"1\":{\"25\":1}}],[\"都不应该破坏\",{\"1\":{\"209\":1}}],[\"都不配置使用ide默认配置\",{\"1\":{\"78\":1}}],[\"识别不到可尝试重启idea\",{\"1\":{\"72\":1}}],[\"即使\",{\"1\":{\"286\":1}}],[\"即不受\",{\"1\":{\"224\":1,\"233\":1,\"235\":1,\"243\":1}}],[\"即元空间\",{\"1\":{\"206\":1}}],[\"即能处理几百\",{\"1\":{\"155\":1}}],[\"即\",{\"1\":{\"155\":1,\"174\":1,\"224\":1,\"233\":1,\"235\":1,\"243\":1,\"249\":1}}],[\"即第一次输入用户密码后\",{\"1\":{\"65\":1}}],[\"即可自动生成命令\",{\"1\":{\"61\":1}}],[\"即可自动按照阿里巴巴编码风格格式化代码\",{\"1\":{\"61\":1}}],[\"即可切换为清华大学的镜像\",{\"1\":{\"36\":1}}],[\"即可切换为中科大的镜像\",{\"1\":{\"35\":1}}],[\"即可\",{\"1\":{\"4\":1}}],[\"^\",{\"1\":{\"64\":1}}],[\"根据提供的\",{\"1\":{\"259\":1}}],[\"根据开发计划\",{\"1\":{\"239\":1}}],[\"根据反馈\",{\"1\":{\"206\":1}}],[\"根据\",{\"1\":{\"62\":1,\"259\":1}}],[\"背景滴\",{\"1\":{\"62\":1}}],[\"五种代码编辑器\",{\"1\":{\"62\":1}}],[\"智能编码插件\",{\"1\":{\"62\":1}}],[\"智能编码提示\",{\"1\":{\"61\":1}}],[\"进程\",{\"0\":{\"288\":1}}],[\"进行的等效向量计算\",{\"1\":{\"231\":1}}],[\"进行管理\",{\"1\":{\"214\":1}}],[\"进行操作\",{\"1\":{\"209\":1}}],[\"进行替代\",{\"1\":{\"207\":1}}],[\"进行了第一次预览\",{\"1\":{\"241\":1}}],[\"进行了改进\",{\"1\":{\"235\":1}}],[\"进行了迁移\",{\"1\":{\"214\":1}}],[\"进行了进一步的简化\",{\"1\":{\"174\":1}}],[\"进行了标准化\",{\"1\":{\"152\":1}}],[\"进行参数声明\",{\"1\":{\"156\":1}}],[\"进度条变成萌新动画\",{\"1\":{\"62\":1}}],[\"进入与返回全屏模式\",{\"1\":{\"140\":1}}],[\"进入代码片段\",{\"1\":{\"61\":1}}],[\"进入生成的文件夹\",{\"1\":{\"3\":1}}],[\"仿真插件\",{\"1\":{\"62\":1}}],[\"打印结果\",{\"1\":{\"273\":1,\"276\":1}}],[\"打印结果是\",{\"1\":{\"273\":1}}],[\"打包工具\",{\"0\":{\"208\":1}}],[\"打字炫酷\",{\"1\":{\"62\":1}}],[\"打开特定的软件包才行\",{\"1\":{\"212\":1}}],[\"打开打开\",{\"1\":{\"128\":1}}],[\"打开\",{\"1\":{\"59\":1,\"62\":1,\"128\":1,\"129\":2}}],[\"打开最近用的文件\",{\"1\":{\"58\":1}}],[\"驼峰式命名和下划线命名交替变化\",{\"1\":{\"61\":1}}],[\"部署项目\",{\"1\":{\"61\":1}}],[\"远程调用返回对象时\",{\"1\":{\"263\":1}}],[\"远程服务器登陆\",{\"1\":{\"61\":1}}],[\"远程还有多少文件没更新下来\",{\"1\":{\"61\":1}}],[\"菜单栏\",{\"1\":{\"61\":1}}],[\"辅助插件\",{\"1\":{\"61\":1}}],[\"辅助软件\",{\"0\":{\"39\":1}}],[\"排序并打印\",{\"1\":{\"260\":1}}],[\"排序等操作\",{\"1\":{\"145\":1,\"283\":1}}],[\"排序\",{\"1\":{\"61\":1,\"257\":1}}],[\"节省了空间\",{\"1\":{\"284\":1}}],[\"节省不少查阅资料的时间\",{\"1\":{\"61\":1}}],[\"节点的查看分析插件\",{\"1\":{\"61\":1}}],[\"坐标\",{\"1\":{\"61\":1}}],[\"右侧边栏会有个\",{\"1\":{\"61\":1}}],[\"右击\",{\"1\":{\"61\":1}}],[\"右击打开\",{\"1\":{\"61\":1}}],[\"里可以有静态方法\",{\"1\":{\"247\":1}}],[\"里面还有很多便捷的算法\",{\"1\":{\"274\":1}}],[\"里面有个属性\",{\"1\":{\"263\":1}}],[\"里面\",{\"1\":{\"61\":1}}],[\"里直接打开\",{\"1\":{\"61\":1}}],[\"能够提高新手的学习热情\",{\"1\":{\"280\":1}}],[\"能够得到堆分配的\",{\"1\":{\"158\":1}}],[\"能够使用适用于不同类型的存储机制的堆\",{\"1\":{\"149\":1}}],[\"能够很清晰的看到依赖调用时序\",{\"1\":{\"61\":1}}],[\"能进入任何方法\",{\"1\":{\"115\":1}}],[\"能在项目上提示你还有多少文件没提交\",{\"1\":{\"61\":1}}],[\"检测代码漏洞\",{\"1\":{\"61\":1}}],[\"检查\",{\"0\":{\"27\":1},\"1\":{\"263\":1}}],[\"检查brew是否安装成功\",{\"1\":{\"14\":1}}],[\"很多小伙伴认为\",{\"1\":{\"248\":1}}],[\"很多年前就已经被淘汰了\",{\"1\":{\"218\":1}}],[\"很多时候\",{\"1\":{\"16\":1}}],[\"很实用的一个插件\",{\"1\":{\"61\":1}}],[\"将字符串从堆上复制到堆外\",{\"1\":{\"235\":1}}],[\"将是继\",{\"1\":{\"216\":1}}],[\"将大大简化绑定原生库的原本复杂且容易出错的过程\",{\"1\":{\"214\":1}}],[\"将来只有使用\",{\"1\":{\"212\":1}}],[\"将会在编译期和运行期产生警告\",{\"1\":{\"207\":1}}],[\"将使开发人员能够轻松地用\",{\"1\":{\"203\":1,\"225\":1}}],[\"将向操作系统返回被标识为长时间未使用的页面\",{\"1\":{\"171\":1}}],[\"将允许在不运行全局\",{\"1\":{\"149\":1}}],[\"将主题下载到本地\",{\"1\":{\"128\":1}}],[\"将c\",{\"1\":{\"110\":1}}],[\"将\",{\"1\":{\"61\":1,\"172\":1,\"205\":1,\"214\":2,\"235\":1}}],[\"随便找个\",{\"1\":{\"61\":1}}],[\"操作完就关闭了\",{\"1\":{\"262\":1}}],[\"操作和访问结构化的外部内存\",{\"1\":{\"235\":1}}],[\"操作\",{\"1\":{\"61\":1,\"69\":1,\"72\":1}}],[\"操作时展示快捷键\",{\"1\":{\"61\":1}}],[\"当地时区时间\",{\"1\":{\"276\":1}}],[\"当前时区时间\",{\"1\":{\"276\":3}}],[\"当前只支持\",{\"1\":{\"155\":1}}],[\"当年最后一天\",{\"1\":{\"274\":2}}],[\"当使用map\",{\"1\":{\"264\":1}}],[\"当然只列出部分功能上的区别\",{\"1\":{\"277\":1}}],[\"当然也只有一个方法须要重写\",{\"1\":{\"253\":1}}],[\"当然还有许多的插件和字体提供用户使用\",{\"1\":{\"127\":1}}],[\"当执行上述程序示例时\",{\"1\":{\"207\":1}}],[\"当时\",{\"1\":{\"194\":1}}],[\"当多个\",{\"1\":{\"147\":1}}],[\"当不确定接口由哪一个具体的类实现时\",{\"1\":{\"118\":1}}],[\"当出现相关异常时会自动断点停在异常代码处\",{\"1\":{\"117\":1}}],[\"当我们用\",{\"1\":{\"61\":1}}],[\"当你完成了\",{\"1\":{\"15\":1}}],[\"预览由\",{\"1\":{\"224\":1,\"233\":1,\"235\":1}}],[\"预览\",{\"0\":{\"213\":1,\"219\":1,\"235\":1,\"236\":1},\"1\":{\"216\":1,\"234\":3}}],[\"预览特性\",{\"1\":{\"185\":1}}],[\"预览新特性\",{\"0\":{\"167\":1,\"175\":1,\"186\":1,\"198\":1}}],[\"预检查\",{\"1\":{\"61\":1}}],[\"预先编译好的包\",{\"1\":{\"10\":1}}],[\"工具的地址\",{\"1\":{\"61\":1}}],[\"工具\",{\"1\":{\"61\":1,\"190\":1,\"281\":1}}],[\"kiwi\",{\"1\":{\"264\":3}}],[\"k\",{\"1\":{\"254\":1}}],[\"k5dtax5bssnvjtpf4r4+ymwxvjrvb2mxvxmchibki6gofbgag==\",{\"1\":{\"195\":1}}],[\"kp\",{\"1\":{\"195\":2}}],[\"kpg\",{\"1\":{\"195\":2}}],[\"kotlin\",{\"1\":{\"142\":1}}],[\"ksh\",{\"1\":{\"132\":1}}],[\"kdbx文件\",{\"1\":{\"125\":1}}],[\"k8s\",{\"1\":{\"61\":1}}],[\"kubernetes\",{\"1\":{\"61\":1}}],[\"keypair\",{\"1\":{\"195\":1}}],[\"keypairgenerator\",{\"1\":{\"195\":2}}],[\"key\",{\"1\":{\"61\":1,\"146\":3}}],[\"keymap\",{\"1\":{\"56\":1,\"58\":2}}],[\"kebab\",{\"1\":{\"61\":1}}],[\"keg\",{\"1\":{\"10\":2}}],[\"客户端\",{\"1\":{\"61\":2}}],[\"单个\",{\"1\":{\"209\":1}}],[\"单元测试测试生成工具\",{\"1\":{\"61\":1}}],[\"单次运行某个服务\",{\"1\":{\"25\":1}}],[\"高亮显示\",{\"0\":{\"137\":1},\"1\":{\"61\":1}}],[\"括号开始结尾\",{\"1\":{\"61\":1}}],[\"所有数之和\",{\"1\":{\"260\":1}}],[\"所有成员属性都是final\",{\"1\":{\"187\":1}}],[\"所以如果of\",{\"1\":{\"264\":1}}],[\"所以一般和\",{\"1\":{\"257\":1}}],[\"所以不适用\",{\"1\":{\"48\":1}}],[\"所生成的随机数就是完全确定的\",{\"1\":{\"217\":1}}],[\"所产生的\",{\"1\":{\"207\":1}}],[\"所设计的\",{\"1\":{\"197\":1}}],[\"所需\",{\"1\":{\"61\":1}}],[\"翻译插件\",{\"1\":{\"61\":1}}],[\"美化插件\",{\"1\":{\"61\":1}}],[\"请使用\",{\"1\":{\"172\":1}}],[\"请使用以下语句\",{\"1\":{\"49\":2}}],[\"请按任意键继续\",{\"1\":{\"107\":1}}],[\"请按\",{\"1\":{\"61\":4}}],[\"画思维导图\",{\"1\":{\"61\":1}}],[\"文档中的代码片段\",{\"0\":{\"229\":1},\"1\":{\"226\":1}}],[\"文档\",{\"1\":{\"202\":1,\"216\":1,\"226\":1,\"234\":1}}],[\"文本块是正式的功能特性了\",{\"1\":{\"196\":1}}],[\"文本块依然是预览特性\",{\"1\":{\"188\":1}}],[\"文本块\",{\"0\":{\"176\":1,\"188\":1,\"196\":1}}],[\"文章\",{\"1\":{\"61\":1}}],[\"文件比较\",{\"0\":{\"163\":1}}],[\"文件中\",{\"1\":{\"157\":1}}],[\"文件中的所有元素生成\",{\"1\":{\"61\":1}}],[\"文件了\",{\"1\":{\"157\":1}}],[\"文件就可以通过一个支持\",{\"1\":{\"62\":1}}],[\"文件上传\",{\"1\":{\"61\":1}}],[\"文件\",{\"1\":{\"61\":2,\"281\":1}}],[\"文件右键\",{\"1\":{\"61\":1}}],[\"文件的反编译工具\",{\"1\":{\"61\":1}}],[\"文件之间来回切换\",{\"1\":{\"61\":2}}],[\"文件重命名\",{\"1\":{\"56\":1}}],[\"书写\",{\"1\":{\"61\":1}}],[\"抓出内存漏失\",{\"1\":{\"61\":1}}],[\"直到不满足条件为止结束获取\",{\"1\":{\"287\":1}}],[\"直到\",{\"1\":{\"179\":1}}],[\"直觉式的\",{\"1\":{\"61\":1}}],[\"直接把一个类的继承和修改渠道给堵死了\",{\"1\":{\"199\":1}}],[\"直接在\",{\"1\":{\"185\":1}}],[\"直接在控制台输入\",{\"1\":{\"4\":1}}],[\"直接显示所有进程\",{\"1\":{\"61\":1}}],[\"直接跳转到方法的实现类\",{\"1\":{\"58\":1}}],[\"直接回车\",{\"1\":{\"49\":1}}],[\"直接配置淘宝镜像\",{\"1\":{\"48\":1}}],[\"直接复制就行\",{\"1\":{\"46\":1,\"48\":1,\"49\":1}}],[\"包装数据类型的对象时\",{\"1\":{\"263\":1}}],[\"包的套接字通道和服务器套接字通道\",{\"1\":{\"214\":1}}],[\"包的名字或者\",{\"1\":{\"61\":1}}],[\"包外\",{\"1\":{\"190\":1}}],[\"包下的锁而不是同步方法\",{\"1\":{\"172\":1}}],[\"包括静态域\",{\"1\":{\"290\":1}}],[\"包括筛选\",{\"1\":{\"257\":1}}],[\"包括对现有垃圾回收算法的改进\",{\"1\":{\"180\":1}}],[\"包括换行符\",{\"1\":{\"176\":1}}],[\"包括\",{\"1\":{\"158\":1}}],[\"包名\",{\"1\":{\"124\":1}}],[\"包所有的版本\",{\"1\":{\"61\":1}}],[\"包\",{\"1\":{\"61\":1,\"257\":1}}],[\"拖动滚动条或是鼠标中键滚屏时卡顿问题\",{\"1\":{\"61\":1}}],[\"附带\",{\"1\":{\"61\":1}}],[\"对数组的统计\",{\"1\":{\"260\":1}}],[\"对每个元素进行操作返回新流\",{\"1\":{\"260\":1}}],[\"对文件内容不做任何crud\",{\"1\":{\"257\":1}}],[\"对基于值的类发出警告\",{\"0\":{\"207\":1}}],[\"对象所表示时刻所经过的毫秒数\",{\"1\":{\"276\":1}}],[\"对象实质上存的是\",{\"1\":{\"276\":1}}],[\"对象\",{\"1\":{\"263\":1,\"264\":1,\"290\":1}}],[\"对象根本无法通过\",{\"1\":{\"207\":1}}],[\"对象信息\",{\"1\":{\"158\":1}}],[\"对象是否为空\",{\"1\":{\"154\":2}}],[\"对于复杂逻辑的验证\",{\"1\":{\"280\":1}}],[\"对于本地进程间通信\",{\"1\":{\"214\":1}}],[\"对于日常的应用开发者可能比较关注新的语法特性\",{\"1\":{\"180\":1}}],[\"对于\",{\"1\":{\"157\":1,\"219\":1,\"263\":1}}],[\"对于习惯了使用命令来完成一切的程序员来说\",{\"1\":{\"8\":1}}],[\"对该算法做了重大改进\",{\"1\":{\"155\":1}}],[\"对应自己安装的gradle版本不能太老\",{\"1\":{\"72\":1}}],[\"对\",{\"1\":{\"61\":1,\"152\":1,\"201\":1,\"291\":1}}],[\"对各个对称括号进行着色\",{\"1\":{\"61\":1}}],[\"彩虹颜色的括号\",{\"1\":{\"61\":1}}],[\"黑色主题下\",{\"1\":{\"61\":1}}],[\"类中新增了反应式流规范的核心接口\",{\"1\":{\"289\":1}}],[\"类中新增了\",{\"1\":{\"287\":1}}],[\"类中添加了以下三种新方法\",{\"1\":{\"173\":1}}],[\"类型的操作\",{\"1\":{\"277\":1}}],[\"类型推断允许使用关键字\",{\"1\":{\"156\":1}}],[\"类同时包含日期和时间\",{\"1\":{\"269\":1}}],[\"类的大部分痛点\",{\"1\":{\"269\":1}}],[\"类来防止\",{\"1\":{\"263\":1}}],[\"类单继承\",{\"1\":{\"248\":1}}],[\"类会使得程序出错的概率变大\",{\"1\":{\"235\":1}}],[\"类让\",{\"1\":{\"235\":1}}],[\"类编译为本机代码\",{\"1\":{\"222\":1}}],[\"类元数据\",{\"1\":{\"206\":1}}],[\"类一旦实例化就不能再修改\",{\"1\":{\"187\":1}}],[\"类新增加了\",{\"1\":{\"176\":1}}],[\"类基础之上\",{\"1\":{\"147\":1}}],[\"类名\",{\"1\":{\"124\":1}}],[\"类\",{\"0\":{\"99\":1},\"1\":{\"263\":1,\"272\":1,\"290\":1}}],[\"类注释模板配置\",{\"1\":{\"100\":1}}],[\"类注释\",{\"0\":{\"92\":1}}],[\"类似于使用\",{\"1\":{\"187\":1}}],[\"类似\",{\"1\":{\"61\":1,\"155\":1}}],[\"类上注解\",{\"1\":{\"61\":1}}],[\"热部署\",{\"1\":{\"61\":2}}],[\"解释器\",{\"1\":{\"280\":1}}],[\"解释器直接执行\",{\"1\":{\"157\":1}}],[\"解压后直接双击执行程序文件\",{\"1\":{\"127\":1}}],[\"解决了\",{\"1\":{\"269\":1}}],[\"解决后将添加的pause去掉即可\",{\"1\":{\"110\":1}}],[\"解决卡顿闪退\",{\"0\":{\"104\":1}}],[\"解决git提交代码每次输入帐号密码问题\",{\"0\":{\"65\":1}}],[\"解决\",{\"0\":{\"108\":1},\"1\":{\"61\":1,\"124\":1,\"176\":1,\"263\":1}}],[\"解决错误等\",{\"1\":{\"58\":1}}],[\"解析\",{\"1\":{\"61\":1}}],[\"代替\",{\"1\":{\"187\":1}}],[\"代表上一个命令执行后的退出状态\",{\"1\":{\"96\":1}}],[\"代表所有库下的所有表\",{\"1\":{\"49\":1}}],[\"代码的主要方法\",{\"1\":{\"223\":1}}],[\"代码使用的语言特性仅限于\",{\"1\":{\"204\":1}}],[\"代码中可以使用哪些特性的具体指导\",{\"1\":{\"204\":1}}],[\"代码示例\",{\"1\":{\"163\":2,\"219\":2,\"242\":2}}],[\"代码会运行至光标行\",{\"1\":{\"115\":1}}],[\"代码模板\",{\"0\":{\"89\":1,\"90\":1}}],[\"代码自动编译\",{\"0\":{\"87\":1,\"88\":1}}],[\"代码规范\",{\"0\":{\"78\":1}}],[\"代码规范检查\",{\"1\":{\"61\":1}}],[\"代码复杂度检查\",{\"1\":{\"62\":1}}],[\"代码质量检测与优化\",{\"1\":{\"61\":1}}],[\"代码\",{\"1\":{\"61\":1}}],[\"代码生成器\",{\"1\":{\"62\":1}}],[\"代码生成\",{\"1\":{\"61\":1}}],[\"代码块\",{\"1\":{\"61\":1}}],[\"⇧+⌥+\",{\"1\":{\"61\":1}}],[\"命名风格转换插件\",{\"1\":{\"61\":1}}],[\"命令行工具\",{\"1\":{\"279\":1}}],[\"命令行搜索软件\",{\"1\":{\"17\":1}}],[\"命令启动一个简易的静态\",{\"1\":{\"228\":1}}],[\"命令是\",{\"1\":{\"208\":1}}],[\"命令添加\",{\"1\":{\"148\":1}}],[\"命令来进行管理\",{\"1\":{\"25\":1}}],[\"命令来清理系统中所有软件的历史版本\",{\"1\":{\"23\":1}}],[\"命令\",{\"1\":{\"19\":1,\"61\":1,\"133\":1}}],[\"或\",{\"1\":{\"61\":4,\"140\":1,\"199\":1,\"241\":1,\"248\":1,\"251\":1,\"272\":1}}],[\"或者integer\",{\"1\":{\"207\":1}}],[\"或者直接将它拖到\",{\"1\":{\"127\":1}}],[\"或者直接访问\",{\"1\":{\"18\":1}}],[\"或者可以使用\",{\"1\":{\"23\":1}}],[\"或者是使用\",{\"1\":{\"20\":1}}],[\"或者更新单个软件\",{\"1\":{\"20\":1}}],[\"或者说具体的名字是什么\",{\"1\":{\"16\":1}}],[\"或者以上\",{\"1\":{\"13\":1}}],[\"或者\",{\"1\":{\"13\":1,\"78\":1}}],[\"服务器\",{\"0\":{\"228\":1},\"1\":{\"226\":1,\"228\":1}}],[\"服务开发辅助工具集\",{\"1\":{\"61\":1}}],[\"服务名\",{\"1\":{\"25\":3}}],[\"一直是用\",{\"1\":{\"284\":1}}],[\"一直使用老的实现方式\",{\"1\":{\"278\":1}}],[\"一旦语句输入完成\",{\"1\":{\"280\":1}}],[\"一旦您打开一个新的终端窗口\",{\"1\":{\"134\":1}}],[\"一但掌握\",{\"1\":{\"278\":1}}],[\"一周后日期\",{\"1\":{\"273\":2}}],[\"一周后的日期\",{\"1\":{\"273\":2}}],[\"一连串调用\",{\"1\":{\"263\":1}}],[\"一律要求进行空指针判断\",{\"1\":{\"263\":1}}],[\"一种多线程编程方法\",{\"1\":{\"238\":1,\"245\":1}}],[\"一起发布的新命令行工具\",{\"1\":{\"281\":1}}],[\"一起移除\",{\"1\":{\"223\":1}}],[\"一起使用\",{\"1\":{\"157\":1}}],[\"一样\",{\"1\":{\"219\":1,\"242\":1}}],[\"一样的值类型\",{\"1\":{\"207\":1}}],[\"一般来说\",{\"1\":{\"217\":1}}],[\"一般用于进入自定义方法内\",{\"1\":{\"115\":1}}],[\"一苇以航\",{\"1\":{\"188\":3}}],[\"一方面可以看出\",{\"1\":{\"179\":1}}],[\"一定能程度上增强了使用\",{\"1\":{\"157\":1}}],[\"一行一行地往下走\",{\"1\":{\"115\":1}}],[\"一键修复\",{\"1\":{\"61\":1}}],[\"一款可以做项目全局代码统计信息的小插件\",{\"1\":{\"61\":1}}],[\"一个stream只能操作一次\",{\"1\":{\"260\":1}}],[\"一个容器需要不超过\",{\"1\":{\"214\":1}}],[\"一个完全消极的\",{\"1\":{\"158\":1}}],[\"一个\",{\"1\":{\"61\":1,\"187\":1,\"248\":1,\"262\":1}}],[\"一个代码编辑区缩略图插件\",{\"1\":{\"61\":1}}],[\"一个是\",{\"1\":{\"38\":1}}],[\"一套\",{\"1\":{\"61\":1}}],[\"验证简单的小问题时\",{\"1\":{\"280\":1}}],[\"验证\",{\"1\":{\"61\":1}}],[\"如何创建一个\",{\"0\":{\"264\":1}}],[\"如内联\",{\"1\":{\"235\":1}}],[\"如直接访问系统内存资源\",{\"1\":{\"235\":1}}],[\"如本机内存\",{\"1\":{\"209\":1}}],[\"如以下所示\",{\"1\":{\"162\":1}}],[\"如下\",{\"1\":{\"152\":1}}],[\"如按下\",{\"1\":{\"61\":1}}],[\"如果\",{\"1\":{\"287\":2}}],[\"如果直接print会自动转成当前时区的时间\",{\"1\":{\"276\":1}}],[\"如果用calendar是不得烦死\",{\"1\":{\"274\":1}}],[\"如果要获取纯粹的总天数应该用下面的方法\",{\"1\":{\"273\":1}}],[\"如果要使用旧实现\",{\"1\":{\"172\":1}}],[\"如果value\",{\"1\":{\"266\":3}}],[\"如果value不为null执行consumer\",{\"1\":{\"265\":1}}],[\"如果value是null就返回empty\",{\"1\":{\"264\":1}}],[\"如果映射函数返回的是一个optional\",{\"1\":{\"264\":1}}],[\"如果映射函数返回的是一个普通值\",{\"1\":{\"264\":1}}],[\"如果map返回的是数组\",{\"1\":{\"264\":1}}],[\"如果为\",{\"1\":{\"263\":1}}],[\"如果修改\",{\"1\":{\"256\":1}}],[\"如果有一个类既实现了\",{\"1\":{\"248\":1}}],[\"如果我们想要在\",{\"1\":{\"229\":1}}],[\"如果写上面这种代码\",{\"1\":{\"211\":1}}],[\"如果需要把\",{\"1\":{\"264\":1}}],[\"如果需要访问外部内存\",{\"1\":{\"209\":1}}],[\"如果需要idea新开的所有项目配置都生效\",{\"1\":{\"69\":1,\"72\":1}}],[\"如果希望在实际的开发过程中保证其原子性\",{\"1\":{\"207\":1}}],[\"如果继续在\",{\"1\":{\"207\":1}}],[\"如果继续使用\",{\"1\":{\"207\":1}}],[\"如果forremoval=true时\",{\"1\":{\"207\":1}}],[\"如果允许扩展的子类和封闭类在同一个源代码文件里\",{\"1\":{\"199\":1}}],[\"如果是empty返回empty\",{\"1\":{\"267\":1}}],[\"如果是则返回\",{\"1\":{\"192\":1}}],[\"如果是发布到自定义域名\",{\"1\":{\"3\":1}}],[\"如果文件相同则返回\",{\"1\":{\"163\":1}}],[\"如果没有添加\",{\"1\":{\"137\":1,\"138\":1}}],[\"如果您想卸载oh\",{\"1\":{\"135\":1}}],[\"如果步骤一不存在\",{\"1\":{\"132\":1}}],[\"如果当前行有方法\",{\"1\":{\"115\":1}}],[\"如果这一行上有方法不会进入方法\",{\"1\":{\"115\":1}}],[\"如果快捷键冲突需自行修改\",{\"1\":{\"61\":1,\"99\":1}}],[\"如果能正确输出java安装目录\",{\"1\":{\"45\":1}}],[\"如果出现空白\",{\"1\":{\"45\":2}}],[\"如果你不手动更改字符集的话\",{\"1\":{\"227\":1}}],[\"如果你不想\",{\"1\":{\"49\":1}}],[\"如果你需要迁移环境\",{\"1\":{\"37\":1}}],[\"如果你的\",{\"1\":{\"27\":1}}],[\"如果你希望对这些软件进行管理\",{\"1\":{\"25\":1}}],[\"如果你想要查看某个特定软件的信息\",{\"1\":{\"22\":1}}],[\"如果你想要查看你都安装了哪些包\",{\"1\":{\"19\":1}}],[\"如果你想要卸载某个包\",{\"1\":{\"21\":1}}],[\"如果不添加这个脚本\",{\"1\":{\"4\":1}}],[\"如果发布到\",{\"1\":{\"3\":2}}],[\"省去你敲打命令的时间\",{\"1\":{\"61\":1}}],[\"省去\",{\"1\":{\"61\":1}}],[\"√\",{\"1\":{\"61\":19}}],[\"插件下载目录\",{\"1\":{\"136\":1}}],[\"插件\",{\"0\":{\"136\":1},\"1\":{\"61\":2,\"187\":1}}],[\"插件介绍\",{\"1\":{\"61\":1,\"62\":1}}],[\"插件名称\",{\"1\":{\"61\":1,\"62\":1}}],[\"↓↓↓↓↓↓\",{\"1\":{\"61\":2}}],[\"搜索命令历史\",{\"1\":{\"140\":1}}],[\"搜索滴\",{\"1\":{\"62\":1}}],[\"搜索\",{\"1\":{\"59\":2}}],[\"搜索软件\",{\"0\":{\"16\":1},\"1\":{\"44\":1}}],[\"可重用的包\",{\"1\":{\"281\":1}}],[\"可重启\",{\"1\":{\"61\":1}}],[\"可多线程执行\",{\"1\":{\"258\":1,\"261\":1}}],[\"可对\",{\"1\":{\"241\":1}}],[\"可维护性和可观察性\",{\"1\":{\"238\":1,\"245\":1}}],[\"可用性\",{\"1\":{\"290\":1}}],[\"可用\",{\"1\":{\"209\":1}}],[\"可能在未来版本中被删除\",{\"1\":{\"207\":1}}],[\"可能在未来存在兼容性错误\",{\"1\":{\"207\":1}}],[\"可中止的混合收集集合\",{\"1\":{\"166\":1}}],[\"可伸缩低延迟垃圾收集器\",{\"0\":{\"155\":1},\"1\":{\"151\":1}}],[\"可接口方法处进行断点\",{\"1\":{\"118\":1}}],[\"可是对\",{\"1\":{\"61\":1}}],[\"可视化\",{\"1\":{\"61\":2}}],[\"可使用临时邮箱进行在线激活使用\",{\"1\":{\"61\":1}}],[\"可根据\",{\"1\":{\"61\":1}}],[\"可查看相关异常分类\",{\"1\":{\"58\":1}}],[\"可查看此接口实现类\",{\"1\":{\"58\":1}}],[\"可区分大小写哦\",{\"1\":{\"58\":1}}],[\"可以包含一个非空元素\",{\"1\":{\"287\":1}}],[\"可以参考下面这几篇文章\",{\"1\":{\"281\":1}}],[\"可以让我们的代码可重用性更好\",{\"1\":{\"281\":1}}],[\"可以将map\",{\"1\":{\"264\":1}}],[\"可以想象成是二进制流\",{\"1\":{\"261\":1}}],[\"可以想象成是\",{\"1\":{\"257\":1}}],[\"可以被子类继承\",{\"1\":{\"248\":1}}],[\"可以用其他修饰符\",{\"1\":{\"248\":1}}],[\"可以用this调用\",{\"1\":{\"248\":1}}],[\"可以用于管理\",{\"1\":{\"41\":1}}],[\"可以嵌套记录模式和类型模式\",{\"1\":{\"241\":1}}],[\"可以有效减少编写\",{\"1\":{\"236\":1,\"244\":1}}],[\"可以通过\",{\"1\":{\"229\":1}}],[\"可以通过复制我们包含的模板来创建一个新的zsh配置文件\",{\"1\":{\"134\":1}}],[\"可以看得到\",{\"1\":{\"216\":1}}],[\"可以看这个视频\",{\"1\":{\"208\":1}}],[\"可以自由的选择如何释放内存\",{\"1\":{\"209\":1}}],[\"可以放心使用\",{\"1\":{\"179\":1}}],[\"可以中止可选部分的回收以达到停顿时间目标\",{\"1\":{\"166\":1}}],[\"可以进入方法内部\",{\"1\":{\"115\":1}}],[\"可以使idea启动时初始堆内存就直接到最大\",{\"1\":{\"105\":1}}],[\"可以使用类\",{\"1\":{\"290\":1}}],[\"可以使用平台之外的第三方解析器\",{\"1\":{\"232\":1}}],[\"可以使用\",{\"1\":{\"25\":1}}],[\"可以快速定位代码\",{\"1\":{\"61\":1}}],[\"可以在空指针异常中获取更为详细的调用信息\",{\"1\":{\"184\":1}}],[\"可以在未来版本中删除\",{\"1\":{\"176\":1}}],[\"可以在判断是否属于具体的类型同时完成转换\",{\"1\":{\"169\":1}}],[\"可以在\",{\"1\":{\"61\":1}}],[\"可以按照实际情况格式化你的提交信息\",{\"1\":{\"61\":1}}],[\"可以执行\",{\"1\":{\"28\":1}}],[\"可以类比于\",{\"1\":{\"10\":1}}],[\"勾选右边的\",{\"1\":{\"58\":1}}],[\"+parallel\",{\"1\":{\"282\":1}}],[\"+num\",{\"1\":{\"261\":1}}],[\"+statistics\",{\"1\":{\"260\":4}}],[\"+showcodedetailsinexceptionmessages\",{\"1\":{\"184\":1}}],[\"+=\",{\"1\":{\"231\":1}}],[\"+heapdumponoutofmemoryerror\",{\"1\":{\"75\":1}}],[\"+usebiasedlocking\",{\"1\":{\"201\":1}}],[\"+usezgc\",{\"1\":{\"194\":1}}],[\"+usejvmcicompiler\",{\"1\":{\"148\":1}}],[\"+useg1gc\",{\"1\":{\"75\":1}}],[\"+unlockexperimentalvmoptions\",{\"1\":{\"148\":1}}],[\"+u\",{\"1\":{\"61\":1}}],[\"+\",{\"0\":{\"82\":1},\"1\":{\"58\":2,\"61\":12,\"91\":6,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"115\":6,\"128\":1,\"129\":1,\"140\":24,\"146\":1,\"162\":1,\"176\":5,\"177\":1,\"229\":1,\"231\":2,\"260\":1,\"261\":1,\"264\":2,\"273\":18,\"274\":3,\"276\":11,\"280\":1,\"287\":2}}],[\"等其他日志记录框架\",{\"1\":{\"291\":1}}],[\"等方法\",{\"1\":{\"287\":1}}],[\"等方法滴\",{\"1\":{\"61\":1}}],[\"等工厂方法来创建不可变集合\",{\"1\":{\"283\":1}}],[\"等待线程完成\",{\"1\":{\"238\":1,\"245\":1}}],[\"等资源\",{\"1\":{\"61\":1}}],[\"等压缩格式\",{\"1\":{\"61\":1}}],[\"等\",{\"1\":{\"58\":1,\"207\":1,\"257\":1,\"289\":1,\"291\":1}}],[\"等软件\",{\"1\":{\"25\":1,\"31\":1}}],[\"方\",{\"1\":{\"287\":1}}],[\"方便在此基础上引入新的\",{\"1\":{\"155\":1}}],[\"方便查看结果\",{\"1\":{\"118\":1}}],[\"方便查看\",{\"1\":{\"61\":1}}],[\"方面\",{\"1\":{\"151\":1}}],[\"方向键\",{\"1\":{\"140\":1}}],[\"方式二\",{\"1\":{\"137\":1}}],[\"方式一\",{\"1\":{\"137\":1}}],[\"方式\",{\"1\":{\"133\":1}}],[\"方式安装\",{\"1\":{\"10\":1}}],[\"方法接受一个\",{\"1\":{\"287\":1}}],[\"方法接受两个参数\",{\"1\":{\"287\":1}}],[\"方法输出数字\",{\"1\":{\"287\":1}}],[\"方法2\",{\"1\":{\"273\":1}}],[\"方法1\",{\"1\":{\"273\":1}}],[\"方法和of方法唯一区别就是当\",{\"1\":{\"264\":1}}],[\"方法参数都是函数式接口类型\",{\"1\":{\"262\":1}}],[\"方法后才执行\",{\"1\":{\"261\":1}}],[\"方法的新重载方法提供了一个\",{\"1\":{\"287\":1}}],[\"方法的效果和\",{\"1\":{\"287\":1}}],[\"方法的重载方法\",{\"1\":{\"287\":1}}],[\"方法的引用\",{\"0\":{\"255\":1}}],[\"方法的代码\",{\"1\":{\"62\":1}}],[\"方法句柄从\",{\"1\":{\"291\":1}}],[\"方法句柄\",{\"1\":{\"235\":1}}],[\"方法调用不能从许多常见的\",{\"1\":{\"235\":1}}],[\"方法调用时会自动进入具体的实现类中\",{\"1\":{\"118\":1}}],[\"方法以及tostring\",{\"1\":{\"187\":1}}],[\"方法用于比较两个文件\",{\"1\":{\"163\":1}}],[\"方法可以从\",{\"1\":{\"287\":1}}],[\"方法可以用来转变指定字符串\",{\"1\":{\"162\":1}}],[\"方法可以实现字符串缩进\",{\"1\":{\"162\":1}}],[\"方法来判断指定的\",{\"1\":{\"154\":1}}],[\"方法来在没有值时抛出指定的异常\",{\"1\":{\"146\":1}}],[\"方法断点\",{\"0\":{\"118\":1}}],[\"方法注释模板配置\",{\"1\":{\"100\":1}}],[\"方法头注释\",{\"0\":{\"91\":1}}],[\"方法\",{\"0\":{\"99\":1},\"1\":{\"58\":1,\"61\":3,\"176\":1,\"187\":2,\"261\":1,\"272\":1}}],[\"导入插件\",{\"1\":{\"128\":1}}],[\"导入成功后\",{\"1\":{\"128\":1}}],[\"导入导出配置\",{\"0\":{\"102\":1,\"103\":1}}],[\"导包\",{\"1\":{\"58\":1}}],[\"导出完成后\",{\"1\":{\"37\":1}}],[\"快速创建不可变集合\",{\"0\":{\"283\":1}}],[\"快速测试\",{\"1\":{\"62\":1}}],[\"快速执行\",{\"1\":{\"61\":1}}],[\"快速生成两个对象转换过程中所需要大量的\",{\"1\":{\"61\":1}}],[\"快速生成变量\",{\"1\":{\"58\":1}}],[\"快捷键提示工具\",{\"1\":{\"61\":1}}],[\"快捷键苹果为\",{\"1\":{\"61\":1}}],[\"快捷键\",{\"0\":{\"140\":1},\"1\":{\"58\":1,\"59\":1,\"61\":2}}],[\"快捷键设置\",{\"0\":{\"55\":1,\"56\":1}}],[\"放大字体\",{\"1\":{\"56\":1}}],[\"选定元素上的\",{\"1\":{\"61\":1}}],[\"选中错误信息右击一键使用\",{\"1\":{\"62\":1}}],[\"选中异常按\",{\"1\":{\"58\":1}}],[\"选中快速打开文件所在位置\",{\"1\":{\"56\":1}}],[\"选择了在\",{\"1\":{\"214\":1}}],[\"选择一张自己喜欢的背景图\",{\"1\":{\"129\":1}}],[\"选择一项\",{\"1\":{\"61\":1}}],[\"选择刚才clone下的文件夹里面的dracula\",{\"1\":{\"128\":1}}],[\"选择你要诊断的类或者方法上面\",{\"1\":{\"61\":1}}],[\"选择小写字母可转换成大写字母即切换选择字母的大小写\",{\"1\":{\"58\":1}}],[\"选择类名按\",{\"1\":{\"58\":1}}],[\"选择其中你要使用的那个\",{\"1\":{\"18\":1}}],[\"复制算法\",{\"1\":{\"155\":1}}],[\"复制json\",{\"1\":{\"61\":1}}],[\"复制拷贝本行内容\",{\"1\":{\"58\":1}}],[\"复制选中的行到下一行并另起一行\",{\"1\":{\"56\":1}}],[\"复制到新的电脑中\",{\"1\":{\"37\":1}}],[\"申请开源开发许可证\",{\"1\":{\"54\":1}}],[\"因为拿到\",{\"1\":{\"261\":1}}],[\"因为\",{\"1\":{\"235\":1}}],[\"因为该编译器自推出以来很少使用\",{\"1\":{\"222\":1}}],[\"因为在并发环境下\",{\"1\":{\"207\":1}}],[\"因为路径有空格原因直接进不去\",{\"1\":{\"53\":1}}],[\"因此存在潜在的风险\",{\"1\":{\"227\":1}}],[\"因此其生成的随机数序列并不是真正随机的\",{\"1\":{\"217\":1}}],[\"因此其他\",{\"1\":{\"214\":1}}],[\"因此备受关注\",{\"1\":{\"194\":1}}],[\"因此这些新方法被标记为弃用\",{\"1\":{\"176\":1}}],[\"因此\",{\"1\":{\"20\":1,\"207\":1,\"286\":1}}],[\"注解表示变量最多被修改一次\",{\"1\":{\"284\":1}}],[\"注解只是在编译时起到强制规范定义的作用\",{\"1\":{\"249\":1}}],[\"注解\",{\"1\":{\"207\":1,\"249\":2}}],[\"注解时的语义\",{\"1\":{\"207\":1}}],[\"注解的\",{\"1\":{\"207\":2}}],[\"注解进行了一次升级\",{\"1\":{\"207\":1}}],[\"注意\",{\"1\":{\"58\":1,\"61\":1,\"208\":1,\"260\":1,\"263\":1}}],[\"注\",{\"1\":{\"53\":1,\"78\":1,\"112\":1}}],[\"本身并不支持国际化\",{\"1\":{\"276\":1}}],[\"本身为我们提供了一个非常好用的环境迁移的工具\",{\"1\":{\"37\":1}}],[\"本文列出\",{\"1\":{\"260\":1}}],[\"本文不能把所有的新特性都给大家一一分享\",{\"1\":{\"247\":1}}],[\"本文来自cowbi的投稿~\",{\"1\":{\"247\":1}}],[\"本质也是一种重复\",{\"1\":{\"168\":1}}],[\"本地时区时间\",{\"1\":{\"276\":1}}],[\"本地安装方法\",{\"1\":{\"133\":1}}],[\"本地开发进行压力测试\",{\"1\":{\"61\":1}}],[\"本系列基于ideaiu\",{\"1\":{\"52\":1}}],[\"说明\",{\"1\":{\"261\":1}}],[\"说明书\",{\"1\":{\"50\":1}}],[\"说明还没有生效\",{\"1\":{\"45\":1}}],[\"说明还没有配置\",{\"1\":{\"45\":1}}],[\"官网原文\",{\"1\":{\"179\":1}}],[\"官网\",{\"1\":{\"50\":1}}],[\"官方给出了新老实现的反射性能基准测试结果\",{\"1\":{\"230\":1}}],[\"官方给出的\",{\"1\":{\"151\":1,\"216\":1}}],[\"官方出的学习辅助插件\",{\"1\":{\"62\":1}}],[\"官方的定义是\",{\"1\":{\"281\":1}}],[\"官方的新特性说明文档地址\",{\"1\":{\"279\":1}}],[\"官方的\",{\"1\":{\"38\":1}}],[\"官方在安装的时候会有一些\",{\"1\":{\"29\":1}}],[\"官方库中的包大多都是通过\",{\"1\":{\"10\":1}}],[\"您将看到用户ip\",{\"1\":{\"49\":1}}],[\"要编译和运行包含预览功能的代码\",{\"1\":{\"179\":1}}],[\"要将zsh设置为默认shell\",{\"1\":{\"133\":1}}],[\"要提前备份原\",{\"1\":{\"61\":1}}],[\"要为当前\",{\"1\":{\"61\":1}}],[\"要为活动元素生成\",{\"1\":{\"61\":1}}],[\"要删除数据库中的两个用户\",{\"1\":{\"49\":1}}],[\"要查看mysql服务器中的数据库\",{\"1\":{\"49\":1}}],[\"要求\",{\"0\":{\"13\":1}}],[\"刷新权限\",{\"1\":{\"49\":1}}],[\"删除对命名记录模式的支持\",{\"1\":{\"241\":1}}],[\"删除远程方法调用\",{\"1\":{\"220\":1}}],[\"删除远程方法调用激活机制\",{\"0\":{\"220\":1},\"1\":{\"216\":1}}],[\"删除实验性的提前\",{\"1\":{\"222\":1}}],[\"删除实验性的\",{\"0\":{\"222\":1},\"1\":{\"216\":1}}],[\"删除已弃用的\",{\"1\":{\"216\":1}}],[\"删除\",{\"1\":{\"145\":1,\"283\":1}}],[\"删除本地c\",{\"1\":{\"125\":1}}],[\"删除当前类所有元素上的\",{\"1\":{\"61\":1}}],[\"删除当前\",{\"1\":{\"61\":1}}],[\"删除当前行ctrl+alt+向下箭头\",{\"1\":{\"56\":1}}],[\"删除行\",{\"1\":{\"58\":1}}],[\"删除用户\",{\"1\":{\"49\":1}}],[\"删除用户的权限\",{\"1\":{\"49\":1}}],[\"删除权限\",{\"1\":{\"49\":1}}],[\"赋权限后记得刷新\",{\"1\":{\"49\":1}}],[\"赋予所有的权限\",{\"1\":{\"49\":1}}],[\"权限\",{\"1\":{\"49\":1}}],[\"样列\",{\"1\":{\"49\":1}}],[\"用的日志记录器实现\",{\"1\":{\"291\":1}}],[\"用java\",{\"1\":{\"269\":1}}],[\"用到的是多线程\",{\"1\":{\"261\":1}}],[\"用lambda\",{\"1\":{\"253\":1}}],[\"用来管理\",{\"1\":{\"291\":1}}],[\"用来表达向量计算\",{\"1\":{\"231\":1,\"246\":1}}],[\"用来生成接近于绝对随机数序列的数字序列\",{\"1\":{\"217\":1}}],[\"用于更加细粒度的控制内存排序\",{\"1\":{\"290\":1}}],[\"用于映射每个元素到对应的结果\",{\"1\":{\"259\":1}}],[\"用于获取指定数量的流\",{\"1\":{\"259\":1}}],[\"用于主要名称和地址的解析\",{\"1\":{\"232\":1}}],[\"用于编写在\",{\"1\":{\"218\":1}}],[\"用于去除文本块中每一行开头和结尾的空格\",{\"1\":{\"176\":1}}],[\"用于将流中的元素收集为不可变的集合\",{\"1\":{\"145\":1}}],[\"用起来虽然有些不太方便\",{\"1\":{\"127\":1}}],[\"用法\",{\"1\":{\"61\":1}}],[\"用法不熟\",{\"1\":{\"61\":1}}],[\"用这个\",{\"1\":{\"61\":4}}],[\"用户\",{\"1\":{\"49\":4,\"53\":1,\"125\":1}}],[\"用户名\",{\"1\":{\"49\":1,\"53\":1}}],[\"用久了\",{\"1\":{\"23\":1}}],[\"=3\",{\"1\":{\"256\":1}}],[\"==true\",{\"1\":{\"267\":1}}],[\"==\",{\"1\":{\"91\":1,\"192\":1,\"219\":1,\"264\":2,\"266\":1}}],[\"======================================\",{\"1\":{\"61\":2}}],[\"=>\",{\"1\":{\"75\":1,\"96\":3}}],[\"=null\",{\"1\":{\"58\":1}}],[\"=\",{\"1\":{\"49\":1,\"91\":1,\"142\":9,\"145\":1,\"152\":3,\"154\":1,\"156\":2,\"162\":4,\"163\":6,\"164\":2,\"169\":3,\"176\":6,\"184\":1,\"185\":1,\"187\":2,\"188\":3,\"195\":6,\"207\":3,\"210\":1,\"217\":2,\"219\":6,\"231\":9,\"235\":11,\"238\":3,\"240\":1,\"242\":6,\"245\":3,\"248\":1,\"253\":3,\"254\":2,\"255\":5,\"256\":1,\"260\":12,\"261\":3,\"263\":5,\"264\":14,\"265\":2,\"266\":6,\"271\":12,\"272\":6,\"273\":17,\"274\":14,\"276\":8,\"286\":4,\"287\":6,\"288\":1}}],[\"为空则返回\",{\"1\":{\"287\":1}}],[\"为空则调用\",{\"1\":{\"287\":1}}],[\"为我们带来了哪些好处呢\",{\"1\":{\"280\":1}}],[\"为伪随机数生成器\",{\"1\":{\"217\":1}}],[\"为最终用户提供自然的安装体验\",{\"1\":{\"208\":1}}],[\"为了解决接口的修改与现有的实现不兼容的问题\",{\"1\":{\"248\":2}}],[\"为了不脱离队伍太远\",{\"1\":{\"247\":1}}],[\"为了推动\",{\"1\":{\"223\":1}}],[\"为了达到用户提供的停顿时间目标\",{\"1\":{\"166\":1}}],[\"为了最大限度地减少\",{\"1\":{\"144\":1}}],[\"为默认的垃圾收集器\",{\"1\":{\"166\":1}}],[\"为一些文件类型提供官方没有的图标\",{\"1\":{\"61\":1}}],[\"为\",{\"1\":{\"49\":1,\"101\":1,\"147\":1,\"185\":1,\"264\":1,\"280\":1}}],[\"为复数\",{\"1\":{\"10\":1}}],[\"设计有缺陷\",{\"1\":{\"269\":1}}],[\"设想如果应用环境没有大的变化\",{\"1\":{\"147\":1}}],[\"设置东京时区\",{\"1\":{\"276\":1}}],[\"设置为默认字符集\",{\"1\":{\"227\":1}}],[\"设置如下\",{\"1\":{\"139\":1}}],[\"设置vim可配色\",{\"0\":{\"139\":1}}],[\"设置iterm2背景图片\",{\"0\":{\"129\":1}}],[\"设置用于那些地方\",{\"1\":{\"91\":1}}],[\"设置jvm启动默认参数\",{\"1\":{\"75\":1}}],[\"设置常用提交窗口\",{\"1\":{\"64\":1}}],[\"设置\",{\"1\":{\"62\":1,\"101\":1}}],[\"设置删除行快捷键\",{\"1\":{\"59\":1}}],[\"设置复制行快捷键\",{\"1\":{\"59\":1}}],[\"设置root用户初始密码\",{\"1\":{\"49\":1}}],[\"设备永久了\",{\"1\":{\"37\":1}}],[\"735\",{\"1\":{\"276\":1}}],[\"735+09\",{\"1\":{\"276\":1}}],[\"735+08\",{\"1\":{\"276\":1}}],[\"7627\",{\"1\":{\"158\":1}}],[\"7eaa3411\",{\"1\":{\"150\":1}}],[\"7\",{\"1\":{\"49\":4,\"168\":1,\"234\":1,\"239\":1,\"247\":2,\"273\":1,\"282\":1}}],[\"遇到过\",{\"1\":{\"48\":1}}],[\"zoneid\",{\"1\":{\"276\":7}}],[\"zoneddatetime\",{\"1\":{\"276\":10}}],[\"zoo\",{\"1\":{\"263\":7,\"268\":1}}],[\"zoolytic\",{\"1\":{\"61\":1}}],[\"zookeeper\",{\"1\":{\"61\":3}}],[\"zpagecache\",{\"1\":{\"171\":1}}],[\"zpages\",{\"1\":{\"171\":3}}],[\"zgc\",{\"0\":{\"155\":1,\"171\":1,\"194\":1,\"205\":1},\"1\":{\"151\":1,\"155\":7,\"165\":1,\"171\":3,\"190\":2,\"194\":4,\"205\":2}}],[\"z\",{\"1\":{\"61\":2,\"155\":1}}],[\"zip\",{\"1\":{\"61\":1,\"107\":1}}],[\"zhihu\",{\"1\":{\"236\":1,\"244\":1}}],[\"zhengqingya\",{\"1\":{\"72\":1,\"91\":1,\"92\":1,\"96\":1,\"97\":1}}],[\"zh\",{\"1\":{\"46\":1,\"61\":1}}],[\"zsh的配置加载zsh\",{\"1\":{\"134\":1}}],[\"zshrc文件\",{\"1\":{\"134\":1,\"137\":2,\"138\":1}}],[\"zshrc添加下面几行\",{\"1\":{\"45\":1}}],[\"zshrc\",{\"1\":{\"14\":2,\"45\":1,\"46\":1,\"48\":1,\"134\":4}}],[\"zsh\",{\"0\":{\"130\":1,\"131\":1,\"134\":1,\"135\":1},\"1\":{\"13\":1,\"14\":1,\"132\":2,\"133\":4,\"134\":2,\"135\":2,\"136\":1,\"137\":10,\"138\":4}}],[\"zsh或者bash\",{\"1\":{\"13\":1}}],[\"43\",{\"1\":{\"276\":3}}],[\"438\",{\"1\":{\"246\":1}}],[\"437\",{\"0\":{\"245\":1},\"1\":{\"239\":1}}],[\"436\",{\"0\":{\"244\":1},\"1\":{\"239\":1}}],[\"434\",{\"0\":{\"243\":1},\"1\":{\"239\":1,\"243\":1}}],[\"433\",{\"0\":{\"242\":1},\"1\":{\"239\":1}}],[\"432\",{\"0\":{\"241\":1,\"246\":1},\"1\":{\"239\":2,\"241\":1}}],[\"429\",{\"0\":{\"240\":1},\"1\":{\"239\":1,\"245\":1}}],[\"428\",{\"0\":{\"238\":1},\"1\":{\"234\":2}}],[\"427\",{\"1\":{\"234\":1}}],[\"425提出\",{\"1\":{\"244\":1}}],[\"425\",{\"0\":{\"236\":1},\"1\":{\"234\":2}}],[\"422\",{\"1\":{\"234\":1}}],[\"421\",{\"1\":{\"226\":1}}],[\"420\",{\"1\":{\"226\":1}}],[\"424\",{\"0\":{\"235\":1},\"1\":{\"224\":1,\"233\":1,\"234\":2,\"235\":1,\"243\":1}}],[\"426\",{\"0\":{\"237\":1},\"1\":{\"203\":1,\"225\":1,\"231\":1,\"234\":2,\"237\":1,\"246\":1}}],[\"405提出\",{\"1\":{\"241\":1}}],[\"405\",{\"1\":{\"234\":1}}],[\"408\",{\"0\":{\"228\":1},\"1\":{\"226\":2}}],[\"400\",{\"0\":{\"227\":1},\"1\":{\"226\":2}}],[\"409\",{\"0\":{\"221\":1},\"1\":{\"216\":2}}],[\"407\",{\"0\":{\"220\":1},\"1\":{\"216\":2}}],[\"406\",{\"0\":{\"219\":1},\"1\":{\"216\":2}}],[\"403\",{\"1\":{\"216\":1}}],[\"418\",{\"0\":{\"232\":1},\"1\":{\"226\":2}}],[\"416\",{\"0\":{\"230\":1},\"1\":{\"226\":2}}],[\"419\",{\"0\":{\"233\":1},\"1\":{\"224\":1,\"226\":2,\"233\":1,\"235\":1,\"243\":1}}],[\"413\",{\"0\":{\"229\":1},\"1\":{\"216\":1,\"226\":2}}],[\"415\",{\"1\":{\"216\":1}}],[\"412\",{\"0\":{\"224\":1},\"1\":{\"216\":2,\"224\":1,\"233\":1,\"235\":1,\"243\":1}}],[\"411\",{\"0\":{\"223\":1},\"1\":{\"216\":2}}],[\"410\",{\"0\":{\"222\":1},\"1\":{\"216\":2}}],[\"417\",{\"0\":{\"231\":1},\"1\":{\"203\":1,\"225\":1,\"226\":2,\"231\":1,\"237\":1,\"246\":1}}],[\"414\",{\"0\":{\"225\":1},\"1\":{\"203\":1,\"216\":2,\"225\":1,\"231\":1,\"237\":1,\"246\":1}}],[\"4d19\",{\"1\":{\"150\":1}}],[\"4\",{\"1\":{\"46\":1,\"150\":1,\"162\":2,\"234\":1,\"235\":1,\"253\":1,\"255\":1,\"260\":1,\"261\":2,\"263\":1,\"289\":1,\"291\":1}}],[\"512\",{\"1\":{\"291\":1}}],[\"50\",{\"1\":{\"287\":2}}],[\"53\",{\"1\":{\"276\":1}}],[\"536743167\",{\"1\":{\"236\":1,\"244\":1}}],[\"58\",{\"1\":{\"276\":3}}],[\"5461743\",{\"1\":{\"181\":1}}],[\"5\",{\"1\":{\"46\":4,\"49\":4,\"147\":1,\"184\":2,\"207\":1,\"235\":1,\"260\":1,\"261\":1,\"263\":1,\"276\":1}}],[\"369\",{\"1\":{\"214\":1}}],[\"3600\",{\"1\":{\"273\":1}}],[\"360\",{\"1\":{\"213\":1,\"221\":1}}],[\"35\",{\"1\":{\"276\":1,\"278\":1}}],[\"356\",{\"0\":{\"217\":1},\"1\":{\"216\":2}}],[\"357\",{\"1\":{\"214\":2}}],[\"359\",{\"1\":{\"211\":1}}],[\"375\",{\"1\":{\"210\":1}}],[\"370\",{\"1\":{\"209\":1}}],[\"376\",{\"0\":{\"205\":1}}],[\"398\",{\"0\":{\"218\":1},\"1\":{\"216\":2,\"223\":1}}],[\"391\",{\"1\":{\"216\":1}}],[\"397\",{\"0\":{\"213\":1},\"1\":{\"213\":1,\"221\":1}}],[\"396\",{\"0\":{\"212\":1}}],[\"395\",{\"0\":{\"211\":1},\"1\":{\"211\":1}}],[\"394\",{\"0\":{\"210\":1},\"1\":{\"210\":1}}],[\"393\",{\"0\":{\"209\":1}}],[\"392\",{\"0\":{\"208\":1}}],[\"390\",{\"0\":{\"207\":1}}],[\"343\",{\"1\":{\"208\":1}}],[\"347\",{\"0\":{\"204\":1}}],[\"344\",{\"1\":{\"166\":1}}],[\"382\",{\"1\":{\"216\":1}}],[\"388\",{\"1\":{\"214\":2}}],[\"386\",{\"1\":{\"214\":2}}],[\"389\",{\"1\":{\"214\":1}}],[\"380\",{\"1\":{\"214\":1}}],[\"384\",{\"1\":{\"211\":1,\"291\":1}}],[\"383\",{\"1\":{\"209\":1}}],[\"387\",{\"0\":{\"206\":1}}],[\"38\",{\"1\":{\"176\":2}}],[\"323\",{\"1\":{\"151\":1}}],[\"321\",{\"1\":{\"151\":1}}],[\"31\",{\"1\":{\"274\":1}}],[\"317\",{\"1\":{\"141\":1}}],[\"310\",{\"1\":{\"141\":1}}],[\"306\",{\"1\":{\"216\":1}}],[\"305\",{\"1\":{\"210\":1}}],[\"307\",{\"1\":{\"141\":1}}],[\"304\",{\"1\":{\"141\":1}}],[\"338\",{\"0\":{\"203\":1},\"1\":{\"203\":1,\"225\":1,\"231\":1,\"237\":1,\"246\":1}}],[\"330\",{\"1\":{\"151\":1}}],[\"333\",{\"1\":{\"151\":1}}],[\"33\",{\"1\":{\"47\":1,\"287\":3}}],[\"3\",{\"1\":{\"46\":4,\"141\":1,\"142\":2,\"151\":1,\"153\":2,\"158\":2,\"176\":1,\"187\":1,\"202\":1,\"216\":1,\"217\":1,\"226\":1,\"235\":1,\"239\":1,\"253\":3,\"254\":1,\"255\":1,\"263\":1,\"268\":1,\"279\":1,\"291\":1}}],[\"使得它可以方便地对遍历处理后的数据进行再处理\",{\"1\":{\"262\":1}}],[\"使得开发者更容易在应用程序中互换使用各种\",{\"1\":{\"217\":1}}],[\"使之性能更好\",{\"1\":{\"230\":1}}],[\"使\",{\"1\":{\"166\":1,\"224\":1,\"233\":1,\"235\":1,\"243\":1,\"291\":1}}],[\"使修改的文件生效\",{\"1\":{\"45\":1}}],[\"使用新的\",{\"1\":{\"287\":1}}],[\"使用原始\",{\"1\":{\"287\":1}}],[\"使用flatmap的代码\",{\"1\":{\"264\":1}}],[\"使用flatmap就是为了将这个二维数组展平变成一个一维数组\",{\"1\":{\"264\":1}}],[\"使用fork方法派生线程来执行子任务\",{\"1\":{\"238\":1,\"245\":1}}],[\"使用提供的\",{\"1\":{\"259\":1}}],[\"使用上和一般类静态方法一样\",{\"1\":{\"248\":1}}],[\"使用方法句柄重新实现反射核心\",{\"0\":{\"230\":1},\"1\":{\"226\":1}}],[\"使用方式\",{\"1\":{\"61\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1}}],[\"使用时间戳作为随机数种子\",{\"1\":{\"217\":1}}],[\"使用示例\",{\"1\":{\"217\":1,\"235\":1}}],[\"使用早期版本成功编译的访问\",{\"1\":{\"212\":1}}],[\"使用record声明的类会自动拥有上面类中的三个方法\",{\"1\":{\"187\":1}}],[\"使用类似\",{\"1\":{\"168\":1}}],[\"使用起来也很简单\",{\"1\":{\"152\":1}}],[\"使用起来也非常简单\",{\"1\":{\"31\":1}}],[\"使用homebrew进行安装\",{\"1\":{\"137\":1}}],[\"使用homebrew进行下载安装\",{\"1\":{\"127\":1}}],[\"使用反代理工具激活jrebel\",{\"0\":{\"111\":1}}],[\"使用\",{\"0\":{\"37\":1},\"1\":{\"61\":2,\"145\":1,\"187\":1,\"250\":1,\"253\":1,\"259\":1,\"263\":1,\"283\":1}}],[\"使用清华大学的镜像\",{\"0\":{\"36\":1}}],[\"使用中科大的镜像\",{\"0\":{\"35\":1}}],[\"使用技巧\",{\"0\":{\"33\":1}}],[\"使用网页搜索\",{\"0\":{\"18\":1,\"38\":1}}],[\"使用命令搜索\",{\"0\":{\"17\":1}}],[\"从源码和实例中我们可以总结出一些\",{\"1\":{\"262\":1}}],[\"从结果中我们看到\",{\"1\":{\"261\":1}}],[\"从中也能体会到\",{\"1\":{\"253\":1}}],[\"从支持\",{\"1\":{\"190\":1}}],[\"从\",{\"1\":{\"144\":2,\"156\":1,\"179\":1,\"190\":1,\"201\":1,\"210\":1,\"211\":1,\"212\":1,\"214\":2}}],[\"从步入的方法内退出到方法调用处\",{\"1\":{\"115\":1}}],[\"从左到右依次如下\",{\"1\":{\"115\":1}}],[\"从终端输出结果可以得出\",{\"1\":{\"45\":1}}],[\"从而允许非常多的虚拟线程\",{\"1\":{\"238\":1,\"245\":1}}],[\"从而简化错误处理\",{\"1\":{\"238\":1,\"245\":1}}],[\"从而实现优于等效标量计算的性能\",{\"1\":{\"231\":1,\"246\":1}}],[\"从而减少元空间的占用空间\",{\"1\":{\"206\":1}}],[\"从而减少了\",{\"1\":{\"144\":1}}],[\"从而导致内存浪费\",{\"1\":{\"206\":1}}],[\"从而获得优于同等标量计算的性能\",{\"1\":{\"203\":1,\"225\":1}}],[\"从而提升我们的下载速度\",{\"1\":{\"34\":1}}],[\"从而确认有哪些问题\",{\"1\":{\"27\":1}}],[\"x>\",{\"1\":{\"266\":1}}],[\"xyz\",{\"1\":{\"260\":1}}],[\"x64\",{\"1\":{\"148\":2,\"155\":2,\"214\":2}}],[\"xxxx\",{\"1\":{\"112\":1}}],[\"xx\",{\"1\":{\"75\":3,\"96\":1,\"148\":2,\"174\":2,\"184\":1,\"194\":1,\"201\":1}}],[\"xms设置一样大\",{\"1\":{\"105\":1}}],[\"xms和\",{\"1\":{\"105\":1}}],[\"xms1024m\",{\"1\":{\"105\":1}}],[\"xms100m\",{\"1\":{\"75\":1}}],[\"xmx1024m\",{\"1\":{\"105\":1}}],[\"xmx100m\",{\"1\":{\"75\":1}}],[\"xml中sql\",{\"1\":{\"61\":1}}],[\"xml\",{\"1\":{\"61\":5,\"79\":1,\"80\":1,\"281\":1}}],[\"xrebel\",{\"1\":{\"61\":1}}],[\"x\",{\"1\":{\"46\":1,\"61\":2,\"216\":2,\"260\":2,\"266\":1,\"287\":4}}],[\"x86\",{\"1\":{\"45\":1,\"46\":1}}],[\"xcode\",{\"1\":{\"13\":1}}],[\"xcode命令行工具\",{\"1\":{\"13\":1}}],[\"00\",{\"1\":{\"276\":3}}],[\"05\",{\"1\":{\"276\":2}}],[\"0年9月27天\",{\"1\":{\"273\":1}}],[\"02\",{\"1\":{\"273\":4}}],[\"01\",{\"1\":{\"272\":4,\"276\":4}}],[\"0f\",{\"1\":{\"231\":2}}],[\"03\",{\"1\":{\"204\":1}}],[\"0hc0lxxasznvs52wsvnncjoh\",{\"1\":{\"195\":1}}],[\"0\",{\"1\":{\"44\":2,\"45\":1,\"46\":1,\"47\":1,\"91\":1,\"96\":1,\"97\":1,\"107\":3,\"142\":1,\"192\":1,\"207\":1,\"223\":1,\"228\":8,\"231\":2,\"235\":4,\"256\":1,\"271\":1,\"276\":1,\"287\":1}}],[\"8000\",{\"1\":{\"228\":2}}],[\"8mb\",{\"1\":{\"214\":1}}],[\"8446\",{\"1\":{\"158\":1}}],[\"8cf0\",{\"1\":{\"150\":1}}],[\"8888\",{\"1\":{\"112\":3}}],[\"8\",{\"0\":{\"227\":1,\"247\":1},\"1\":{\"44\":2,\"45\":6,\"46\":3,\"73\":2,\"101\":1,\"151\":1,\"163\":1,\"168\":1,\"195\":1,\"216\":1,\"226\":2,\"227\":1,\"247\":1,\"248\":1,\"249\":1,\"250\":2,\"255\":1,\"271\":2,\"272\":4,\"273\":2,\"274\":2,\"278\":2,\"279\":1,\"282\":1,\"284\":1,\"287\":4}}],[\"jlink\",{\"1\":{\"281\":2}}],[\"jdbc\",{\"0\":{\"275\":1},\"1\":{\"275\":1}}],[\"jdk8\",{\"1\":{\"263\":1}}],[\"jdk8u\",{\"1\":{\"165\":1}}],[\"jdk1\",{\"1\":{\"247\":1}}],[\"jdk14\",{\"1\":{\"185\":1}}],[\"jdk11\",{\"1\":{\"165\":1}}],[\"jdk配置\",{\"0\":{\"66\":1,\"67\":1}}],[\"jdk\",{\"0\":{\"212\":1},\"1\":{\"45\":4,\"46\":1,\"67\":2,\"143\":1,\"147\":1,\"148\":1,\"151\":1,\"152\":1,\"158\":1,\"159\":1,\"179\":5,\"181\":2,\"195\":1,\"204\":2,\"208\":2,\"210\":1,\"211\":2,\"212\":5,\"213\":1,\"214\":6,\"215\":1,\"216\":3,\"217\":1,\"221\":1,\"227\":1,\"231\":1,\"234\":3,\"236\":1,\"238\":2,\"239\":3,\"241\":1,\"243\":1,\"244\":2,\"245\":2,\"247\":2,\"279\":2,\"281\":2,\"291\":3,\"292\":2}}],[\"jdk的安装与环境变量的配置\",{\"0\":{\"43\":1}}],[\"jqx\",{\"1\":{\"260\":1}}],[\"jbutton\",{\"1\":{\"253\":2}}],[\"joining\",{\"1\":{\"260\":1}}],[\"join\",{\"1\":{\"238\":1,\"245\":1}}],[\"josn\",{\"0\":{\"4\":1}}],[\"jnr和javacpp等框架对\",{\"1\":{\"235\":1}}],[\"jni\",{\"1\":{\"214\":2,\"224\":1,\"233\":1,\"235\":7,\"243\":1}}],[\"jwebserver\",{\"1\":{\"228\":2}}],[\"jpackage\",{\"1\":{\"190\":1,\"208\":5}}],[\"jprofiler\",{\"1\":{\"61\":2}}],[\"jst\",{\"1\":{\"276\":1}}],[\"jsa\",{\"1\":{\"174\":2}}],[\"jshell\",{\"0\":{\"280\":1},\"1\":{\"157\":1,\"280\":7,\"292\":1}}],[\"jsjvm\",{\"1\":{\"150\":1}}],[\"json\",{\"1\":{\"61\":5,\"176\":2}}],[\"jep346\",{\"1\":{\"166\":1}}],[\"jep344\",{\"1\":{\"166\":1}}],[\"jep\",{\"0\":{\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"227\":1,\"228\":1,\"229\":1,\"230\":1,\"231\":1,\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"240\":1,\"241\":1,\"242\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1},\"1\":{\"141\":5,\"151\":4,\"166\":1,\"203\":4,\"208\":1,\"209\":2,\"210\":4,\"211\":4,\"213\":2,\"214\":10,\"216\":14,\"218\":1,\"221\":2,\"222\":1,\"223\":1,\"224\":3,\"225\":4,\"226\":9,\"231\":4,\"233\":3,\"234\":7,\"235\":3,\"237\":4,\"239\":7,\"241\":1,\"243\":4,\"246\":5,\"279\":5}}],[\"jetbrains破解补丁文件夹发给你\",{\"1\":{\"109\":1}}],[\"jetbrains\",{\"1\":{\"53\":2,\"107\":3,\"110\":1,\"125\":1}}],[\"jtest\",{\"1\":{\"93\":1}}],[\"junit4测试方法\",{\"0\":{\"93\":1}}],[\"junitgenerator\",{\"1\":{\"61\":1}}],[\"jigsaw\",{\"1\":{\"281\":1}}],[\"jit\",{\"0\":{\"148\":1,\"222\":1},\"1\":{\"141\":1,\"148\":3,\"216\":2,\"222\":2,\"235\":1}}],[\"jindent\",{\"1\":{\"61\":1}}],[\"jimbojsb\",{\"1\":{\"41\":1}}],[\"jclasslib\",{\"1\":{\"61\":2}}],[\"jvmci\",{\"1\":{\"222\":1}}],[\"jvmti\",{\"1\":{\"158\":1}}],[\"jvm参数设置\",{\"0\":{\"105\":1}}],[\"jvm\",{\"0\":{\"180\":1},\"1\":{\"61\":1,\"147\":1,\"149\":4,\"180\":1,\"184\":1,\"201\":1,\"209\":1,\"222\":1,\"224\":2,\"233\":2,\"235\":3,\"243\":2,\"288\":1,\"291\":1}}],[\"jan\",{\"1\":{\"276\":2}}],[\"jad\",{\"1\":{\"61\":1}}],[\"jar\",{\"1\":{\"61\":4,\"75\":1,\"107\":1,\"174\":2,\"190\":1,\"281\":1}}],[\"java7\",{\"1\":{\"291\":1}}],[\"java20\",{\"1\":{\"242\":1,\"246\":1}}],[\"java8\",{\"0\":{\"275\":1},\"1\":{\"165\":1,\"201\":1,\"247\":3,\"275\":1,\"291\":1}}],[\"java8的stream流\",{\"1\":{\"61\":1}}],[\"java18\",{\"1\":{\"242\":1}}],[\"java17\",{\"1\":{\"242\":1}}],[\"java19\",{\"1\":{\"236\":1,\"242\":1,\"244\":1}}],[\"java16\",{\"1\":{\"205\":1,\"207\":1,\"215\":1}}],[\"java15\",{\"0\":{\"191\":1}}],[\"java14\",{\"0\":{\"183\":1},\"1\":{\"179\":1,\"185\":1,\"188\":1,\"190\":1}}],[\"java13\",{\"0\":{\"170\":1},\"1\":{\"179\":1,\"181\":3,\"185\":1}}],[\"java12\",{\"0\":{\"161\":1},\"1\":{\"166\":1,\"168\":1,\"179\":1,\"181\":1,\"185\":2}}],[\"java11\",{\"1\":{\"156\":1,\"165\":1,\"190\":1,\"194\":1}}],[\"java10\",{\"1\":{\"144\":1,\"150\":3}}],[\"javajavajava\",{\"1\":{\"153\":1}}],[\"javastrings\",{\"1\":{\"235\":8}}],[\"javastack\",{\"1\":{\"152\":1}}],[\"javascript\",{\"1\":{\"201\":2,\"291\":1}}],[\"javase\",{\"1\":{\"150\":1,\"159\":1,\"181\":2,\"292\":1}}],[\"java9\",{\"1\":{\"144\":2,\"201\":1,\"207\":2,\"291\":2}}],[\"java9featurestest\",{\"1\":{\"142\":1}}],[\"javaagent\",{\"1\":{\"110\":1}}],[\"java新运行项目配置\",{\"0\":{\"75\":1}}],[\"javadocs\",{\"1\":{\"61\":4}}],[\"javadoc\",{\"1\":{\"61\":2,\"99\":1,\"229\":1}}],[\"javavirtualmachines\",{\"1\":{\"45\":4,\"46\":1}}],[\"java\",{\"0\":{\"141\":1,\"148\":1,\"151\":1,\"160\":1,\"182\":1,\"202\":1,\"216\":1,\"226\":1,\"229\":1,\"234\":1,\"239\":1,\"247\":1,\"270\":1,\"279\":1,\"300\":1},\"1\":{\"44\":1,\"45\":9,\"46\":2,\"61\":7,\"79\":1,\"141\":2,\"142\":8,\"143\":1,\"145\":2,\"147\":4,\"148\":4,\"149\":2,\"150\":2,\"151\":6,\"152\":4,\"153\":8,\"156\":2,\"157\":6,\"158\":6,\"159\":3,\"162\":4,\"163\":5,\"166\":1,\"171\":2,\"172\":4,\"174\":5,\"176\":2,\"177\":1,\"180\":2,\"181\":9,\"184\":6,\"187\":1,\"188\":2,\"189\":1,\"194\":3,\"196\":1,\"199\":3,\"200\":3,\"201\":2,\"202\":2,\"203\":6,\"204\":2,\"207\":5,\"208\":5,\"209\":5,\"210\":4,\"211\":4,\"212\":1,\"213\":2,\"214\":5,\"215\":2,\"216\":7,\"217\":1,\"218\":2,\"221\":2,\"222\":4,\"223\":4,\"224\":7,\"225\":6,\"226\":11,\"227\":3,\"228\":1,\"229\":2,\"230\":2,\"231\":4,\"232\":2,\"233\":7,\"234\":1,\"235\":15,\"236\":2,\"237\":5,\"241\":1,\"243\":7,\"244\":3,\"245\":1,\"246\":4,\"247\":1,\"248\":1,\"249\":1,\"250\":3,\"255\":1,\"257\":2,\"260\":1,\"263\":1,\"269\":2,\"270\":2,\"271\":2,\"272\":3,\"273\":3,\"274\":3,\"276\":3,\"278\":2,\"279\":6,\"280\":3,\"281\":10,\"282\":3,\"283\":4,\"284\":3,\"285\":1,\"286\":2,\"287\":5,\"288\":2,\"289\":5,\"290\":4,\"291\":3,\"292\":8}}],[\"jrebel\",{\"1\":{\"61\":2,\"112\":2}}],[\"jre\",{\"1\":{\"46\":1,\"281\":1}}],[\"管理的内存\",{\"1\":{\"224\":1,\"233\":1,\"235\":1,\"243\":1}}],[\"管理你的\",{\"1\":{\"61\":1}}],[\"管理器\",{\"1\":{\"40\":1}}],[\"管理后台软件命令\",{\"0\":{\"25\":1}}],[\"和应用使用\",{\"1\":{\"291\":1}}],[\"和应用配置同样的日志实现\",{\"1\":{\"291\":1}}],[\"和时区无关\",{\"1\":{\"276\":1}}],[\"和时间计算繁琐\",{\"1\":{\"269\":1}}],[\"和新\",{\"1\":{\"269\":1}}],[\"和逻辑处理集合数据\",{\"1\":{\"257\":1}}],[\"和注解\",{\"1\":{\"250\":1}}],[\"和安全地访问外部内存\",{\"1\":{\"224\":1,\"233\":1,\"235\":1,\"243\":1}}],[\"和即时\",{\"1\":{\"222\":1}}],[\"和其他使用\",{\"1\":{\"214\":1}}],[\"和两个成员属性访问器组成\",{\"1\":{\"187\":1}}],[\"和\",{\"0\":{\"222\":1,\"275\":1},\"1\":{\"39\":1,\"61\":4,\"142\":1,\"151\":1,\"155\":1,\"165\":1,\"190\":1,\"199\":1,\"207\":2,\"208\":3,\"214\":3,\"216\":2,\"228\":1,\"243\":1,\"248\":1,\"264\":2,\"273\":2,\"283\":1,\"287\":2,\"289\":1,\"290\":1,\"291\":1}}],[\"还是在\",{\"1\":{\"282\":1}}],[\"还是有必要对这些新特性做一些总结梳理\",{\"1\":{\"247\":1}}],[\"还有一个\",{\"1\":{\"269\":1}}],[\"还有众所周知的\",{\"1\":{\"247\":1}}],[\"还有\",{\"1\":{\"208\":1}}],[\"还有两款软件可以帮助我们更好的使用\",{\"1\":{\"39\":1}}],[\"还在试验阶段\",{\"1\":{\"194\":1}}],[\"还支持不同平台的特性包\",{\"1\":{\"190\":1}}],[\"还可以减少动态内存的占用量\",{\"1\":{\"147\":1}}],[\"还可以一键填入默认值\",{\"1\":{\"62\":1}}],[\"还能在每一行代码上提示上次提交的时间\",{\"1\":{\"61\":1}}],[\"还提供了submissionpublisher\",{\"1\":{\"289\":1}}],[\"还提供了\",{\"1\":{\"9\":1}}],[\"页面\",{\"1\":{\"38\":1}}],[\"重载方法输出数字\",{\"1\":{\"287\":1}}],[\"重载方法更加灵活一些\",{\"1\":{\"287\":1}}],[\"重写\",{\"1\":{\"248\":1}}],[\"重要\",{\"0\":{\"216\":1}}],[\"重构\",{\"0\":{\"172\":1},\"1\":{\"201\":1}}],[\"重复字符串多少次\",{\"1\":{\"153\":1}}],[\"重新排序的\",{\"1\":{\"235\":1}}],[\"重新启动zsh\",{\"1\":{\"137\":2,\"138\":1}}],[\"重新安装会是一个大麻烦\",{\"1\":{\"37\":1}}],[\"重启某个服务\",{\"1\":{\"25\":1}}],[\"重启\",{\"0\":{\"7\":1}}],[\"完成环境迁移\",{\"0\":{\"37\":1}}],[\"默认垃圾回收器是\",{\"1\":{\"282\":1}}],[\"默认字符集是在\",{\"1\":{\"227\":1}}],[\"默认字符集为\",{\"0\":{\"227\":1},\"1\":{\"226\":1}}],[\"默认改为\",{\"1\":{\"212\":1}}],[\"默认强封装\",{\"0\":{\"212\":1}}],[\"默认的垃圾回收器依然是\",{\"1\":{\"194\":1}}],[\"默认情况下\",{\"1\":{\"148\":1,\"212\":1}}],[\"默认无\",{\"1\":{\"115\":1}}],[\"默认反代idea\",{\"1\":{\"112\":1}}],[\"默认使用的是国外的源\",{\"1\":{\"34\":1}}],[\"默认shell是zsh\",{\"1\":{\"13\":1}}],[\"最后再综合用一下\",{\"1\":{\"268\":1}}],[\"最后再将这个集合展平\",{\"1\":{\"264\":1}}],[\"最简单的理解就是flatmap\",{\"1\":{\"264\":1}}],[\"最低支持的就是\",{\"1\":{\"216\":1}}],[\"最多可以支持到\",{\"1\":{\"216\":1}}],[\"最小安装到磁盘只需要大约\",{\"1\":{\"214\":1}}],[\"最终的输出结果一定会与你的期望产生差异\",{\"1\":{\"207\":1}}],[\"最初由\",{\"1\":{\"203\":1,\"225\":1,\"231\":1,\"237\":1,\"246\":1}}],[\"最大限度的降低内存占用和内存吞吐延迟时间\",{\"1\":{\"158\":1}}],[\"最知名的特性应该是\",{\"1\":{\"141\":1}}],[\"最新版\",{\"1\":{\"31\":1}}],[\"最关键的是\",{\"1\":{\"10\":1}}],[\"有点像是一个简化版的抽象类\",{\"1\":{\"285\":1}}],[\"有点参考\",{\"1\":{\"283\":1}}],[\"有什么不一样\",{\"1\":{\"280\":1}}],[\"有什么区别\",{\"1\":{\"269\":1}}],[\"有什么区别的\",{\"1\":{\"264\":1}}],[\"有人说这种方式很丑陋不优雅\",{\"1\":{\"263\":1}}],[\"有时间大家可以了解一下\",{\"1\":{\"261\":1}}],[\"有且只有一个抽象方法\",{\"1\":{\"249\":1}}],[\"有很多变化或者说是优化\",{\"1\":{\"247\":1}}],[\"有稳定的\",{\"1\":{\"165\":1}}],[\"有需要的自行修改\",{\"1\":{\"72\":1}}],[\"有了\",{\"1\":{\"31\":1}}],[\"有梦想的鱼\",{\"0\":{\"0\":1}}],[\"了\",{\"1\":{\"29\":1,\"274\":1}}],[\"了解这些概念\",{\"1\":{\"10\":1}}],[\"时区\",{\"0\":{\"276\":1},\"1\":{\"276\":1}}],[\"时区处理麻烦\",{\"1\":{\"269\":1}}],[\"时等等\",{\"1\":{\"273\":1}}],[\"时间类型对应关系是\",{\"1\":{\"275\":1}}],[\"时间类型和\",{\"1\":{\"275\":1}}],[\"时间\",{\"1\":{\"270\":1}}],[\"时被标记弃用\",{\"1\":{\"218\":1}}],[\"时序图生成工具\",{\"1\":{\"61\":1}}],[\"时\",{\"1\":{\"29\":1,\"30\":1,\"177\":1,\"264\":2}}],[\"依然是预览特性\",{\"1\":{\"189\":1}}],[\"依然是使用单线程去完成标记清除算法\",{\"1\":{\"144\":1}}],[\"依然会需要安装一些特殊的\",{\"1\":{\"29\":1}}],[\"依赖的版本号以及对\",{\"1\":{\"61\":1}}],[\"依赖的扩展\",{\"1\":{\"10\":1}}],[\"依赖\",{\"1\":{\"61\":1}}],[\"依赖分析和依赖冲突快速解决\",{\"1\":{\"61\":1}}],[\"添加对记录模式的支持以出现在增强语句的标题中for\",{\"1\":{\"241\":1}}],[\"添加对通用记录模式类型参数推断的支持\",{\"1\":{\"241\":1}}],[\"添加了\",{\"1\":{\"214\":1}}],[\"添加了以下方法来比较两个文件\",{\"1\":{\"163\":1}}],[\"添加它是为了支持文本块的格式设置\",{\"1\":{\"176\":1}}],[\"添加一个新的\",{\"0\":{\"29\":1}}],[\"添加命令\",{\"0\":{\"4\":1}}],[\"全球共\",{\"1\":{\"276\":1}}],[\"全部方法由构造方法\",{\"1\":{\"187\":1}}],[\"全部更新\",{\"1\":{\"26\":1}}],[\"全局empty对象\",{\"1\":{\"264\":1}}],[\"全局监听\",{\"1\":{\"117\":1}}],[\"全局配置\",{\"1\":{\"14\":1}}],[\"诊断homebrew\",{\"1\":{\"26\":1}}],[\"查版本提交问题的时候尤其方便\",{\"1\":{\"61\":1}}],[\"查找\",{\"1\":{\"140\":1}}],[\"查找内容\",{\"1\":{\"58\":1}}],[\"查找node版本\",{\"1\":{\"48\":1}}],[\"查找git版本\",{\"1\":{\"47\":1}}],[\"查找某个软件\",{\"1\":{\"26\":1}}],[\"查询可更新的包\",{\"1\":{\"26\":1}}],[\"查看剪贴板历史\",{\"1\":{\"140\":1}}],[\"查看历史命令\",{\"1\":{\"140\":1}}],[\"查看当前窗口使用的shell版本\",{\"1\":{\"132\":1}}],[\"查看当前使用的shell\",{\"1\":{\"13\":1}}],[\"查看shell\",{\"1\":{\"132\":1}}],[\"查看底层源码的时候可以用这个进入官方类库的方法\",{\"1\":{\"115\":1}}],[\"查看idea安装目录d\",{\"1\":{\"72\":1}}],[\"查看字节码插件\",{\"1\":{\"61\":1}}],[\"查看类方法\",{\"1\":{\"59\":1}}],[\"查看类图\",{\"1\":{\"58\":1}}],[\"查看子类\",{\"1\":{\"59\":1}}],[\"查看最近复制的内容\",{\"1\":{\"58\":1}}],[\"查看用户的权限\",{\"1\":{\"49\":1}}],[\"查看镜像源是否配置成功\",{\"1\":{\"48\":1}}],[\"查看git的版本号\",{\"1\":{\"47\":1}}],[\"查看是否安装成功\",{\"1\":{\"46\":2}}],[\"查看是否配置了环境变量\",{\"1\":{\"45\":1}}],[\"查看环境变量是否生效\",{\"1\":{\"45\":1}}],[\"查看地址\",{\"1\":{\"45\":1}}],[\"查看jdk安装地址\",{\"1\":{\"45\":1}}],[\"查看java版本号\",{\"1\":{\"44\":1}}],[\"查看安装指南即可\",{\"1\":{\"38\":1}}],[\"查看帮助信息\",{\"1\":{\"26\":1}}],[\"查看软件包的信息\",{\"1\":{\"26\":1}}],[\"查看已安装的包\",{\"1\":{\"26\":1}}],[\"查看已经安装的包\",{\"0\":{\"19\":1}}],[\"查看homebrew版本\",{\"1\":{\"26\":1}}],[\"查看所有服务\",{\"1\":{\"25\":1}}],[\"查看所有的shell\",{\"1\":{\"13\":1}}],[\"查看包的信息\",{\"0\":{\"22\":1}}],[\"vc\",{\"1\":{\"231\":3}}],[\"vb\",{\"1\":{\"231\":4}}],[\"va\",{\"1\":{\"231\":4}}],[\"value为null抛出nosuchelementexception\",{\"1\":{\"266\":1}}],[\"value是否为null\",{\"1\":{\"265\":1}}],[\"value\",{\"0\":{\"265\":1,\"266\":1},\"1\":{\"264\":11,\"265\":3,\"266\":10,\"267\":2,\"284\":1}}],[\"values\",{\"1\":{\"239\":1,\"240\":1,\"259\":2}}],[\"valuelayout\",{\"1\":{\"235\":3}}],[\"valueof\",{\"1\":{\"207\":1}}],[\"valid\",{\"1\":{\"185\":1}}],[\"val\",{\"1\":{\"142\":1}}],[\"varhandle\",{\"1\":{\"235\":1,\"290\":3}}],[\"var\",{\"0\":{\"142\":1},\"1\":{\"49\":1,\"141\":1,\"142\":15,\"145\":1,\"152\":2,\"154\":1,\"156\":4,\"231\":3,\"238\":1,\"245\":1}}],[\"v3\",{\"1\":{\"107\":2}}],[\"vlog\",{\"1\":{\"95\":1}}],[\"vue打印日志\",{\"0\":{\"95\":1}}],[\"vuepress\",{\"1\":{\"3\":1}}],[\"void\",{\"1\":{\"93\":1,\"207\":1,\"219\":2,\"231\":2,\"248\":9,\"253\":5,\"254\":1,\"255\":1,\"259\":1,\"260\":1,\"261\":2,\"264\":2,\"265\":1,\"271\":2,\"273\":2,\"274\":2,\"285\":1,\"287\":1}}],[\"vo2dto\",{\"1\":{\"61\":1}}],[\"vs\",{\"1\":{\"62\":1}}],[\"vscode\",{\"1\":{\"31\":1}}],[\"vimrc\",{\"1\":{\"139\":1}}],[\"vim\",{\"1\":{\"62\":2,\"139\":1}}],[\"view\",{\"1\":{\"61\":1}}],[\"viewer\",{\"1\":{\"61\":1}}],[\"visual\",{\"1\":{\"61\":1}}],[\"visualizer\",{\"1\":{\"61\":1}}],[\"visualgc\",{\"1\":{\"61\":1}}],[\"virtualthread\",{\"1\":{\"236\":1,\"244\":1}}],[\"virtual\",{\"1\":{\"45\":1,\"234\":1,\"236\":1,\"239\":1,\"244\":1}}],[\"vectorcomputation\",{\"1\":{\"231\":1}}],[\"vectorspecies<float>\",{\"1\":{\"231\":1}}],[\"vector\",{\"1\":{\"203\":1,\"216\":1,\"225\":1,\"226\":1,\"231\":2,\"234\":1,\"237\":1,\"246\":1}}],[\"verison\",{\"1\":{\"47\":1}}],[\"version\",{\"1\":{\"44\":2,\"46\":2,\"47\":1,\"61\":1,\"97\":1,\"107\":1,\"292\":2}}],[\"versions\",{\"1\":{\"44\":1}}],[\"vendor\",{\"1\":{\"46\":1}}],[\"vmoptions中的\",{\"1\":{\"110\":1}}],[\"vm\",{\"1\":{\"44\":1,\"61\":1,\"73\":1,\"101\":1,\"105\":1,\"107\":2,\"148\":1,\"150\":1}}],[\"v\",{\"1\":{\"26\":1,\"46\":1,\"229\":3,\"234\":1,\"240\":4,\"254\":2,\"268\":1}}],[\"其它\",{\"0\":{\"291\":1}}],[\"其它的一些不怎么用的插件\",{\"0\":{\"62\":1}}],[\"其实我们涨工资也是涨的学习的钱\",{\"1\":{\"278\":1}}],[\"其实这些新特性几天就可以掌握\",{\"1\":{\"278\":1}}],[\"其实它们还是有区别的\",{\"1\":{\"248\":1}}],[\"其在\",{\"1\":{\"249\":1}}],[\"其次\",{\"1\":{\"207\":1}}],[\"其构造函数上都已经标记有\",{\"1\":{\"207\":1}}],[\"其引入了两个新的转义字符\",{\"1\":{\"188\":1}}],[\"其代码被包含到公开代码库中\",{\"1\":{\"158\":1}}],[\"其最大的区别就是\",{\"1\":{\"151\":1}}],[\"其原理为\",{\"1\":{\"147\":1}}],[\"其他还有诸如集合\",{\"1\":{\"279\":1}}],[\"其他还有垃圾收集器改善\",{\"1\":{\"141\":1}}],[\"其他单位\",{\"1\":{\"273\":1}}],[\"其他优化与改进\",{\"0\":{\"214\":1}}],[\"其他新特性\",{\"0\":{\"158\":1}}],[\"其他\",{\"0\":{\"149\":1,\"190\":1,\"201\":1}}],[\"其他命令\",{\"0\":{\"26\":1}}],[\"其中可以包含空值或非空值\",{\"1\":{\"263\":1}}],[\"其中一些没有\",{\"1\":{\"249\":1}}],[\"其中\",{\"1\":{\"10\":1,\"207\":1}}],[\"运行结果\",{\"1\":{\"264\":1}}],[\"运行时环境的大小\",{\"1\":{\"281\":1}}],[\"运行时之外的代码和数据进行互操作\",{\"1\":{\"224\":1,\"233\":1,\"235\":1,\"243\":1}}],[\"运行时的提升\",{\"1\":{\"180\":1}}],[\"运行到光标处\",{\"1\":{\"115\":1}}],[\"运行起来后\",{\"1\":{\"112\":1}}],[\"运行反代理工具\",{\"0\":{\"112\":1}}],[\"运行后的相关\",{\"1\":{\"61\":1}}],[\"运行某个服务\",{\"1\":{\"25\":1}}],[\"运行发布命令\",{\"0\":{\"5\":1}}],[\"会抛出\",{\"1\":{\"264\":1}}],[\"会抛出nullpointerexception异常\",{\"1\":{\"264\":1}}],[\"会报错\",{\"1\":{\"262\":1}}],[\"会依赖于一个初始值\",{\"1\":{\"217\":1}}],[\"会提示你静态字段\",{\"1\":{\"211\":1}}],[\"会提示很多\",{\"1\":{\"61\":1}}],[\"会直接跳出当前循环或者方法\",{\"1\":{\"177\":1}}],[\"会自动进入方法第一行断点以及最后出方法时断点\",{\"1\":{\"118\":1}}],[\"会自动安装\",{\"1\":{\"31\":1}}],[\"会监听值的整个生命周期的变化\",{\"1\":{\"116\":1}}],[\"会出现反编译的结果\",{\"1\":{\"61\":1}}],[\"会有一些历史版本的软件遗留在系统里\",{\"1\":{\"23\":1}}],[\"会将软件包安装到独立目录\",{\"1\":{\"14\":1}}],[\"`city`\",{\"1\":{\"176\":2}}],[\"`last\",{\"1\":{\"176\":4}}],[\"`employee\",{\"1\":{\"176\":2}}],[\"`emp\",{\"1\":{\"176\":4}}],[\"`wangfeng`\",{\"1\":{\"49\":1}}],[\"`来更新单个软件\",{\"1\":{\"20\":1}}],[\"`brew\",{\"1\":{\"20\":2}}],[\"然后存储指向它的指针\",{\"1\":{\"235\":1}}],[\"然后由解释器执行\",{\"1\":{\"157\":1}}],[\"然后编辑vim\",{\"1\":{\"137\":1}}],[\"然后profiles\",{\"1\":{\"128\":1}}],[\"然后重命名\",{\"1\":{\"109\":1}}],[\"然后可以直接复制\",{\"1\":{\"61\":1}}],[\"然后再安装软件\",{\"1\":{\"41\":1}}],[\"然后将\",{\"1\":{\"37\":1}}],[\"然后执行安装即可了\",{\"1\":{\"32\":1}}],[\"然后使用它对\",{\"1\":{\"235\":1}}],[\"然后使用这个功能\",{\"1\":{\"115\":1}}],[\"然后使用\",{\"1\":{\"20\":1}}],[\"然后就会出现对应的候选命令\",{\"1\":{\"18\":1}}],[\"omitted\",{\"1\":{\"286\":2}}],[\"other\",{\"1\":{\"266\":5}}],[\"otherwise\",{\"1\":{\"266\":1}}],[\"o2\",{\"1\":{\"253\":6,\"256\":1}}],[\"o1\",{\"1\":{\"253\":6,\"256\":2}}],[\"oops\",{\"1\":{\"219\":2}}],[\"oldformat\",{\"1\":{\"271\":1}}],[\"old\",{\"1\":{\"210\":1,\"219\":3,\"242\":2,\"282\":1}}],[\"obj\",{\"1\":{\"169\":5,\"263\":1,\"264\":3}}],[\"objectoptional\",{\"1\":{\"287\":4}}],[\"objects\",{\"1\":{\"264\":1,\"267\":1}}],[\"object\",{\"1\":{\"94\":2,\"169\":2,\"176\":2,\"177\":1,\"219\":2,\"242\":2,\"259\":3,\"261\":1}}],[\"ocsp\",{\"1\":{\"158\":1}}],[\"occurred\",{\"1\":{\"107\":1}}],[\"o\",{\"1\":{\"133\":2,\"210\":3,\"219\":11,\"242\":11,\"261\":1,\"263\":2,\"268\":2,\"291\":1}}],[\"ohmyzsh\",{\"1\":{\"133\":10}}],[\"oh\",{\"0\":{\"130\":1},\"1\":{\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1}}],[\"outer\",{\"1\":{\"211\":1}}],[\"out\",{\"1\":{\"115\":1,\"142\":1,\"152\":2,\"154\":1,\"156\":2,\"162\":3,\"164\":1,\"168\":4,\"169\":2,\"185\":1,\"188\":2,\"195\":1,\"219\":6,\"229\":1,\"248\":5,\"253\":3,\"254\":4,\"260\":8,\"261\":3,\"263\":2,\"264\":6,\"271\":6,\"273\":5,\"274\":3,\"276\":7,\"287\":9,\"288\":2}}],[\"outdated\",{\"1\":{\"20\":1,\"26\":1}}],[\"override\",{\"1\":{\"248\":2,\"253\":3,\"261\":1}}],[\"overview\",{\"1\":{\"150\":1,\"181\":1}}],[\"over\",{\"1\":{\"115\":1}}],[\"ofentries\",{\"1\":{\"283\":1}}],[\"ofpattern\",{\"1\":{\"271\":1}}],[\"offheap\",{\"1\":{\"235\":4}}],[\"ofstring\",{\"1\":{\"152\":2}}],[\"ofnullable是其中一种创建\",{\"1\":{\"264\":1}}],[\"ofnullable\",{\"1\":{\"146\":1,\"263\":1,\"264\":4,\"268\":1,\"287\":4}}],[\"of\",{\"1\":{\"107\":1,\"142\":3,\"148\":1,\"181\":1,\"217\":1,\"229\":1,\"259\":2,\"264\":4,\"266\":1,\"268\":1,\"272\":4,\"274\":4,\"276\":1,\"281\":1,\"283\":7,\"287\":3}}],[\"ok\",{\"1\":{\"61\":1,\"219\":2}}],[\"on\",{\"1\":{\"49\":5,\"97\":1,\"139\":1,\"228\":1}}],[\"os自带的终端\",{\"1\":{\"127\":1}}],[\"os\",{\"1\":{\"46\":2,\"236\":1,\"244\":1}}],[\"operated\",{\"1\":{\"260\":1}}],[\"opens\",{\"1\":{\"212\":1}}],[\"opening\",{\"1\":{\"107\":1}}],[\"open\",{\"1\":{\"53\":1}}],[\"openjdk\",{\"1\":{\"44\":5,\"107\":1,\"181\":1,\"202\":1,\"214\":2,\"216\":1,\"226\":1,\"230\":1,\"234\":1,\"279\":2}}],[\"op\",{\"1\":{\"154\":2}}],[\"optionaladdress\",{\"1\":{\"264\":3}}],[\"optionalexample\",{\"1\":{\"264\":2}}],[\"optional维护的值\",{\"1\":{\"264\":1}}],[\"optional<object>\",{\"1\":{\"287\":2}}],[\"optional<optional<address>>\",{\"1\":{\"264\":1}}],[\"optional<address>\",{\"1\":{\"264\":1}}],[\"optional<t>\",{\"1\":{\"264\":5,\"267\":1,\"287\":1}}],[\"optional<>\",{\"1\":{\"264\":2}}],[\"optional<\",{\"1\":{\"264\":1,\"287\":1}}],[\"optional\",{\"0\":{\"146\":1,\"154\":1,\"263\":1,\"264\":1,\"287\":1},\"1\":{\"146\":2,\"154\":3,\"207\":1,\"229\":1,\"263\":6,\"264\":3,\"268\":4,\"278\":1,\"287\":7}}],[\"option\",{\"1\":{\"101\":1,\"107\":1,\"140\":1}}],[\"options\",{\"1\":{\"73\":1,\"105\":1,\"179\":1}}],[\"option+command+b\",{\"1\":{\"59\":1}}],[\"opt\",{\"1\":{\"46\":1,\"48\":1,\"49\":2}}],[\"ortimeout\",{\"1\":{\"291\":1}}],[\"orelseget\",{\"1\":{\"266\":1}}],[\"orelse\",{\"1\":{\"264\":1,\"266\":1,\"268\":1}}],[\"orelsethrow\",{\"1\":{\"146\":1,\"266\":1}}],[\"orange\",{\"1\":{\"264\":3}}],[\"oracle\",{\"1\":{\"147\":1,\"148\":1,\"150\":1,\"151\":3,\"159\":1,\"179\":1,\"181\":4,\"216\":2,\"247\":1,\"292\":1}}],[\"oriented\",{\"1\":{\"177\":1}}],[\"orig\",{\"1\":{\"134\":1}}],[\"origin\",{\"1\":{\"14\":2,\"35\":2,\"36\":2}}],[\"order\",{\"1\":{\"176\":2}}],[\"org\",{\"1\":{\"38\":1,\"48\":2,\"159\":1,\"292\":1}}],[\"or\",{\"1\":{\"5\":1,\"8\":1,\"107\":1,\"179\":1,\"228\":1,\"240\":1,\"254\":1,\"260\":1,\"287\":4}}],[\"批量更新软件\",{\"1\":{\"20\":1}}],[\"27t15\",{\"1\":{\"276\":3}}],[\"27t14\",{\"1\":{\"276\":1}}],[\"27\",{\"1\":{\"276\":2}}],[\"248\",{\"1\":{\"279\":1}}],[\"24\",{\"1\":{\"273\":1,\"276\":1}}],[\"23相差300天\",{\"1\":{\"273\":2}}],[\"23\",{\"1\":{\"273\":2}}],[\"261\",{\"1\":{\"279\":1}}],[\"26和2021\",{\"1\":{\"273\":2}}],[\"26\",{\"1\":{\"272\":6,\"273\":2}}],[\"2>>4\",{\"1\":{\"261\":1}}],[\"21\",{\"1\":{\"239\":2,\"279\":1}}],[\"224\",{\"1\":{\"291\":1}}],[\"222\",{\"1\":{\"279\":1}}],[\"22\",{\"1\":{\"226\":1,\"260\":1,\"272\":4}}],[\"29\",{\"1\":{\"276\":2}}],[\"295\",{\"1\":{\"222\":1}}],[\"292\",{\"1\":{\"44\":3,\"45\":1,\"46\":1}}],[\"289\",{\"1\":{\"218\":1}}],[\"286\",{\"1\":{\"141\":1}}],[\"2目录下idea64\",{\"1\":{\"110\":1}}],[\"2014\",{\"1\":{\"247\":1}}],[\"2019\",{\"1\":{\"214\":1}}],[\"2017\",{\"1\":{\"151\":1,\"279\":1}}],[\"2018\",{\"1\":{\"141\":1,\"151\":2}}],[\"20\",{\"0\":{\"239\":1},\"1\":{\"141\":1,\"234\":1,\"239\":2,\"241\":1,\"243\":1,\"244\":1,\"245\":1}}],[\"2023\",{\"1\":{\"239\":2}}],[\"2029\",{\"1\":{\"216\":1}}],[\"2021年最后一个周日\",{\"1\":{\"274\":1}}],[\"2021\",{\"1\":{\"202\":1,\"216\":1,\"272\":6,\"273\":6,\"274\":1,\"276\":6}}],[\"2026\",{\"1\":{\"151\":1}}],[\"2020\",{\"1\":{\"107\":1}}],[\"2022\",{\"1\":{\"52\":1,\"72\":1,\"226\":1}}],[\"2002\",{\"1\":{\"49\":1}}],[\"256\",{\"1\":{\"291\":1}}],[\"254\",{\"1\":{\"279\":1}}],[\"25\",{\"1\":{\"44\":1,\"151\":1}}],[\"2\",{\"0\":{\"18\":1,\"32\":1},\"1\":{\"47\":1,\"49\":2,\"64\":1,\"67\":2,\"91\":2,\"107\":3,\"142\":2,\"158\":1,\"187\":2,\"207\":1,\"235\":1,\"248\":1,\"253\":2,\"254\":1,\"255\":1,\"260\":3,\"261\":2,\"263\":1,\"267\":1,\"273\":1,\"281\":1,\"283\":1}}],[\"不为空调用\",{\"1\":{\"287\":1}}],[\"不为空返回value\",{\"1\":{\"266\":1}}],[\"不学习终究会被淘汰\",{\"1\":{\"278\":1}}],[\"不使用flatmap的代码\",{\"1\":{\"264\":1}}],[\"不改变数据源\",{\"1\":{\"262\":1}}],[\"不保存数据\",{\"1\":{\"262\":1}}],[\"不同的是它可以检索\",{\"1\":{\"257\":1}}],[\"不要因为\",{\"1\":{\"248\":1}}],[\"不然的话\",{\"1\":{\"248\":1}}],[\"不然会报\",{\"1\":{\"145\":1,\"283\":1}}],[\"不受\",{\"1\":{\"235\":1}}],[\"不正确使用\",{\"1\":{\"235\":1}}],[\"不安全操作的方法\",{\"1\":{\"235\":1}}],[\"不应该在程序中继续使用诸如new\",{\"1\":{\"207\":1}}],[\"不难发现\",{\"1\":{\"207\":1}}],[\"不断的完善和修复问题\",{\"1\":{\"194\":1}}],[\"不引入换行符\",{\"1\":{\"188\":1}}],[\"不用考虑后续\",{\"1\":{\"179\":1}}],[\"不能断开\",{\"1\":{\"260\":1}}],[\"不能被修改\",{\"1\":{\"256\":1}}],[\"不能在非静态的内部类中定义\",{\"1\":{\"211\":1}}],[\"不能在\",{\"1\":{\"156\":1}}],[\"不能用作方法参数\",{\"1\":{\"156\":1}}],[\"不能进行添加\",{\"1\":{\"145\":1,\"283\":1}}],[\"不能声明数组\",{\"1\":{\"142\":1}}],[\"不能声明为\",{\"1\":{\"142\":2}}],[\"不能错字的原则来搜索\",{\"1\":{\"17\":1}}],[\"不配置的情况下每次debug会进入org\",{\"1\":{\"124\":1}}],[\"不再包装成嵌套的optional\",{\"1\":{\"264\":1}}],[\"不再容易产生歧义\",{\"1\":{\"207\":1}}],[\"不再执行之后的代码\",{\"1\":{\"120\":1}}],[\"不再怕对\",{\"1\":{\"61\":1}}],[\"不会进入官方类库的方法\",{\"1\":{\"115\":1}}],[\"不会用\",{\"1\":{\"61\":1}}],[\"不需要增加参数来启用\",{\"1\":{\"185\":1}}],[\"不需要多写\",{\"1\":{\"168\":1,\"185\":1}}],[\"不需要在磁盘上生成\",{\"1\":{\"157\":1}}],[\"不需要后台服务\",{\"1\":{\"49\":1}}],[\"不需要现场下载编译源码\",{\"1\":{\"10\":1}}],[\"不过只对\",{\"1\":{\"214\":1}}],[\"不过\",{\"1\":{\"155\":1,\"188\":1,\"194\":1,\"195\":1,\"199\":1,\"201\":1,\"217\":1,\"234\":1}}],[\"不过我们可以借助一些网站来进行搜索\",{\"1\":{\"38\":1}}],[\"不过如果你想要主动检查更新\",{\"1\":{\"28\":1}}],[\"关于\",{\"1\":{\"289\":1}}],[\"关于作用域值的详细介绍\",{\"1\":{\"240\":1}}],[\"关于这个打包工具的实际使用\",{\"1\":{\"208\":1}}],[\"关于预览特性\",{\"0\":{\"179\":1}}],[\"关闭标签\",{\"1\":{\"140\":1}}],[\"关键字来传递方法或者构造函数引用\",{\"1\":{\"255\":1}}],[\"关键字对类进行修饰\",{\"1\":{\"199\":1}}],[\"关键字可以简化\",{\"1\":{\"187\":1}}],[\"关键字到\",{\"0\":{\"177\":1}}],[\"关键字存在几个限制\",{\"1\":{\"156\":1}}],[\"关键字只能用于带有构造器的局部变量和\",{\"1\":{\"142\":1}}],[\"关键字声明局部变量\",{\"1\":{\"142\":1}}],[\"关键字\",{\"0\":{\"187\":1},\"1\":{\"61\":1,\"62\":1,\"141\":1,\"142\":1,\"211\":1}}],[\"关键词精准控制哪些类可以对外开放使用\",{\"1\":{\"281\":1}}],[\"关键词\",{\"1\":{\"17\":1}}],[\"关机\",{\"0\":{\"7\":1}}],[\"你们觉得呢\",{\"1\":{\"263\":1}}],[\"你仍然可以使用\",{\"1\":{\"201\":1}}],[\"你只需要执行\",{\"1\":{\"40\":1}}],[\"你只需要在界面的输入框中输入你要搜索的命令\",{\"1\":{\"18\":1}}],[\"你也可以访问\",{\"1\":{\"38\":1}}],[\"你也可以理解为有图形化界面的应用\",{\"1\":{\"10\":1}}],[\"你会得到一个\",{\"1\":{\"37\":1}}],[\"你首先需要在之前的电脑中执行\",{\"1\":{\"37\":1}}],[\"你需要先添加对应的tap\",{\"1\":{\"41\":1}}],[\"你需要先添加对应的\",{\"1\":{\"32\":1}}],[\"你就可以看到\",{\"1\":{\"18\":1}}],[\"你可以将一个模块看作是一组唯一命名\",{\"1\":{\"281\":1}}],[\"你可以将光标定位到你需要查看的那一行\",{\"1\":{\"115\":1}}],[\"你可以在\",{\"1\":{\"279\":1}}],[\"你可以对\",{\"1\":{\"210\":1}}],[\"你可以通过下面的参数启动\",{\"1\":{\"194\":1}}],[\"你可以运行\",{\"1\":{\"49\":1}}],[\"你可以看到当前所有已经安装的软件\",{\"1\":{\"40\":1}}],[\"你可以看到所有被收录的页面\",{\"1\":{\"38\":1}}],[\"你可以使用\",{\"1\":{\"23\":1,\"228\":1}}],[\"你可以使用网页端的搜索工具来辅助你进行搜索\",{\"1\":{\"18\":1}}],[\"你可以先使用\",{\"1\":{\"20\":1}}],[\"你可以执行命令\",{\"1\":{\"22\":1}}],[\"你可以执行\",{\"1\":{\"19\":1,\"21\":1,\"27\":1}}],[\"你可以找到\",{\"1\":{\"18\":1}}],[\"你可以直接使用\",{\"1\":{\"17\":1,\"31\":1}}],[\"这篇文章\",{\"1\":{\"289\":1}}],[\"这就涉及到了时间的国际化\",{\"1\":{\"276\":1}}],[\"这就是我们上文提到的函数式接口\",{\"1\":{\"253\":1}}],[\"这就意味着其构造函数在将来会被删除\",{\"1\":{\"207\":1}}],[\"这时就必须重写def\",{\"1\":{\"248\":1}}],[\"这也留有一点遗憾\",{\"1\":{\"248\":1}}],[\"这简化了跨线程共享不可变数据\",{\"1\":{\"245\":1}}],[\"这次的改进包括\",{\"1\":{\"241\":1,\"243\":1}}],[\"这次更新共带来\",{\"1\":{\"216\":1}}],[\"这段代码获取了\",{\"1\":{\"235\":1}}],[\"这项改动不会改动相关\",{\"1\":{\"230\":1}}],[\"这\",{\"1\":{\"217\":1,\"234\":1,\"248\":1}}],[\"这几个我觉得比较重要的新特性进行详细介绍\",{\"1\":{\"216\":1,\"226\":1}}],[\"这里period\",{\"1\":{\"273\":1}}],[\"这里可以简单的理解它是通过线程池来实现的\",{\"1\":{\"261\":1}}],[\"这里的\",{\"1\":{\"261\":1}}],[\"这里就不带大家看\",{\"1\":{\"274\":1}}],[\"这里就不细提了\",{\"1\":{\"242\":1,\"244\":1}}],[\"这里就不再做额外的介绍了\",{\"1\":{\"203\":1,\"213\":1,\"221\":1,\"224\":1,\"225\":1,\"233\":1,\"237\":1,\"243\":1}}],[\"这里只对\",{\"1\":{\"216\":1,\"226\":1,\"234\":1}}],[\"这将改善最终用户在安装应用程序时的体验\",{\"1\":{\"208\":1}}],[\"这些都是开发当中比较常用的特性\",{\"1\":{\"278\":1}}],[\"这些单位都在\",{\"1\":{\"273\":1}}],[\"这些\",{\"1\":{\"214\":1}}],[\"这些格式包括\",{\"1\":{\"208\":1}}],[\"这些包装类型已经被指定为同\",{\"1\":{\"207\":1}}],[\"这些计算在运行时可靠地编译为支持的\",{\"1\":{\"203\":1,\"225\":1}}],[\"这种方式生成的效果更好且使用起来更方便一些\",{\"1\":{\"229\":1}}],[\"这种方式生成的效果比较一般\",{\"1\":{\"229\":1}}],[\"这种方式不太灵活\",{\"1\":{\"199\":1}}],[\"这种方式使得停止单个线程变成可能\",{\"1\":{\"149\":1}}],[\"这意味着开发中不需要改动反射相关代码\",{\"1\":{\"230\":1}}],[\"这意味着该功能可能以其他形式存在或在将来的\",{\"1\":{\"179\":1}}],[\"这意味着我们可以运行单一文件的\",{\"1\":{\"157\":1}}],[\"这提高了应用程序类数据共享\",{\"1\":{\"174\":1}}],[\"这样的话\",{\"1\":{\"285\":1}}],[\"这样的编码方式\",{\"1\":{\"207\":1}}],[\"这样可以极大的减少\",{\"1\":{\"281\":1}}],[\"这样貌似就没处理npe问题\",{\"1\":{\"264\":1}}],[\"这样就会涉及到线程安全\",{\"1\":{\"261\":1}}],[\"这样就可以有方法体\",{\"1\":{\"248\":1}}],[\"这样这个类就只能被指定的类继承\",{\"1\":{\"199\":1}}],[\"这样它们将可以被其他进程重用\",{\"1\":{\"171\":1}}],[\"这样所有人都能使用该功能了\",{\"1\":{\"158\":1}}],[\"这样才能更好的写代码\",{\"1\":{\"32\":1}}],[\"这是对java\",{\"1\":{\"269\":1}}],[\"这是对数组元素的简单标量计算\",{\"1\":{\"231\":1}}],[\"这是使用\",{\"1\":{\"231\":1}}],[\"这是因为每次的count++操作\",{\"1\":{\"207\":1}}],[\"这是许多新人经常犯错的一个点\",{\"1\":{\"207\":1}}],[\"这是一个已弃用的\",{\"1\":{\"201\":1}}],[\"这是一个预览功能\",{\"1\":{\"179\":1}}],[\"这是据\",{\"1\":{\"151\":1}}],[\"这是很重要的一个版本\",{\"1\":{\"151\":1}}],[\"这可能会导致垃圾回收期在无法回收内存的时候触发\",{\"1\":{\"144\":1}}],[\"这一点就颠覆了之前的认知\",{\"1\":{\"247\":1}}],[\"这一支持将会持续至\",{\"1\":{\"151\":1}}],[\"这一行\",{\"1\":{\"137\":1,\"138\":1}}],[\"这一神器\",{\"1\":{\"8\":1}}],[\"这个服务器不支持\",{\"1\":{\"228\":1}}],[\"这个打包工具允许打包自包含的\",{\"1\":{\"208\":1}}],[\"这个提案还简化了元空间的代码以降低维护成本\",{\"1\":{\"206\":1}}],[\"这个类具有两个特征\",{\"1\":{\"187\":1}}],[\"这个东西\",{\"1\":{\"107\":1}}],[\"这个情况是mysql还没有被启动\",{\"1\":{\"49\":1}}],[\"这个时候\",{\"1\":{\"23\":1,\"29\":1}}],[\"这个时候你有两种方式来完成搜索\",{\"1\":{\"16\":1}}],[\"软件名\",{\"1\":{\"15\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"31\":1}}],[\"lwp\",{\"1\":{\"236\":1,\"244\":1}}],[\"l128x256mixrandom\",{\"1\":{\"217\":3}}],[\"lts\",{\"1\":{\"202\":1,\"216\":2,\"239\":1}}],[\"lru\",{\"1\":{\"171\":1}}],[\"l\",{\"1\":{\"140\":1,\"219\":4,\"242\":4}}],[\"lastinmonth\",{\"1\":{\"274\":1}}],[\"lastmondayof2021\",{\"1\":{\"274\":1}}],[\"lastday\",{\"1\":{\"274\":1}}],[\"lastdayofyear\",{\"1\":{\"274\":1}}],[\"lastdayofmonth\",{\"1\":{\"274\":1}}],[\"lastdayofthismonth\",{\"1\":{\"274\":2}}],[\"last\",{\"1\":{\"274\":4}}],[\"laziness\",{\"1\":{\"261\":1}}],[\"lamndafor\",{\"1\":{\"254\":1}}],[\"lambdaclasssuper\",{\"1\":{\"255\":3}}],[\"lambdaclass\",{\"1\":{\"253\":1,\"255\":6}}],[\"lambdainterfacedemo\",{\"1\":{\"253\":2}}],[\"lambdainterface\",{\"1\":{\"253\":2,\"255\":8}}],[\"lambda\",{\"0\":{\"156\":1,\"250\":1,\"252\":1},\"1\":{\"151\":1,\"156\":2,\"168\":1,\"185\":1,\"240\":1,\"247\":1,\"249\":1,\"250\":3,\"252\":1,\"253\":5,\"254\":1,\"256\":1,\"257\":1,\"278\":1}}],[\"lambda表达式\",{\"1\":{\"142\":1}}],[\"language\",{\"1\":{\"177\":1,\"215\":1}}],[\"lang\",{\"1\":{\"145\":1,\"184\":2,\"207\":2,\"230\":1,\"260\":1,\"263\":1,\"283\":1,\"288\":1,\"290\":2,\"291\":1}}],[\"lanyus\",{\"1\":{\"112\":1}}],[\"launcher\",{\"1\":{\"61\":1}}],[\"launchpad\",{\"1\":{\"40\":1,\"41\":1}}],[\"launchrocket\",{\"0\":{\"41\":1},\"1\":{\"39\":1,\"41\":3}}],[\"length\",{\"1\":{\"91\":1,\"187\":7,\"192\":1,\"231\":4,\"235\":4}}],[\"leaks\",{\"1\":{\"61\":1}}],[\"lookup\",{\"1\":{\"235\":1,\"290\":1}}],[\"looks\",{\"1\":{\"185\":1}}],[\"loopbound\",{\"1\":{\"231\":1}}],[\"loopback\",{\"1\":{\"228\":1}}],[\"locking\",{\"1\":{\"201\":1}}],[\"localzoned\",{\"1\":{\"276\":2}}],[\"localtime\",{\"1\":{\"270\":1,\"271\":2,\"272\":4,\"275\":1}}],[\"localdate\",{\"1\":{\"270\":1,\"271\":2,\"272\":4,\"273\":11,\"274\":8,\"275\":1}}],[\"localdatetime的\",{\"1\":{\"272\":1}}],[\"localdatetime\",{\"1\":{\"207\":1,\"270\":1,\"271\":2,\"272\":3,\"275\":1,\"276\":7}}],[\"localhost已被删除\",{\"1\":{\"49\":1}}],[\"localhost\",{\"1\":{\"49\":4}}],[\"locale\",{\"1\":{\"46\":1,\"164\":1}}],[\"local\",{\"1\":{\"14\":1,\"46\":2,\"48\":1,\"49\":4,\"133\":1,\"137\":1}}],[\"load\",{\"1\":{\"155\":1}}],[\"long\",{\"1\":{\"151\":1,\"163\":3,\"219\":4,\"242\":4,\"259\":3,\"260\":1,\"273\":1}}],[\"loggerfinder\",{\"1\":{\"291\":3}}],[\"log\",{\"1\":{\"61\":1,\"95\":1}}],[\"lombok\",{\"1\":{\"61\":1,\"187\":1}}],[\"limit\",{\"1\":{\"259\":1,\"260\":6,\"287\":1}}],[\"lightweight\",{\"1\":{\"236\":1,\"244\":1}}],[\"like\",{\"1\":{\"185\":1}}],[\"likely\",{\"1\":{\"107\":1}}],[\"live\",{\"1\":{\"90\":1,\"91\":2,\"92\":1}}],[\"lib下匹配的gradle版本\",{\"1\":{\"72\":1}}],[\"lib\",{\"1\":{\"45\":1,\"214\":2}}],[\"libexec\",{\"1\":{\"45\":2,\"46\":1}}],[\"library\",{\"1\":{\"14\":1,\"35\":1,\"45\":4,\"46\":1,\"53\":1,\"107\":1}}],[\"listofarrays\",{\"1\":{\"264\":3}}],[\"listener\",{\"1\":{\"253\":1}}],[\"list<string\",{\"1\":{\"264\":2}}],[\"list<string>\",{\"1\":{\"254\":1,\"260\":3,\"261\":1,\"264\":1}}],[\"list<integer>\",{\"1\":{\"253\":1,\"260\":1,\"261\":1,\"287\":2}}],[\"list<e>\",{\"1\":{\"145\":1}}],[\"listcopy\",{\"1\":{\"145\":1}}],[\"list\",{\"1\":{\"19\":1,\"25\":1,\"26\":1,\"61\":1,\"142\":5,\"145\":4,\"283\":1,\"287\":2}}],[\"linker\",{\"1\":{\"235\":6}}],[\"lines\",{\"1\":{\"153\":2,\"229\":1}}],[\"line\",{\"1\":{\"13\":1,\"179\":1}}],[\"linux\",{\"0\":{\"6\":1},\"1\":{\"8\":2,\"9\":2,\"10\":1,\"148\":1,\"155\":2,\"190\":2,\"208\":1,\"214\":8,\"234\":1}}],[\"并不是总天数\",{\"1\":{\"273\":1}}],[\"并不是为了取代\",{\"1\":{\"280\":1}}],[\"并不是为了取代java\",{\"1\":{\"238\":1,\"245\":1}}],[\"并不是为了要替代abstract\",{\"1\":{\"248\":1}}],[\"并不能直接用\",{\"1\":{\"261\":1}}],[\"并不立刻执行\",{\"1\":{\"261\":1}}],[\"并不会改变\",{\"1\":{\"142\":1}}],[\"并简化了\",{\"1\":{\"208\":1}}],[\"并发线程堆栈处理\",{\"0\":{\"205\":1}}],[\"并提供在\",{\"1\":{\"204\":1}}],[\"并作为孵化\",{\"1\":{\"203\":1,\"225\":1,\"231\":1,\"237\":1,\"246\":1}}],[\"并没有对此特性进行调整\",{\"1\":{\"200\":1}}],[\"并没有提供搜索的命令\",{\"1\":{\"38\":1}}],[\"并打上了\",{\"1\":{\"187\":1}}],[\"并按照大小进行组织\",{\"1\":{\"171\":1}}],[\"并返回第一个不匹配字符的位置\",{\"1\":{\"163\":1}}],[\"并行流\",{\"1\":{\"258\":1}}],[\"并行\",{\"0\":{\"144\":1},\"1\":{\"141\":1,\"261\":1}}],[\"并恢复您之前的bash或zsh配置\",{\"1\":{\"135\":1}}],[\"并且提供了一系列标准的内存屏障操作\",{\"1\":{\"290\":1}}],[\"并且可以有方法体\",{\"1\":{\"247\":1}}],[\"并且可以从命令行直接调用\",{\"1\":{\"208\":1}}],[\"并且子任务必须在主任务继续之前完成\",{\"1\":{\"238\":1,\"245\":1}}],[\"并且十分的简单\",{\"1\":{\"214\":1}}],[\"并且能够通过\",{\"1\":{\"158\":1}}],[\"并且能和\",{\"1\":{\"157\":1}}],[\"并且现在完全支持异步非阻塞\",{\"1\":{\"152\":1}}],[\"并且\",{\"1\":{\"145\":1,\"152\":1,\"172\":1,\"206\":1,\"207\":1,\"235\":1,\"248\":1}}],[\"并且必须是uuid才能通过验证\",{\"1\":{\"112\":1}}],[\"并且反编译代码查看\",{\"1\":{\"61\":1}}],[\"并解决执行绪的问题\",{\"1\":{\"61\":1}}],[\"并可以在\",{\"1\":{\"40\":1}}],[\"并执行\",{\"1\":{\"37\":1}}],[\"并进行修复\",{\"1\":{\"27\":1}}],[\"并设置开机自动运行\",{\"1\":{\"25\":1}}],[\"并将其文件软链接至\",{\"1\":{\"14\":1}}],[\"并基于\",{\"1\":{\"9\":1}}],[\"卸载oh\",{\"0\":{\"135\":1}}],[\"卸载某个软件\",{\"1\":{\"26\":1}}],[\"卸载某个已经安装的包\",{\"0\":{\"21\":1}}],[\"卸载\",{\"1\":{\"14\":1,\"26\":1}}],[\"~\",{\"1\":{\"14\":4,\"45\":1,\"46\":1,\"48\":1,\"133\":1,\"134\":4,\"137\":3}}],[\"util\",{\"1\":{\"145\":1,\"172\":1,\"207\":1,\"238\":1,\"245\":1,\"247\":1,\"249\":1,\"257\":1,\"259\":1,\"269\":3,\"270\":1,\"276\":2,\"289\":1,\"290\":1}}],[\"utf\",{\"0\":{\"227\":1},\"1\":{\"46\":1,\"73\":1,\"195\":1,\"226\":2,\"227\":1}}],[\"unaryoperator<t>\",{\"1\":{\"287\":2}}],[\"unknown\",{\"1\":{\"219\":1,\"242\":1,\"264\":3}}],[\"uniquely\",{\"1\":{\"281\":1}}],[\"unix\",{\"1\":{\"214\":8}}],[\"uninstall\",{\"1\":{\"14\":1,\"21\":1,\"26\":2}}],[\"unless\",{\"1\":{\"211\":1}}],[\"unsafe\",{\"1\":{\"209\":1,\"212\":1,\"235\":3,\"290\":1}}],[\"unsupportedoperationexception\",{\"1\":{\"145\":1,\"283\":1}}],[\"uuid在线生成\",{\"1\":{\"112\":1}}],[\"uuid可以自己生成\",{\"1\":{\"112\":1}}],[\"uuid\",{\"1\":{\"112\":1}}],[\"uml\",{\"1\":{\"62\":1}}],[\"ui\",{\"1\":{\"61\":1}}],[\"u\",{\"1\":{\"61\":1,\"140\":1}}],[\"uri\",{\"1\":{\"152\":2}}],[\"uroot\",{\"1\":{\"49\":1}}],[\"url\",{\"1\":{\"14\":2,\"35\":2,\"36\":2,\"61\":1,\"142\":1,\"228\":1}}],[\"upon\",{\"1\":{\"260\":1}}],[\"upperbound\",{\"1\":{\"231\":2}}],[\"upperlowercapitalize\",{\"1\":{\"61\":1}}],[\"upgrade\",{\"1\":{\"20\":1,\"26\":2}}],[\"upgrade`\",{\"1\":{\"20\":1}}],[\"update\",{\"1\":{\"14\":1,\"26\":1,\"28\":1,\"49\":1,\"195\":1,\"292\":1}}],[\"using\",{\"1\":{\"253\":1,\"264\":5}}],[\"us\",{\"1\":{\"164\":1}}],[\"useplainsocketimpl=true\",{\"1\":{\"172\":1}}],[\"useconcmarksweepgc\",{\"1\":{\"107\":1}}],[\"use\",{\"1\":{\"49\":1,\"210\":2,\"219\":2,\"228\":1,\"229\":1,\"242\":2}}],[\"userid\",{\"1\":{\"264\":3}}],[\"users\",{\"1\":{\"53\":2,\"107\":1,\"109\":1,\"110\":1,\"125\":1,\"137\":1,\"138\":1}}],[\"user2\",{\"1\":{\"49\":1}}],[\"user1\",{\"1\":{\"49\":1}}],[\"user和auditor的帐户\",{\"1\":{\"49\":1}}],[\"user\",{\"0\":{\"72\":1},\"1\":{\"29\":1,\"49\":7,\"72\":2,\"97\":2,\"264\":2}}],[\"username\",{\"1\":{\"3\":2}}],[\"ustc\",{\"1\":{\"14\":4,\"35\":2}}],[\"usr\",{\"1\":{\"3\":1,\"14\":1,\"45\":2,\"46\":2,\"48\":1,\"49\":3,\"133\":1,\"137\":1}}],[\"$zsh\",{\"1\":{\"138\":1}}],[\"$doc$\",{\"1\":{\"100\":2}}],[\"$date\",{\"1\":{\"97\":1}}],[\"$date$\",{\"1\":{\"91\":2,\"92\":2,\"96\":2,\"100\":2}}],[\"$time\",{\"1\":{\"97\":1}}],[\"$time$\",{\"1\":{\"91\":2,\"92\":2,\"96\":2}}],[\"$end\",{\"1\":{\"97\":1}}],[\"$end$\",{\"1\":{\"91\":1,\"92\":1,\"95\":1,\"96\":1}}],[\"$return$\",{\"1\":{\"91\":2,\"100\":1}}],[\"$params$\",{\"1\":{\"100\":1}}],[\"$param$\",{\"1\":{\"91\":2}}],[\"$path\",{\"1\":{\"45\":1,\"46\":1,\"48\":1,\"49\":1}}],[\"$java\",{\"1\":{\"45\":2}}],[\"$\",{\"1\":{\"14\":4,\"35\":2,\"36\":2,\"91\":2,\"96\":2,\"97\":6,\"133\":3,\"137\":1,\"174\":2,\"194\":1,\"228\":1}}],[\"$shell\",{\"1\":{\"13\":1,\"132\":1}}],[\"拉脚本\",{\"1\":{\"14\":1}}],[\"苹果自己研发的cpu\",{\"1\":{\"13\":1}}],[\"描述\",{\"1\":{\"10\":1,\"58\":1,\"59\":1}}],[\"npe\",{\"1\":{\"263\":11,\"268\":1}}],[\"npm\",{\"1\":{\"3\":1,\"5\":1,\"48\":6}}],[\"n元素组成的流\",{\"1\":{\"259\":1}}],[\"n元素后\",{\"1\":{\"259\":1}}],[\"nio\",{\"1\":{\"214\":1}}],[\"niosocketimpl\",{\"1\":{\"172\":2}}],[\"nc\",{\"1\":{\"153\":2}}],[\"nb\",{\"1\":{\"153\":2}}],[\"next\",{\"1\":{\"287\":1}}],[\"nextday\",{\"1\":{\"274\":1}}],[\"nextint\",{\"1\":{\"217\":1}}],[\"neg\",{\"1\":{\"231\":1}}],[\"net\",{\"1\":{\"152\":1,\"172\":1,\"181\":1,\"232\":1,\"279\":1}}],[\"newformat\",{\"1\":{\"271\":1}}],[\"newfeature\",{\"1\":{\"181\":1}}],[\"newfilesystem\",{\"1\":{\"173\":3}}],[\"newhttpclient\",{\"1\":{\"152\":1}}],[\"newbuilder\",{\"1\":{\"152\":1}}],[\"new\",{\"0\":{\"299\":1},\"1\":{\"62\":1,\"64\":2,\"67\":2,\"69\":2,\"72\":2,\"75\":4,\"82\":2,\"84\":2,\"86\":2,\"97\":2,\"142\":3,\"145\":1,\"146\":1,\"181\":5,\"207\":1,\"210\":1,\"216\":1,\"219\":3,\"235\":1,\"238\":1,\"240\":1,\"242\":2,\"245\":1,\"248\":1,\"253\":6,\"254\":1,\"255\":2,\"260\":1,\"261\":1,\"264\":7,\"266\":1,\"271\":4,\"272\":2,\"273\":2,\"274\":1,\"276\":4,\"286\":8,\"292\":2}}],[\"no\",{\"1\":{\"266\":1}}],[\"nosuchelementexception\",{\"1\":{\"266\":1}}],[\"now\",{\"1\":{\"253\":1,\"271\":7,\"273\":1,\"274\":1,\"276\":1}}],[\"non\",{\"1\":{\"199\":2,\"211\":1}}],[\"notes\",{\"1\":{\"159\":1,\"215\":1,\"292\":1}}],[\"not\",{\"1\":{\"146\":1,\"150\":1,\"159\":1,\"179\":2,\"181\":1,\"201\":1,\"215\":1,\"225\":1,\"233\":1,\"238\":1,\"246\":1,\"278\":1,\"292\":1}}],[\"node在zsh环境变量配置\",{\"1\":{\"48\":1}}],[\"node\",{\"1\":{\"48\":3}}],[\"node的安装\",{\"0\":{\"48\":1}}],[\"n+\",{\"1\":{\"142\":1}}],[\"num\",{\"1\":{\"261\":1}}],[\"numberformat\",{\"1\":{\"164\":4}}],[\"numbers\",{\"1\":{\"142\":1,\"261\":2}}],[\"number\",{\"1\":{\"139\":1,\"216\":1,\"217\":1,\"260\":2}}],[\"nullstream\",{\"1\":{\"287\":2}}],[\"nullpointerexample\",{\"1\":{\"184\":2}}],[\"nullpointerexception\",{\"1\":{\"184\":2,\"263\":1,\"264\":3}}],[\"null\",{\"0\":{\"265\":1},\"1\":{\"58\":1,\"142\":1,\"184\":1,\"219\":3,\"235\":1,\"255\":3,\"263\":5,\"264\":3,\"265\":2,\"266\":7,\"287\":1}}],[\"n\",{\"1\":{\"91\":1,\"142\":1,\"176\":7,\"259\":1}}],[\"nyan\",{\"1\":{\"62\":1}}],[\"nashorn\",{\"1\":{\"201\":3,\"291\":3}}],[\"navigator\",{\"1\":{\"61\":1}}],[\"named\",{\"1\":{\"281\":1}}],[\"name`\",{\"1\":{\"176\":4}}],[\"name\",{\"1\":{\"46\":1,\"112\":1,\"176\":2,\"177\":3,\"281\":2}}],[\"nativelinker\",{\"1\":{\"235\":1}}],[\"native\",{\"1\":{\"10\":1,\"235\":1}}],[\"nginx\",{\"1\":{\"25\":1}}],[\"下一个\",{\"1\":{\"239\":1}}],[\"下一个非常出名的\",{\"1\":{\"31\":1}}],[\"下的deb和rpm\",{\"1\":{\"190\":1}}],[\"下的包管理器\",{\"1\":{\"10\":1}}],[\"下载插件\",{\"1\":{\"138\":1}}],[\"下载主题\",{\"1\":{\"128\":1}}],[\"下载的是压缩文件\",{\"1\":{\"127\":1}}],[\"下载及其安装\",{\"1\":{\"127\":1}}],[\"下载eclipse\",{\"1\":{\"80\":1}}],[\"下载intellij\",{\"1\":{\"79\":1}}],[\"下载源\",{\"1\":{\"10\":1}}],[\"下面仅以一周后日期为例\",{\"1\":{\"273\":1}}],[\"下面我们通过源码逐步揭开\",{\"1\":{\"263\":1}}],[\"下面我们通过代码来体验一下并行流的多线程执行\",{\"1\":{\"261\":1}}],[\"下面是一个对比的示例代码\",{\"1\":{\"264\":1}}],[\"下面是\",{\"1\":{\"235\":1}}],[\"下面两者是等价的\",{\"1\":{\"156\":1}}],[\"下面这张图是\",{\"1\":{\"151\":1,\"216\":1}}],[\"下面\",{\"1\":{\"61\":1}}],[\"下为\",{\"1\":{\"61\":1}}],[\"是从\",{\"1\":{\"291\":1}}],[\"是随\",{\"1\":{\"281\":1}}],[\"是否为\",{\"0\":{\"265\":1}}],[\"是不是简洁了很多呢\",{\"1\":{\"263\":1}}],[\"是程序员的基本修养\",{\"1\":{\"263\":1}}],[\"是继泛型\",{\"1\":{\"250\":1}}],[\"是普通实例方法\",{\"1\":{\"248\":1}}],[\"是第四次预览了\",{\"1\":{\"242\":1}}],[\"是structuredtaskscope\",{\"1\":{\"238\":1,\"245\":1}}],[\"是基于\",{\"1\":{\"214\":1,\"261\":1}}],[\"是对\",{\"1\":{\"172\":1}}],[\"是以一种低延时的垃圾回收器来设计的\",{\"1\":{\"144\":1}}],[\"是一个长期支持\",{\"1\":{\"216\":1}}],[\"是一个独立的\",{\"1\":{\"214\":1}}],[\"是一个可伸缩的\",{\"1\":{\"155\":1}}],[\"是一个基于\",{\"1\":{\"148\":1}}],[\"是一个非常方便的包管理器工具\",{\"1\":{\"9\":1}}],[\"是一门静态类型语言的事实\",{\"1\":{\"142\":1}}],[\"是这样的实现的\",{\"1\":{\"263\":1}}],[\"是这样的\",{\"1\":{\"21\":1}}],[\"是\",{\"1\":{\"10\":1,\"31\":1,\"40\":1,\"148\":1,\"199\":1,\"216\":1,\"236\":1,\"244\":1,\"280\":1}}],[\"含义\",{\"1\":{\"10\":1}}],[\"词汇\",{\"1\":{\"10\":1}}],[\"我并不这么认为\",{\"1\":{\"263\":1}}],[\"我有详细介绍到外部函数和内存\",{\"1\":{\"224\":1,\"233\":1,\"243\":1}}],[\"我有详细介绍到密封类\",{\"1\":{\"213\":1,\"221\":1}}],[\"我有详细介绍到向量\",{\"1\":{\"203\":1,\"225\":1,\"237\":1}}],[\"我是字符串\",{\"1\":{\"169\":2}}],[\"我选择的事默认的\",{\"1\":{\"129\":1}}],[\"我的问题是我把破解补丁文件夹直接删除了\",{\"1\":{\"107\":1}}],[\"我这里都未配置使用的ide默认配置\",{\"1\":{\"78\":1}}],[\"我这里默认配置即可\",{\"1\":{\"72\":1}}],[\"我使用的是第二个\",{\"1\":{\"44\":1}}],[\"我先为你介绍一下\",{\"1\":{\"10\":1}}],[\"我们只能在\",{\"1\":{\"286\":1}}],[\"我们梳理总结的\",{\"1\":{\"278\":1}}],[\"我们从常用的时间实例来对比\",{\"1\":{\"269\":1}}],[\"我们先看一下它的含义和其他创建\",{\"1\":{\"264\":1}}],[\"我们下面分解一下\",{\"1\":{\"261\":1}}],[\"我们自定义一个函数式接口\",{\"1\":{\"253\":1}}],[\"我们发现这些匿名内部类只重写了接口的一个方法\",{\"1\":{\"253\":1}}],[\"我们用常用的实例来感受\",{\"1\":{\"252\":1}}],[\"我们来看一个实际的例子\",{\"1\":{\"248\":1}}],[\"我们需要显示地对对象进行类型转换\",{\"1\":{\"169\":1}}],[\"我们的电脑中会有大量的软件\",{\"1\":{\"37\":1}}],[\"我们可以通过添加自己的\",{\"1\":{\"291\":1}}],[\"我们可以通过\",{\"1\":{\"281\":1}}],[\"我们可以借助\",{\"1\":{\"217\":1}}],[\"我们可以使用final\",{\"1\":{\"199\":1}}],[\"我们可以很轻松的切换源\",{\"1\":{\"34\":1}}],[\"我们可以根据自己的需求\",{\"1\":{\"20\":1}}],[\"我们就可以安装一些有图形化界面的软件了\",{\"1\":{\"31\":1}}],[\"我们就要用到\",{\"1\":{\"29\":1}}],[\"我们一般会添加几个常用的\",{\"1\":{\"30\":1}}],[\"我们安装的软件并不会自动更新\",{\"1\":{\"20\":1}}],[\"我们不知道自己想要的软件是否有\",{\"1\":{\"16\":1}}],[\"我们要安装\",{\"1\":{\"15\":1}}],[\"我们在后续会经常用到\",{\"1\":{\"10\":1}}],[\"我们却可以使用\",{\"1\":{\"8\":1}}],[\"我们有\",{\"1\":{\"8\":1}}],[\"在类java\",{\"1\":{\"291\":1}}],[\"在运行时只有一个系统范围的\",{\"1\":{\"291\":1}}],[\"在安全性\",{\"1\":{\"290\":1}}],[\"在安全性和性能方面也做了很多提升\",{\"1\":{\"158\":1}}],[\"在引入了模块系统之后\",{\"1\":{\"281\":1}}],[\"在处理简单的小逻辑\",{\"1\":{\"280\":1}}],[\"在日常工作中遇到\",{\"1\":{\"277\":1}}],[\"在新特性中引入了\",{\"1\":{\"276\":1}}],[\"在stream和optional中正确使用flatmap可以减少很多不必要的代码\",{\"1\":{\"264\":1}}],[\"在optional里面\",{\"1\":{\"264\":1}}],[\"在实际应用场景中\",{\"1\":{\"264\":1}}],[\"在实际的使用中存在未能主动将未使用的内存释放给操作系统的问题\",{\"1\":{\"171\":1}}],[\"在阿里巴巴开发手册关于\",{\"1\":{\"263\":1}}],[\"在执行返回\",{\"1\":{\"261\":1}}],[\"在丢弃流的第一个\",{\"1\":{\"259\":1}}],[\"在其他包中也有函数式接口\",{\"1\":{\"249\":1}}],[\"在它们自己的线程中执行\",{\"1\":{\"238\":1,\"245\":1}}],[\"在堆外分配一个字符串\",{\"1\":{\"235\":1}}],[\"在c库路径上查找外部函数\",{\"1\":{\"235\":1}}],[\"在没有外部函数和内存\",{\"1\":{\"235\":1}}],[\"在启动虚拟机之前将\",{\"1\":{\"222\":1}}],[\"在启动时记录加载类的过程\",{\"1\":{\"147\":1}}],[\"在把版本管理迁移到\",{\"1\":{\"214\":1}}],[\"在此之前\",{\"1\":{\"214\":1}}],[\"在此大家需要注意\",{\"1\":{\"207\":1}}],[\"在未来版本中肯定会被删除\",{\"1\":{\"207\":1}}],[\"在未来的\",{\"1\":{\"200\":1}}],[\"在编译期为封闭类添加上许可的子类\",{\"1\":{\"199\":1}}],[\"在这基础上还附赠了equals\",{\"1\":{\"187\":1}}],[\"在这个页面\",{\"1\":{\"38\":1}}],[\"在考虑是否升级\",{\"1\":{\"180\":1}}],[\"在前两个版本中进行孵化的同时\",{\"1\":{\"152\":1}}],[\"在长期支持\",{\"1\":{\"151\":1}}],[\"在可选内存设备上进行堆内存分配\",{\"1\":{\"149\":1}}],[\"在现有的\",{\"1\":{\"147\":1}}],[\"在当时还是\",{\"1\":{\"147\":1}}],[\"在最后一行增加下面配置\",{\"1\":{\"137\":1}}],[\"在下拉列表中选择\",{\"1\":{\"128\":1}}],[\"在下载时速度可能会比较慢\",{\"1\":{\"34\":1}}],[\"在idea\",{\"1\":{\"125\":1}}],[\"在idea安装目录e\",{\"1\":{\"107\":1}}],[\"在方法上打断点时\",{\"1\":{\"118\":1}}],[\"在字段上打断点时\",{\"1\":{\"116\":1}}],[\"在菜单栏找到\",{\"1\":{\"101\":1}}],[\"在`git\",{\"1\":{\"65\":1}}],[\"在创建一个对象并赋值的时候\",{\"1\":{\"62\":1}}],[\"在一个团队中如果公司有规定格式化风格\",{\"1\":{\"61\":1}}],[\"在工具栏中\",{\"1\":{\"61\":1}}],[\"在弹出的页面中\",{\"1\":{\"38\":1}}],[\"在网站中输入你要安装的软件\",{\"1\":{\"38\":1}}],[\"在使用方法上和串行一样\",{\"1\":{\"261\":1}}],[\"在使用上\",{\"1\":{\"248\":1}}],[\"在使用时\",{\"1\":{\"32\":1,\"41\":1}}],[\"在使用\",{\"1\":{\"30\":1}}],[\"在添加\",{\"1\":{\"29\":1}}],[\"在\",{\"1\":{\"18\":1,\"40\":2,\"41\":1,\"45\":1,\"61\":3,\"128\":1,\"147\":1,\"148\":1,\"155\":1,\"165\":1,\"171\":3,\"172\":1,\"185\":1,\"194\":1,\"196\":1,\"199\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"208\":2,\"209\":1,\"211\":1,\"213\":2,\"216\":1,\"218\":1,\"221\":2,\"222\":1,\"224\":2,\"225\":1,\"226\":1,\"227\":1,\"229\":2,\"231\":1,\"233\":2,\"235\":1,\"237\":1,\"243\":2,\"248\":1,\"249\":1,\"280\":1,\"282\":1,\"284\":1,\"286\":3,\"289\":1}}],[\"在搜索时应当遵循宁可少字\",{\"1\":{\"17\":1}}],[\"在命令行中输入对应的软件就可以安装了\",{\"1\":{\"38\":1}}],[\"在命令行中\",{\"1\":{\"17\":1}}],[\"在macos\",{\"1\":{\"13\":1}}],[\"在正式介绍\",{\"1\":{\"10\":1}}],[\"在早期的\",{\"1\":{\"143\":1}}],[\"在早期\",{\"1\":{\"9\":1}}],[\"来表示\",{\"1\":{\"290\":1}}],[\"来表示带时区的时间\",{\"1\":{\"276\":1}}],[\"来决定什么时候结束迭代\",{\"1\":{\"287\":1}}],[\"来简化多线程编程\",{\"1\":{\"238\":1,\"245\":1}}],[\"来生成对应的伪随机数序列\",{\"1\":{\"217\":1}}],[\"来保证线程安全\",{\"1\":{\"207\":1}}],[\"来判断字符序列为空\",{\"1\":{\"192\":1}}],[\"来在\",{\"1\":{\"185\":1}}],[\"来写脚本程序的能力\",{\"1\":{\"157\":1}}],[\"来开始安装的过程\",{\"1\":{\"37\":1}}],[\"来开启\",{\"1\":{\"27\":1}}],[\"来安装特定的软件\",{\"1\":{\"31\":1}}],[\"来确保我们有足够的软件来安装\",{\"1\":{\"30\":1}}],[\"来唤起\",{\"1\":{\"28\":1}}],[\"来清理特定软件的旧版\",{\"1\":{\"23\":1}}],[\"来查看该软件的详情\",{\"1\":{\"22\":1}}],[\"来查看所有有更新版本的软件\",{\"1\":{\"20\":1}}],[\"来查看所有你已经安装的软件\",{\"1\":{\"19\":1}}],[\"来卸载一个特定的软件\",{\"1\":{\"21\":1}}],[\"来更新所有的软件\",{\"1\":{\"20\":1}}],[\"来搜索即可得到结果\",{\"1\":{\"17\":1}}],[\"来进行搜索\",{\"1\":{\"17\":1,\"18\":1}}],[\"来完成当前环境的导出\",{\"1\":{\"37\":1}}],[\"来完成软件的安装了\",{\"1\":{\"15\":1}}],[\"来完成类似的工作\",{\"1\":{\"8\":1}}],[\"来配置环境\",{\"1\":{\"9\":1}}],[\"帮助开发者在\",{\"1\":{\"9\":1}}],[\"帮助我们更好的使用\",{\"1\":{\"8\":1}}],[\"仅有\",{\"1\":{\"9\":1}}],[\"开始引入\",{\"1\":{\"291\":1}}],[\"开始引入的\",{\"1\":{\"201\":1,\"291\":1}}],[\"开始我们也提到\",{\"1\":{\"248\":1}}],[\"开始默认为\",{\"1\":{\"212\":1}}],[\"开始支持\",{\"1\":{\"190\":1}}],[\"开始允许开发者在\",{\"1\":{\"156\":1}}],[\"开始\",{\"1\":{\"144\":2,\"156\":1,\"210\":1,\"211\":1}}],[\"开机自动启动\",{\"1\":{\"49\":1}}],[\"开源的\",{\"1\":{\"165\":1}}],[\"开源中国的码云插件\",{\"1\":{\"61\":1}}],[\"开源\",{\"1\":{\"9\":1}}],[\"开源笔记\",{\"0\":{\"0\":1}}],[\"开发人员应该能够为特定任务绑定特定的原生库\",{\"1\":{\"214\":1}}],[\"开发人员应该使用新的\",{\"1\":{\"207\":1}}],[\"开发者看到了垃圾回收器的另外一种可能\",{\"1\":{\"194\":1}}],[\"开发者希望\",{\"1\":{\"142\":1}}],[\"开发规范\",{\"0\":{\"76\":1,\"77\":1}}],[\"开发\",{\"1\":{\"9\":1}}],[\"t>>\",{\"1\":{\"287\":1}}],[\"t>\",{\"1\":{\"259\":7,\"265\":1,\"266\":1,\"267\":1,\"287\":2}}],[\"tt\",{\"1\":{\"255\":1}}],[\"tts\",{\"1\":{\"185\":1}}],[\"tcp\",{\"1\":{\"214\":2}}],[\"tcsh\",{\"1\":{\"132\":1}}],[\"type\",{\"1\":{\"211\":1}}],[\"typora\",{\"1\":{\"31\":1}}],[\"tuesday\",{\"1\":{\"168\":1}}],[\"tutorial\",{\"1\":{\"163\":1}}],[\"tuna\",{\"1\":{\"36\":2}}],[\"txt\",{\"1\":{\"163\":4,\"286\":4}}],[\"tls\",{\"1\":{\"158\":4}}],[\"tls1\",{\"1\":{\"158\":1}}],[\"tb`\",{\"1\":{\"176\":2}}],[\"tb\",{\"1\":{\"155\":1}}],[\"timezone\",{\"1\":{\"276\":3}}],[\"timestamp\",{\"1\":{\"275\":1}}],[\"time\",{\"0\":{\"269\":1,\"270\":1},\"1\":{\"91\":1,\"92\":1,\"96\":1,\"97\":2,\"148\":1,\"207\":1,\"270\":1,\"271\":6,\"272\":1,\"273\":1,\"274\":3,\"275\":1,\"276\":1,\"277\":2,\"278\":1}}],[\"tips\",{\"1\":{\"73\":1}}],[\"tip\",{\"1\":{\"4\":1,\"14\":1}}],[\"temporaladjusters\",{\"1\":{\"274\":5}}],[\"temporal\",{\"1\":{\"273\":1,\"274\":1}}],[\"templates\",{\"1\":{\"75\":4,\"90\":1,\"91\":2,\"92\":1,\"97\":2,\"134\":1}}],[\"template\",{\"1\":{\"61\":1,\"134\":1}}],[\"technetwork\",{\"1\":{\"181\":1}}],[\"technologies\",{\"1\":{\"159\":1,\"181\":1,\"292\":1}}],[\"term\",{\"1\":{\"151\":1}}],[\"testwrite\",{\"1\":{\"286\":2}}],[\"testread\",{\"1\":{\"286\":2}}],[\"testfoobar\",{\"1\":{\"219\":2}}],[\"test$end$\",{\"1\":{\"93\":1}}],[\"test\",{\"1\":{\"93\":1,\"142\":1,\"195\":1,\"260\":2,\"261\":9,\"267\":2}}],[\"text\",{\"1\":{\"62\":1,\"162\":7,\"188\":2}}],[\"treemap\",{\"0\":{\"193\":1},\"1\":{\"193\":1}}],[\"true\",{\"1\":{\"153\":1,\"192\":1,\"207\":1,\"235\":1,\"261\":1}}],[\"translateescapes\",{\"1\":{\"176\":2}}],[\"translation\",{\"1\":{\"61\":1}}],[\"transform\",{\"1\":{\"162\":2}}],[\"trainer\",{\"1\":{\"62\":1}}],[\"try\",{\"0\":{\"286\":1},\"1\":{\"58\":1,\"238\":1,\"245\":1,\"286\":4,\"292\":2}}],[\"td\",{\"1\":{\"61\":1}}],[\"tmp\",{\"1\":{\"49\":1}}],[\"th\",{\"1\":{\"185\":1}}],[\"threads\",{\"1\":{\"234\":1,\"239\":1}}],[\"threadlocalrandom和splittablerandom来生成随机数\",{\"1\":{\"217\":1}}],[\"thread\",{\"1\":{\"184\":2,\"207\":1,\"236\":1,\"244\":1,\"253\":2,\"261\":1}}],[\"throwable>\",{\"1\":{\"266\":1}}],[\"throw\",{\"1\":{\"264\":1,\"266\":2}}],[\"throws\",{\"1\":{\"93\":1,\"163\":1,\"266\":1}}],[\"through\",{\"1\":{\"49\":1}}],[\"that\",{\"1\":{\"179\":2,\"266\":1}}],[\"this\",{\"1\":{\"179\":1,\"187\":2,\"192\":1,\"264\":1,\"267\":2}}],[\"thursday\",{\"1\":{\"168\":1}}],[\"thenaccept\",{\"1\":{\"152\":1}}],[\"thenapply\",{\"1\":{\"152\":1}}],[\"theme\",{\"1\":{\"61\":2}}],[\"the\",{\"1\":{\"8\":1,\"155\":1,\"179\":1,\"181\":1,\"211\":1,\"216\":3,\"229\":1,\"240\":1,\"253\":1,\"266\":2}}],[\"tolocaldatetime\",{\"1\":{\"276\":1}}],[\"tolist\",{\"1\":{\"91\":1,\"153\":1,\"260\":1,\"264\":2}}],[\"tokyotime\",{\"1\":{\"276\":3}}],[\"tokyo\",{\"1\":{\"276\":2}}],[\"tokyosdf\",{\"1\":{\"276\":3}}],[\"today\",{\"1\":{\"274\":4}}],[\"toepochday\",{\"1\":{\"273\":2}}],[\"touppercase\",{\"1\":{\"264\":2}}],[\"tounmodifiableset\",{\"1\":{\"145\":1}}],[\"tounmodifiablelist\",{\"1\":{\"145\":1}}],[\"toarray\",{\"1\":{\"259\":2,\"260\":2,\"264\":1}}],[\"toolprovider\",{\"1\":{\"208\":1}}],[\"toolkit\",{\"1\":{\"61\":1}}],[\"tools\",{\"1\":{\"13\":1,\"61\":3,\"133\":3}}],[\"tostring方法中包括所有成员属性的字符串表示形式及其名称\",{\"1\":{\"187\":1}}],[\"tostring\",{\"1\":{\"58\":1,\"61\":1,\"187\":2,\"219\":1,\"242\":1}}],[\"to\",{\"1\":{\"49\":5,\"61\":3,\"107\":1,\"115\":1,\"150\":1,\"179\":1,\"228\":1,\"229\":1,\"235\":1,\"281\":2}}],[\"t\",{\"1\":{\"49\":1,\"58\":1,\"140\":1,\"176\":2,\"185\":1,\"255\":1,\"259\":5,\"264\":10,\"266\":5,\"287\":2}}],[\"takewhile\",{\"1\":{\"287\":4}}],[\"task2\",{\"1\":{\"238\":1,\"245\":1}}],[\"task1\",{\"1\":{\"238\":1,\"245\":1}}],[\"tab\",{\"1\":{\"91\":1}}],[\"tabnine\",{\"1\":{\"62\":2}}],[\"tar\",{\"1\":{\"61\":1}}],[\"taobao\",{\"1\":{\"48\":2}}],[\"taps\",{\"1\":{\"14\":1,\"35\":1}}],[\"tap\",{\"0\":{\"29\":1,\"30\":1},\"1\":{\"10\":2,\"26\":1,\"29\":7,\"30\":1,\"31\":1,\"32\":3,\"41\":1}}],[\"tsinghua\",{\"1\":{\"36\":2}}],[\"的部分操作\",{\"1\":{\"290\":1}}],[\"的出现替代了\",{\"1\":{\"290\":1}}],[\"的出现让众多\",{\"1\":{\"194\":1}}],[\"的一个实现\",{\"1\":{\"289\":1}}],[\"的一项分析工具\",{\"1\":{\"158\":1}}],[\"的进程\",{\"1\":{\"288\":1}}],[\"的味道\",{\"1\":{\"283\":1}}],[\"的模块化\",{\"1\":{\"281\":1}}],[\"的门槛\",{\"1\":{\"280\":1}}],[\"的不同\",{\"1\":{\"277\":1}}],[\"的高频方法\",{\"1\":{\"268\":1}}],[\"的结果展开\",{\"1\":{\"264\":1}}],[\"的value是null\",{\"1\":{\"264\":1}}],[\"的源码方法\",{\"1\":{\"264\":1}}],[\"的方式\",{\"1\":{\"264\":1}}],[\"的方法真的非常简单\",{\"1\":{\"268\":1}}],[\"的方法后才执行\",{\"1\":{\"261\":1}}],[\"的方法时\",{\"1\":{\"261\":1}}],[\"的方法是要继承的\",{\"1\":{\"248\":1}}],[\"的方法是更像是一个扩展插件\",{\"1\":{\"248\":1}}],[\"的方法可以用default\",{\"1\":{\"248\":1}}],[\"的方法上\",{\"1\":{\"212\":1}}],[\"的办法如下\",{\"1\":{\"263\":1}}],[\"的红盖头\",{\"1\":{\"263\":1}}],[\"的介绍中这样写到\",{\"1\":{\"263\":1}}],[\"的特点\",{\"1\":{\"262\":1}}],[\"的地方还是要用\",{\"1\":{\"248\":1}}],[\"的区别\",{\"1\":{\"248\":1}}],[\"的区别在于\",{\"1\":{\"177\":1}}],[\"的设计初衷是面向抽象\",{\"1\":{\"248\":1}}],[\"的设计者们就对\",{\"1\":{\"207\":1}}],[\"的这次孵化基本没有改变向量\",{\"1\":{\"246\":1}}],[\"的值进行解构\",{\"1\":{\"241\":1}}],[\"的基本用法如下\",{\"1\":{\"238\":1,\"245\":1}}],[\"的性能也不行\",{\"1\":{\"235\":1}}],[\"的性能得到了进一步的优化\",{\"1\":{\"231\":1}}],[\"的语言安全机制控制\",{\"1\":{\"235\":1}}],[\"的其余部分\",{\"1\":{\"220\":1}}],[\"的类型匹配\",{\"0\":{\"219\":1},\"1\":{\"216\":1}}],[\"的重点不是移植工作本身\",{\"1\":{\"214\":1}}],[\"的轻量级\",{\"1\":{\"214\":1}}],[\"的空间\",{\"1\":{\"214\":1}}],[\"的改变一致\",{\"1\":{\"214\":1}}],[\"的启动器选项\",{\"1\":{\"212\":1}}],[\"的代码和普通的可编译代码\",{\"1\":{\"280\":1}}],[\"的代码可能不再起作用\",{\"1\":{\"212\":1}}],[\"的代码格式化风格\",{\"1\":{\"61\":1}}],[\"的所有内部元素\",{\"1\":{\"212\":1}}],[\"的安全性\",{\"1\":{\"209\":1}}],[\"的安装\",{\"1\":{\"40\":1}}],[\"的目标是为用户提供简洁易用且与平台无关的表达范围广泛的向量计算\",{\"1\":{\"231\":1,\"246\":1}}],[\"的目标是继续完善\",{\"1\":{\"200\":1}}],[\"的目的如下\",{\"1\":{\"209\":1}}],[\"的初始迭代以表达一些向量计算\",{\"1\":{\"203\":1,\"225\":1}}],[\"的复杂性大于其带来的性能提升\",{\"1\":{\"201\":1}}],[\"的新特性而将之替换\",{\"1\":{\"248\":1}}],[\"的新特性的介绍\",{\"1\":{\"247\":1}}],[\"的新特性少了很多\",{\"1\":{\"226\":1}}],[\"的新特性\",{\"1\":{\"201\":1,\"291\":1}}],[\"的时候\",{\"1\":{\"194\":1,\"209\":1,\"282\":1}}],[\"的时候它来了\",{\"1\":{\"142\":1}}],[\"的效果了\",{\"1\":{\"190\":1}}],[\"的定义方式\",{\"1\":{\"187\":1}}],[\"的增强\",{\"0\":{\"185\":1}}],[\"的format\",{\"1\":{\"176\":1}}],[\"的可用性\",{\"1\":{\"174\":1}}],[\"的应用程序类和引用类库中的类\",{\"1\":{\"174\":1}}],[\"的直接替代\",{\"1\":{\"172\":1}}],[\"的底层进行了重写\",{\"1\":{\"172\":1}}],[\"的顺序\",{\"1\":{\"171\":1}}],[\"的堆区域组成\",{\"1\":{\"171\":1}}],[\"的堆栈可视化界面\",{\"1\":{\"61\":1}}],[\"的问题\",{\"1\":{\"168\":1}}],[\"的暂停小于\",{\"1\":{\"165\":1}}],[\"的实时命令行交互工具\",{\"1\":{\"280\":1}}],[\"的实例\",{\"1\":{\"261\":1}}],[\"的实现改用\",{\"1\":{\"284\":1}}],[\"的实现逻辑\",{\"1\":{\"230\":1}}],[\"的实现\",{\"1\":{\"158\":1,\"166\":2}}],[\"的实验性\",{\"1\":{\"148\":1}}],[\"的探索与实践\",{\"1\":{\"155\":1}}],[\"的情况会更少\",{\"1\":{\"155\":1}}],[\"的大堆\",{\"1\":{\"155\":1}}],[\"的小堆\",{\"1\":{\"155\":1}}],[\"的包名由\",{\"1\":{\"152\":1}}],[\"的适用范围\",{\"1\":{\"147\":1}}],[\"的商业特性\",{\"1\":{\"147\":1}}],[\"的发生\",{\"1\":{\"144\":1}}],[\"的引入了\",{\"1\":{\"141\":1}}],[\"的视图查看和编辑内容\",{\"1\":{\"62\":1}}],[\"的图形界面操作\",{\"1\":{\"61\":1}}],[\"的快捷键\",{\"1\":{\"58\":1}}],[\"的软件\",{\"0\":{\"38\":1}}],[\"的镜像源\",{\"1\":{\"34\":1}}],[\"的命令来添加新的\",{\"1\":{\"29\":1}}],[\"的更新\",{\"1\":{\"28\":1}}],[\"的链接\",{\"1\":{\"18\":1}}],[\"的官网\",{\"1\":{\"18\":1}}],[\"的子目录\",{\"1\":{\"10\":1}}],[\"的使用之前\",{\"1\":{\"10\":1}}],[\"的几个核心概念\",{\"0\":{\"10\":1}}],[\"的版本\",{\"1\":{\"9\":2}}],[\"的\",{\"0\":{\"148\":1},\"1\":{\"8\":1,\"40\":1,\"48\":1,\"50\":1,\"61\":2,\"141\":1,\"144\":3,\"148\":1,\"204\":1,\"214\":1,\"222\":1,\"263\":2}}],[\"就不要用\",{\"1\":{\"268\":1}}],[\"就不用图形界面选择\",{\"1\":{\"8\":1}}],[\"就是为了解决\",{\"1\":{\"235\":1}}],[\"就比如说你在\",{\"1\":{\"227\":1}}],[\"就已通过\",{\"1\":{\"214\":1,\"235\":1}}],[\"就算编译期和运行期没有产生警告和异常\",{\"1\":{\"207\":1}}],[\"就彻底被删除了\",{\"1\":{\"201\":1}}],[\"就以switch的增强为例子\",{\"1\":{\"179\":1}}],[\"就了默认的垃圾回收器\",{\"1\":{\"144\":1}}],[\"就能查到到这个\",{\"1\":{\"61\":1}}],[\"就可以升级为一个模块\",{\"1\":{\"281\":1}}],[\"就可以体验到性能更好反射\",{\"1\":{\"230\":1}}],[\"就可以在获得属性的访问方法\",{\"1\":{\"187\":1}}],[\"就可以完成\",{\"1\":{\"40\":1}}],[\"就可以完成添加\",{\"1\":{\"29\":1}}],[\"就可以了\",{\"1\":{\"15\":1,\"128\":1}}],[\"就可以安装软件了\",{\"1\":{\"15\":1}}],[\"就可以使用\",{\"1\":{\"15\":1}}],[\"就可以帮助你更好的去使用\",{\"1\":{\"10\":1}}],[\"就如同\",{\"1\":{\"8\":1}}],[\"却并未为我们提供一个好用的包管理器\",{\"1\":{\"8\":1}}],[\"中新增了更多的静态方法来创建不同类型的方法句柄\",{\"1\":{\"291\":1}}],[\"中新增了静态方法\",{\"1\":{\"145\":1}}],[\"中已经被弃用\",{\"1\":{\"291\":1}}],[\"中已经有了\",{\"1\":{\"142\":1}}],[\"中依次获取满足条件的元素\",{\"1\":{\"287\":1}}],[\"中则不可以创建空的\",{\"1\":{\"287\":1}}],[\"中增加了新的方法\",{\"1\":{\"287\":1}}],[\"中被引入的\",{\"1\":{\"282\":1}}],[\"中可以直接输入表达式并查看其执行结果\",{\"1\":{\"280\":1}}],[\"中可以有多个方法被它们修饰\",{\"1\":{\"248\":1}}],[\"中获取的数据\",{\"1\":{\"263\":1}}],[\"中专门有一个包放函数式接口java\",{\"1\":{\"249\":1}}],[\"中是第一次预览\",{\"1\":{\"243\":1}}],[\"中是第二次预览\",{\"1\":{\"241\":1,\"243\":1,\"244\":1}}],[\"中是默认使用新的\",{\"1\":{\"172\":1}}],[\"中受益\",{\"1\":{\"235\":1}}],[\"中有一些比较重要的新特性值得关注\",{\"1\":{\"234\":1}}],[\"中包含的数据\",{\"1\":{\"291\":1}}],[\"中包含了\",{\"1\":{\"289\":1}}],[\"中包含了传输层安全性\",{\"1\":{\"158\":1}}],[\"中包含\",{\"1\":{\"226\":4}}],[\"中进行了预览\",{\"1\":{\"242\":1}}],[\"中进行了第一次预览\",{\"1\":{\"244\":1}}],[\"中进行了第一轮孵化\",{\"1\":{\"224\":1,\"233\":1,\"235\":1,\"243\":1}}],[\"中进行了第二次孵化\",{\"1\":{\"243\":1}}],[\"中进行了第二次复活\",{\"1\":{\"209\":1}}],[\"中进行了第三次孵化\",{\"1\":{\"209\":1}}],[\"中进行了更新的\",{\"1\":{\"152\":1}}],[\"中如果想让一个类不能被继承和修改\",{\"1\":{\"199\":1}}],[\"中现有的椭圆曲线数字签名算法\",{\"1\":{\"195\":1}}],[\"中返回值\",{\"1\":{\"185\":1}}],[\"中就已经被弃用\",{\"1\":{\"201\":1}}],[\"中就已经引入了类数据共享机制\",{\"1\":{\"147\":1}}],[\"中就能使用\",{\"1\":{\"185\":1}}],[\"中将继续增强\",{\"1\":{\"179\":1}}],[\"中将使得\",{\"1\":{\"149\":1}}],[\"中推出\",{\"1\":{\"179\":1}}],[\"中实验性引入的\",{\"1\":{\"171\":1}}],[\"中提供一种低开销的\",{\"1\":{\"158\":1}}],[\"中对结构化并发唯一变化是更新为支持在任务范围内创建的线程structuredtaskscope继承范围值\",{\"1\":{\"245\":1}}],[\"中对\",{\"1\":{\"156\":1,\"174\":1}}],[\"中对其他软件执行升级等操作\",{\"1\":{\"40\":1}}],[\"中出现\",{\"1\":{\"155\":1}}],[\"中线程管控引入\",{\"1\":{\"149\":1}}],[\"中引入代码片段可以使用\",{\"1\":{\"229\":1}}],[\"中引入的应用程序类数据共享\",{\"1\":{\"174\":1}}],[\"中引入的实验性\",{\"1\":{\"148\":1}}],[\"中引入并在\",{\"1\":{\"152\":1}}],[\"中引入局部变量推断\",{\"1\":{\"142\":1}}],[\"中选择如下\",{\"1\":{\"125\":1}}],[\"中添加以下代码\",{\"1\":{\"97\":1}}],[\"中设置本地\",{\"1\":{\"61\":1}}],[\"中右击\",{\"1\":{\"61\":1}}],[\"中打开即可\",{\"1\":{\"40\":1,\"41\":1}}],[\"中的静态工厂方法来创建\",{\"1\":{\"290\":1}}],[\"中的方法并没有立刻执行\",{\"1\":{\"261\":1}}],[\"中的进程\",{\"1\":{\"236\":1,\"244\":1}}],[\"中的变量值进行修改\",{\"1\":{\"210\":1}}],[\"中的一个预览新特性\",{\"1\":{\"199\":1}}],[\"中的一些核心的概念\",{\"1\":{\"10\":1}}],[\"中的\",{\"1\":{\"61\":1,\"155\":1,\"236\":1,\"244\":1,\"287\":1,\"289\":1}}],[\"中的软件具体信息\",{\"1\":{\"18\":1}}],[\"中\",{\"0\":{\"177\":1},\"1\":{\"8\":1,\"31\":1,\"40\":1,\"61\":1,\"148\":1,\"152\":1,\"158\":1,\"171\":2,\"188\":1,\"203\":5,\"204\":2,\"208\":3,\"213\":3,\"221\":3,\"224\":3,\"225\":5,\"231\":5,\"233\":3,\"235\":2,\"237\":5,\"243\":1,\"246\":4}}],[\"自主管理内存资源等\",{\"1\":{\"235\":1}}],[\"自从引入了\",{\"1\":{\"206\":1}}],[\"自定义函数式接口\",{\"1\":{\"253\":1}}],[\"自定义接口\",{\"1\":{\"253\":1}}],[\"自定义注释模板\",{\"0\":{\"100\":1}}],[\"自定义类\",{\"1\":{\"61\":1}}],[\"自定义设置控制台输出颜色\",{\"1\":{\"61\":1}}],[\"自动解箱抛\",{\"1\":{\"263\":1}}],[\"自动拆箱有可能产生\",{\"1\":{\"263\":1}}],[\"自动补全插件\",{\"0\":{\"138\":1}}],[\"自动填充建议\",{\"1\":{\"127\":1}}],[\"自动注释作者信息和日期\",{\"0\":{\"97\":1}}],[\"自动导入\",{\"0\":{\"85\":1,\"86\":1}}],[\"自动导包和删除无用包\",{\"1\":{\"58\":1}}],[\"自动格式化代码\",{\"0\":{\"82\":1}}],[\"自动生成掉用\",{\"1\":{\"62\":1}}],[\"自动生成时序图\",{\"1\":{\"61\":1}}],[\"自动添加注释\",{\"0\":{\"98\":1,\"99\":1},\"1\":{\"56\":1,\"61\":1}}],[\"自动化部署git项目\",{\"0\":{\"2\":1}}],[\"自带的检查\",{\"1\":{\"27\":1}}],[\"自然是能够用命令解决\",{\"1\":{\"8\":1}}],[\"1~10\",{\"1\":{\"287\":2}}],[\"193\",{\"1\":{\"279\":1}}],[\"1970\",{\"1\":{\"276\":1}}],[\"19\",{\"0\":{\"234\":1},\"1\":{\"203\":1,\"224\":2,\"225\":1,\"231\":1,\"233\":2,\"234\":4,\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"241\":1,\"243\":2,\"244\":2,\"245\":1,\"246\":1}}],[\"18\",{\"0\":{\"226\":1},\"1\":{\"203\":2,\"224\":1,\"225\":2,\"226\":5,\"228\":1,\"229\":2,\"230\":1,\"231\":2,\"232\":1,\"233\":1,\"235\":1,\"237\":2,\"243\":1,\"246\":1}}],[\"17\",{\"0\":{\"216\":1},\"1\":{\"203\":1,\"216\":5,\"217\":2,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"226\":2,\"227\":1,\"231\":1,\"233\":1,\"235\":1,\"237\":1,\"243\":1,\"246\":1,\"289\":1}}],[\"1k\",{\"1\":{\"164\":1}}],[\"1l\",{\"1\":{\"163\":1}}],[\"130mb\",{\"1\":{\"214\":1}}],[\"13all\",{\"1\":{\"181\":1}}],[\"13\",{\"0\":{\"160\":1},\"1\":{\"171\":1,\"172\":2,\"174\":1,\"176\":4,\"181\":2,\"287\":3}}],[\"11>>1\",{\"1\":{\"261\":1}}],[\"11\",{\"0\":{\"151\":1},\"1\":{\"151\":3,\"152\":2,\"153\":1,\"158\":3,\"159\":4,\"171\":1,\"201\":1,\"214\":1,\"287\":3,\"291\":1}}],[\"127\",{\"1\":{\"228\":2}}],[\"12all\",{\"1\":{\"181\":1}}],[\"12\",{\"0\":{\"160\":1},\"1\":{\"48\":2,\"162\":1,\"163\":5,\"181\":2,\"189\":1,\"272\":8,\"273\":4,\"274\":1}}],[\"16\",{\"0\":{\"202\":1},\"1\":{\"46\":1,\"202\":3,\"203\":1,\"204\":1,\"208\":2,\"209\":1,\"210\":2,\"211\":3,\"212\":1,\"213\":1,\"215\":2,\"221\":1,\"225\":1,\"226\":2,\"231\":1,\"237\":1,\"246\":1}}],[\"15°\",{\"1\":{\"276\":1}}],[\"15\",{\"0\":{\"182\":1},\"1\":{\"13\":1,\"155\":1,\"194\":1,\"196\":1,\"199\":1,\"200\":1,\"201\":1,\"204\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":2,\"221\":2,\"226\":1}}],[\"14\",{\"0\":{\"182\":1,\"204\":1},\"1\":{\"13\":1,\"184\":2,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"213\":1,\"216\":2,\"221\":1,\"226\":3,\"276\":2}}],[\"1000\",{\"1\":{\"164\":1,\"273\":1}}],[\"10ms\",{\"1\":{\"155\":1,\"165\":1}}],[\"10\",{\"0\":{\"141\":1},\"1\":{\"13\":2,\"46\":1,\"141\":1,\"142\":3,\"143\":1,\"147\":1,\"148\":2,\"149\":2,\"150\":3,\"151\":1,\"152\":1,\"156\":2,\"162\":1,\"174\":1,\"207\":2,\"214\":1,\"217\":1,\"287\":2}}],[\"1\",{\"0\":{\"7\":1,\"17\":1,\"31\":1},\"1\":{\"44\":2,\"45\":2,\"46\":2,\"49\":1,\"52\":2,\"53\":2,\"64\":1,\"72\":2,\"91\":3,\"96\":2,\"97\":1,\"125\":1,\"142\":2,\"158\":2,\"163\":1,\"187\":2,\"207\":1,\"214\":2,\"223\":1,\"228\":2,\"231\":2,\"235\":3,\"253\":2,\"254\":1,\"255\":1,\"260\":2,\"261\":1,\"263\":1,\"264\":1,\"267\":1,\"272\":2,\"273\":3,\"274\":3,\"276\":5,\"280\":2,\"281\":1,\"283\":1,\"287\":5}}],[\"year\",{\"1\":{\"274\":3}}],[\"yyyy\",{\"1\":{\"270\":2,\"271\":7,\"272\":1,\"273\":2,\"274\":1,\"276\":2}}],[\"you\",{\"1\":{\"179\":1}}],[\"yourwebsite\",{\"1\":{\"3\":1}}],[\"yield和\",{\"1\":{\"177\":1}}],[\"yield\",{\"0\":{\"177\":1},\"1\":{\"177\":6,\"185\":3}}],[\"yaml\",{\"1\":{\"61\":2}}],[\"yarn\",{\"1\":{\"5\":1}}],[\"y\",{\"1\":{\"61\":1}}],[\"yum\",{\"1\":{\"8\":1}}],[\"python\",{\"1\":{\"280\":1}}],[\"pid\",{\"1\":{\"288\":1}}],[\"pineapple\",{\"1\":{\"264\":3}}],[\"pipeline\",{\"1\":{\"216\":1}}],[\"pear\",{\"1\":{\"264\":3}}],[\"period\",{\"1\":{\"273\":6}}],[\"permits\",{\"1\":{\"199\":2}}],[\"permanent\",{\"1\":{\"179\":1,\"210\":1,\"211\":1}}],[\"person\",{\"1\":{\"199\":4}}],[\"pseudorandom\",{\"1\":{\"217\":1}}],[\"pseudo\",{\"1\":{\"216\":1}}],[\"pkg\",{\"1\":{\"208\":1}}],[\"pkg等命令来完成软件的安装\",{\"1\":{\"8\":1}}],[\"php\",{\"1\":{\"188\":1}}],[\"publisher\",{\"1\":{\"289\":2}}],[\"public\",{\"1\":{\"93\":1,\"107\":1,\"109\":1,\"163\":1,\"172\":1,\"176\":3,\"187\":1,\"192\":1,\"199\":3,\"207\":1,\"211\":1,\"248\":8,\"253\":8,\"255\":4,\"259\":4,\"260\":1,\"261\":3,\"263\":1,\"264\":7,\"265\":2,\"266\":4,\"267\":1,\"271\":2,\"273\":2,\"274\":2,\"284\":1,\"285\":1,\"287\":4}}],[\"putifabsent\",{\"1\":{\"193\":1}}],[\"pushweek\",{\"1\":{\"273\":1}}],[\"push\",{\"1\":{\"3\":2}}],[\"p>\",{\"1\":{\"92\":1,\"97\":1}}],[\"png\",{\"1\":{\"64\":3,\"67\":3,\"69\":1,\"72\":1,\"73\":1,\"75\":3,\"82\":1,\"84\":1,\"86\":1,\"88\":1,\"91\":2,\"92\":1,\"97\":1,\"103\":1,\"113\":1,\"115\":1,\"116\":1,\"117\":1,\"118\":2,\"119\":1,\"121\":1,\"124\":1,\"125\":1}}],[\"please\",{\"1\":{\"185\":1}}],[\"playing\",{\"1\":{\"208\":1}}],[\"plainsocketimpl\",{\"1\":{\"172\":1}}],[\"platformsocketimpl\",{\"1\":{\"172\":1}}],[\"platform\",{\"1\":{\"46\":1,\"177\":1}}],[\"plugins=\",{\"1\":{\"137\":1,\"138\":1}}],[\"plugins\",{\"1\":{\"72\":1,\"136\":1,\"137\":1,\"138\":1}}],[\"plusdays\",{\"1\":{\"274\":1}}],[\"plusweeks\",{\"1\":{\"273\":1}}],[\"plus\",{\"1\":{\"62\":1,\"273\":1}}],[\"port\",{\"1\":{\"216\":1,\"228\":1,\"234\":1}}],[\"point\",{\"1\":{\"115\":1,\"216\":1}}],[\"power\",{\"1\":{\"62\":1}}],[\"pom\",{\"1\":{\"61\":3}}],[\"pojo\",{\"1\":{\"61\":1}}],[\"p3c\",{\"1\":{\"61\":1,\"80\":1}}],[\"prng\",{\"1\":{\"217\":5}}],[\"private\",{\"1\":{\"177\":1,\"263\":2,\"264\":3,\"284\":1,\"285\":1}}],[\"privileges\",{\"1\":{\"49\":4}}],[\"printwriter\",{\"1\":{\"286\":4}}],[\"println\",{\"1\":{\"152\":2,\"154\":1,\"156\":2,\"162\":3,\"164\":1,\"168\":4,\"169\":2,\"185\":1,\"188\":2,\"195\":1,\"219\":6,\"229\":1,\"248\":5,\"253\":3,\"254\":4,\"260\":8,\"261\":3,\"263\":2,\"264\":6,\"271\":6,\"273\":5,\"274\":3,\"276\":7,\"287\":9,\"288\":2}}],[\"print\",{\"1\":{\"142\":1}}],[\"predicate\",{\"1\":{\"259\":3,\"261\":7,\"267\":4,\"287\":1}}],[\"predicate<\",{\"1\":{\"259\":3,\"267\":1,\"287\":1}}],[\"preferred\",{\"1\":{\"231\":1}}],[\"preferences\",{\"1\":{\"59\":1,\"128\":1,\"129\":1}}],[\"pre>\",{\"1\":{\"229\":3}}],[\"preview\",{\"1\":{\"167\":1,\"179\":2,\"210\":2,\"211\":2}}],[\"prestoexception\",{\"1\":{\"146\":1}}],[\"present\",{\"1\":{\"266\":2}}],[\"presentati\",{\"1\":{\"61\":1}}],[\"presets下选择\",{\"1\":{\"128\":1}}],[\"presets\",{\"1\":{\"128\":1}}],[\"processor\",{\"1\":{\"289\":1}}],[\"processhandle\",{\"1\":{\"288\":4}}],[\"process\",{\"1\":{\"236\":1,\"238\":1,\"244\":1,\"245\":1}}],[\"provider\",{\"1\":{\"232\":1}}],[\"prog\",{\"1\":{\"184\":2}}],[\"programmer\",{\"1\":{\"177\":1}}],[\"progress\",{\"1\":{\"62\":1}}],[\"project的一部分\",{\"1\":{\"281\":1}}],[\"project\",{\"1\":{\"181\":1,\"281\":1}}],[\"projects\",{\"1\":{\"64\":2,\"67\":2,\"69\":2,\"72\":2,\"75\":4,\"82\":2,\"84\":2,\"86\":2,\"97\":2,\"181\":1,\"279\":1}}],[\"profiling\",{\"1\":{\"158\":1}}],[\"profile\",{\"1\":{\"14\":2}}],[\"properties\",{\"1\":{\"61\":3}}],[\"promoter\",{\"1\":{\"61\":1}}],[\"pro\",{\"1\":{\"32\":2,\"61\":1}}],[\"p\",{\"1\":{\"49\":1,\"112\":1,\"140\":1,\"142\":1}}],[\"patterns\",{\"1\":{\"234\":1,\"239\":1,\"241\":1}}],[\"pattern\",{\"1\":{\"216\":1,\"226\":1,\"234\":1}}],[\"path2\",{\"1\":{\"163\":1}}],[\"path\",{\"1\":{\"163\":7,\"173\":3}}],[\"paths\",{\"1\":{\"142\":1}}],[\"path=\",{\"1\":{\"46\":1,\"48\":1,\"49\":1}}],[\"path=$java\",{\"1\":{\"45\":2}}],[\"pauseless\",{\"1\":{\"165\":1}}],[\"part\",{\"1\":{\"281\":1}}],[\"parse\",{\"1\":{\"272\":5,\"273\":4,\"274\":1}}],[\"parallel\",{\"1\":{\"282\":1}}],[\"parallelstreamtest\",{\"1\":{\"261\":1}}],[\"parallelstream\",{\"1\":{\"258\":1,\"259\":1,\"261\":3}}],[\"parameters\",{\"1\":{\"251\":2}}],[\"param\",{\"1\":{\"91\":2}}],[\"params\",{\"1\":{\"91\":3,\"96\":1}}],[\"params=\",{\"1\":{\"91\":1}}],[\"parnew\",{\"1\":{\"155\":1}}],[\"paste\",{\"1\":{\"61\":1}}],[\"pascalcase\",{\"1\":{\"61\":1}}],[\"password\",{\"1\":{\"49\":1,\"125\":2}}],[\"packages\",{\"1\":{\"281\":1}}],[\"packagename\",{\"1\":{\"26\":7}}],[\"package\",{\"0\":{\"4\":1},\"1\":{\"8\":1,\"281\":3}}],[\"pages\",{\"1\":{\"3\":1}}],[\"guava\",{\"1\":{\"283\":1}}],[\"guid\",{\"1\":{\"150\":1}}],[\"guide\",{\"1\":{\"150\":1,\"235\":1,\"281\":1}}],[\"guidelines\",{\"1\":{\"61\":1}}],[\"gui\",{\"1\":{\"40\":1,\"61\":1}}],[\"gmt\",{\"1\":{\"276\":1}}],[\"gkh\",{\"1\":{\"260\":1,\"261\":1}}],[\"goroutine\",{\"1\":{\"236\":1,\"244\":1}}],[\"go\",{\"1\":{\"236\":1,\"244\":1}}],[\"good\",{\"1\":{\"177\":1}}],[\"googlestyle\",{\"1\":{\"79\":1}}],[\"google\",{\"0\":{\"79\":1},\"1\":{\"62\":1,\"79\":1}}],[\"ga\",{\"1\":{\"236\":1,\"244\":1}}],[\"garbage\",{\"1\":{\"155\":1,\"282\":2}}],[\"gav\",{\"1\":{\"61\":2}}],[\"g1\",{\"0\":{\"144\":1,\"166\":1,\"282\":1},\"1\":{\"141\":1,\"144\":4,\"155\":2,\"166\":4,\"190\":2,\"194\":1,\"279\":1,\"282\":2}}],[\"gc\",{\"0\":{\"144\":1,\"165\":1},\"1\":{\"141\":2,\"143\":1,\"144\":4,\"155\":2,\"158\":1,\"165\":2,\"166\":1,\"171\":1,\"190\":1,\"205\":1}}],[\"g\",{\"1\":{\"61\":2}}],[\"gz\",{\"1\":{\"61\":1}}],[\"generics\",{\"1\":{\"250\":1}}],[\"general\",{\"1\":{\"113\":1,\"279\":1}}],[\"generatekeypair\",{\"1\":{\"195\":1}}],[\"generateallsetter\",{\"1\":{\"61\":1}}],[\"generator函数返回一个包含此流的元素的数组\",{\"1\":{\"259\":1}}],[\"generators\",{\"1\":{\"216\":1}}],[\"generator\",{\"1\":{\"62\":2,\"217\":1,\"259\":1}}],[\"geeksforgeeks\",{\"1\":{\"159\":1}}],[\"getdaynew\",{\"1\":{\"274\":1}}],[\"getday\",{\"1\":{\"274\":1}}],[\"getdays\",{\"1\":{\"273\":2}}],[\"getdog\",{\"1\":{\"263\":2,\"268\":1}}],[\"getyears\",{\"1\":{\"273\":1}}],[\"gettimezone\",{\"1\":{\"276\":2}}],[\"gettime\",{\"1\":{\"273\":3,\"274\":3,\"276\":2}}],[\"getter\",{\"1\":{\"58\":1,\"61\":1,\"187\":1}}],[\"getuserbyid\",{\"1\":{\"264\":2}}],[\"getutf8string\",{\"1\":{\"235\":1}}],[\"getzoo\",{\"1\":{\"263\":1}}],[\"getcity\",{\"1\":{\"264\":2}}],[\"getc\",{\"1\":{\"263\":1}}],[\"getcompactnumberinstance\",{\"1\":{\"164\":1}}],[\"getb\",{\"1\":{\"263\":1}}],[\"getbytes\",{\"1\":{\"195\":1}}],[\"getname\",{\"1\":{\"261\":1}}],[\"getsum\",{\"1\":{\"260\":1}}],[\"getactualmaximum\",{\"1\":{\"274\":1}}],[\"getaddressbyuser\",{\"1\":{\"264\":2}}],[\"getage\",{\"1\":{\"263\":2,\"268\":1}}],[\"geta\",{\"1\":{\"263\":1}}],[\"getaverage\",{\"1\":{\"260\":1}}],[\"getatindex\",{\"1\":{\"235\":1}}],[\"getmonths\",{\"1\":{\"273\":1}}],[\"getmin\",{\"1\":{\"260\":1}}],[\"getmax\",{\"1\":{\"260\":1}}],[\"getencoder\",{\"1\":{\"195\":1}}],[\"getprivate\",{\"1\":{\"195\":1}}],[\"getitem\",{\"1\":{\"253\":2}}],[\"getinstance\",{\"1\":{\"195\":2,\"273\":1,\"274\":4}}],[\"getifpresent\",{\"1\":{\"146\":1}}],[\"get\",{\"1\":{\"48\":2,\"61\":1,\"152\":1,\"229\":1,\"240\":2,\"264\":2,\"266\":3,\"268\":1,\"274\":1,\"276\":1}}],[\"group\",{\"1\":{\"281\":1}}],[\"groovyscript\",{\"1\":{\"91\":1}}],[\"great\",{\"1\":{\"219\":2}}],[\"grep\",{\"1\":{\"61\":1}}],[\"grape\",{\"1\":{\"264\":3}}],[\"graal\",{\"1\":{\"148\":3}}],[\"gradle安装好\",{\"1\":{\"72\":1}}],[\"gradle\",{\"0\":{\"72\":1},\"1\":{\"72\":2,\"73\":1}}],[\"gradle配置\",{\"0\":{\"70\":1,\"71\":1}}],[\"grants\",{\"1\":{\"49\":1}}],[\"grant\",{\"1\":{\"49\":4}}],[\"gsonformatplus\",{\"1\":{\"61\":1}}],[\"global\",{\"1\":{\"48\":2,\"65\":1}}],[\"gh\",{\"1\":{\"3\":1}}],[\"git密码忘记问题\",{\"0\":{\"125\":1}}],[\"git配置\",{\"0\":{\"63\":1,\"64\":1,\"74\":1}}],[\"gittoolbox\",{\"1\":{\"61\":1}}],[\"gitee\",{\"1\":{\"61\":1}}],[\"git的安装\",{\"0\":{\"47\":1}}],[\"github地址\",{\"1\":{\"128\":1,\"133\":1}}],[\"githubusercontent\",{\"1\":{\"14\":2,\"133\":3}}],[\"github\",{\"1\":{\"3\":5,\"50\":2,\"128\":2,\"133\":2,\"137\":1,\"138\":1,\"214\":2}}],[\"git\",{\"1\":{\"3\":9,\"14\":6,\"35\":6,\"36\":6,\"47\":4,\"61\":7,\"64\":3,\"65\":1,\"125\":1,\"128\":3,\"133\":2,\"137\":4,\"138\":4,\"214\":5}}],[\"r>\",{\"1\":{\"259\":2}}],[\"risc\",{\"1\":{\"234\":1}}],[\"rpm\",{\"1\":{\"208\":1}}],[\"r\",{\"1\":{\"140\":1,\"142\":1,\"259\":1}}],[\"ruby\",{\"1\":{\"177\":1}}],[\"ruler\",{\"1\":{\"139\":1}}],[\"runable\",{\"1\":{\"253\":1}}],[\"runnable\",{\"1\":{\"253\":3,\"287\":3}}],[\"runtime\",{\"1\":{\"44\":1,\"46\":1}}],[\"run\",{\"1\":{\"3\":1,\"5\":1,\"25\":1,\"75\":4,\"101\":1,\"112\":1,\"115\":1,\"179\":1,\"240\":1,\"253\":1}}],[\"rds\",{\"1\":{\"61\":1}}],[\"radixsort\",{\"1\":{\"235\":4}}],[\"randomgenerator\",{\"1\":{\"217\":3}}],[\"randomgeneratorfactory\",{\"1\":{\"217\":1}}],[\"randomgeneratorfactory<randomgenerator>\",{\"1\":{\"217\":1}}],[\"random\",{\"1\":{\"142\":1,\"216\":1,\"217\":1}}],[\"rainbow\",{\"1\":{\"61\":1}}],[\"raw\",{\"1\":{\"14\":2,\"133\":3}}],[\"roll\",{\"1\":{\"274\":1}}],[\"roaming\",{\"1\":{\"53\":1,\"110\":1,\"125\":1}}],[\"root\",{\"1\":{\"49\":3}}],[\"root用户无初始密码\",{\"1\":{\"49\":1}}],[\"reactive\",{\"0\":{\"289\":1},\"1\":{\"289\":1}}],[\"read\",{\"1\":{\"184\":1}}],[\"reusable\",{\"1\":{\"281\":1}}],[\"requirenonnull\",{\"1\":{\"264\":2,\"267\":1}}],[\"request\",{\"1\":{\"152\":3}}],[\"retrieve\",{\"1\":{\"257\":1}}],[\"return\",{\"1\":{\"91\":3,\"145\":1,\"177\":3,\"187\":2,\"192\":1,\"219\":3,\"242\":2,\"253\":1,\"255\":3,\"259\":1,\"261\":1,\"263\":2,\"264\":4,\"265\":1,\"266\":6,\"267\":2}}],[\"reflect\",{\"1\":{\"230\":1}}],[\"reflection\",{\"1\":{\"226\":1}}],[\"reference\",{\"0\":{\"50\":1}}],[\"reimplement\",{\"1\":{\"226\":1}}],[\"rendering\",{\"1\":{\"216\":1}}],[\"rename\",{\"1\":{\"58\":1}}],[\"rectangle\",{\"1\":{\"187\":3}}],[\"record\",{\"0\":{\"187\":1},\"1\":{\"187\":3,\"211\":3,\"234\":1,\"239\":1,\"241\":2}}],[\"recorder\",{\"1\":{\"158\":1}}],[\"redhat\",{\"1\":{\"165\":1}}],[\"redis\",{\"1\":{\"61\":2}}],[\"related\",{\"1\":{\"281\":1}}],[\"relnotes\",{\"1\":{\"181\":2,\"292\":1}}],[\"relnote\",{\"1\":{\"159\":1}}],[\"releasenote\",{\"1\":{\"181\":2}}],[\"releases\",{\"1\":{\"179\":1,\"279\":1,\"292\":1}}],[\"release\",{\"1\":{\"107\":1,\"159\":1,\"210\":1,\"211\":1,\"215\":1,\"292\":1}}],[\"remove\",{\"1\":{\"216\":2}}],[\"removed\",{\"1\":{\"107\":1}}],[\"removal\",{\"1\":{\"207\":1,\"216\":2,\"226\":1}}],[\"remote\",{\"1\":{\"14\":2,\"35\":2,\"36\":2,\"49\":1}}],[\"repeat\",{\"1\":{\"153\":1}}],[\"replaceall\",{\"1\":{\"91\":1}}],[\"repo\",{\"1\":{\"14\":2,\"29\":1,\"35\":2,\"36\":2}}],[\"repository\",{\"1\":{\"10\":1,\"61\":1}}],[\"repo=github上的项目\",{\"1\":{\"3\":1}}],[\"resources\",{\"0\":{\"286\":1},\"1\":{\"281\":1,\"286\":2,\"292\":2}}],[\"resolution\",{\"1\":{\"226\":1}}],[\"response\",{\"1\":{\"152\":2}}],[\"results\",{\"1\":{\"238\":1,\"245\":1}}],[\"result\",{\"1\":{\"91\":1,\"162\":2,\"164\":2,\"185\":2,\"266\":1}}],[\"result+=\",{\"1\":{\"91\":2}}],[\"result=\",{\"1\":{\"91\":1}}],[\"restore\",{\"1\":{\"216\":1}}],[\"rest\",{\"1\":{\"62\":1}}],[\"restful\",{\"1\":{\"61\":1}}],[\"restfultool\",{\"1\":{\"61\":1}}],[\"restfultool插件根据url快速定位controller\",{\"1\":{\"56\":1}}],[\"restart\",{\"1\":{\"25\":1,\"61\":2}}],[\"revoke\",{\"1\":{\"49\":1}}],[\"registry\",{\"1\":{\"48\":3,\"112\":1}}],[\"rfc\",{\"1\":{\"158\":4}}],[\"rf\",{\"1\":{\"3\":1}}],[\"rmi\",{\"1\":{\"216\":1,\"220\":3}}],[\"rm\",{\"1\":{\"3\":1}}],[\"<=\",{\"1\":{\"287\":1}}],[\"<x\",{\"1\":{\"266\":1}}],[\"<t>\",{\"1\":{\"259\":1,\"264\":3}}],[\"<a>\",{\"1\":{\"259\":1}}],[\"<r>\",{\"1\":{\"259\":1}}],[\"<r\",{\"1\":{\"259\":1}}],[\"<repo>\",{\"1\":{\"3\":2}}],[\"<value>\",{\"1\":{\"240\":1}}],[\"<pre>\",{\"1\":{\"229\":3}}],[\"<p>\",{\"1\":{\"92\":1,\"97\":1}}],[\"<https\",{\"1\":{\"181\":1}}],[\"<e>\",{\"1\":{\"145\":1}}],[\"<\",{\"1\":{\"91\":1,\"92\":1,\"97\":1,\"207\":1,\"229\":3,\"231\":3,\"235\":2,\"287\":2}}],[\"<username>\",{\"1\":{\"3\":1}}],[\"writer\",{\"1\":{\"286\":4}}],[\"writestring\",{\"1\":{\"163\":4}}],[\"worker\",{\"1\":{\"261\":3}}],[\"world\",{\"1\":{\"155\":1,\"280\":1}}],[\"what\",{\"1\":{\"181\":2}}],[\"whose\",{\"1\":{\"179\":1}}],[\"which\",{\"1\":{\"179\":2}}],[\"where\",{\"1\":{\"176\":2,\"240\":1}}],[\"well\",{\"1\":{\"281\":1}}],[\"wed\",{\"1\":{\"276\":2}}],[\"wednesday\",{\"1\":{\"168\":1}}],[\"weeks\",{\"1\":{\"273\":1}}],[\"web\",{\"0\":{\"228\":1},\"1\":{\"218\":1,\"226\":2,\"228\":1}}],[\"weixin\",{\"1\":{\"142\":1}}],[\"w\",{\"1\":{\"140\":1,\"185\":1}}],[\"was\",{\"1\":{\"107\":1}}],[\"warnings\",{\"1\":{\"113\":1}}],[\"warning\",{\"1\":{\"107\":1,\"113\":2,\"212\":1}}],[\"wangfeng\",{\"1\":{\"49\":6,\"100\":2}}],[\"wangfeng1996\",{\"1\":{\"3\":2}}],[\"width\",{\"1\":{\"187\":7}}],[\"wikipedia\",{\"1\":{\"292\":1}}],[\"wiki\",{\"1\":{\"133\":1,\"292\":1}}],[\"will\",{\"1\":{\"107\":1}}],[\"withzonesameinstant\",{\"1\":{\"276\":1}}],[\"withnano\",{\"1\":{\"271\":1}}],[\"without\",{\"1\":{\"264\":1}}],[\"with\",{\"0\":{\"286\":1},\"1\":{\"61\":1,\"208\":1,\"211\":1,\"226\":1,\"274\":4,\"286\":2,\"292\":2}}],[\"window\",{\"1\":{\"129\":1,\"190\":1}}],[\"windows\",{\"0\":{\"58\":1},\"1\":{\"53\":1,\"61\":1,\"190\":1,\"208\":1,\"214\":4,\"227\":1}}],[\"win\",{\"1\":{\"72\":1,\"107\":1}}],[\"win操作\",{\"1\":{\"52\":1}}],[\"wget\",{\"1\":{\"15\":2,\"21\":1,\"133\":2}}],[\"www\",{\"1\":{\"3\":1,\"150\":1,\"159\":2,\"181\":4,\"236\":1,\"244\":1,\"292\":3}}],[\"ffm\",{\"1\":{\"235\":2}}],[\"fmt\",{\"1\":{\"164\":2}}],[\"function<\",{\"1\":{\"259\":1}}],[\"functionalinterface注解无关\",{\"1\":{\"249\":1}}],[\"functionalinterface\",{\"1\":{\"249\":2,\"253\":3}}],[\"functional\",{\"0\":{\"249\":1},\"1\":{\"255\":1,\"278\":1}}],[\"functiondescriptor和symbollookup\",{\"1\":{\"235\":1}}],[\"function\",{\"0\":{\"233\":1},\"1\":{\"216\":1,\"226\":1,\"234\":1,\"235\":1,\"239\":1,\"249\":1,\"253\":1}}],[\"fullgc\",{\"1\":{\"144\":2}}],[\"full\",{\"0\":{\"144\":1},\"1\":{\"141\":1,\"144\":4}}],[\"future2\",{\"1\":{\"238\":1,\"245\":1}}],[\"future<string>\",{\"1\":{\"238\":1,\"245\":1}}],[\"future<integer>\",{\"1\":{\"238\":1,\"245\":1}}],[\"future1\",{\"1\":{\"238\":1,\"245\":1}}],[\"future\",{\"1\":{\"107\":1,\"179\":1}}],[\"feature\",{\"1\":{\"179\":3}}],[\"features\",{\"0\":{\"299\":1},\"1\":{\"62\":1,\"150\":2,\"159\":2,\"179\":1,\"181\":3,\"292\":1}}],[\"fetch\",{\"1\":{\"133\":2}}],[\"f9\",{\"1\":{\"115\":1}}],[\"f7\",{\"1\":{\"115\":2}}],[\"f8\",{\"1\":{\"115\":3}}],[\"failed\",{\"1\":{\"107\":1}}],[\"family\",{\"1\":{\"46\":1}}],[\"firstdayofmonth\",{\"1\":{\"274\":1}}],[\"firstdayofthismonth\",{\"1\":{\"274\":1}}],[\"first\",{\"1\":{\"274\":3,\"282\":1}}],[\"field\",{\"1\":{\"184\":1,\"211\":1}}],[\"finalization\",{\"1\":{\"226\":1}}],[\"final\",{\"1\":{\"142\":1,\"172\":1,\"187\":3,\"199\":2,\"210\":1,\"231\":1,\"240\":1,\"248\":1,\"256\":1,\"264\":2,\"284\":2,\"286\":6,\"287\":2}}],[\"findbugs\",{\"1\":{\"61\":1}}],[\"filters\",{\"1\":{\"216\":1}}],[\"filter\",{\"1\":{\"61\":3,\"259\":1,\"260\":3,\"261\":3,\"267\":1,\"268\":1}}],[\"fileinputstream\",{\"1\":{\"257\":1}}],[\"file4\",{\"1\":{\"163\":1}}],[\"file3\",{\"1\":{\"163\":1}}],[\"file2\",{\"1\":{\"163\":1}}],[\"filepath4\",{\"1\":{\"163\":3}}],[\"filepath3\",{\"1\":{\"163\":3}}],[\"filepath2\",{\"1\":{\"163\":3}}],[\"filepath1\",{\"1\":{\"163\":3}}],[\"file1\",{\"1\":{\"163\":1}}],[\"filesystems\",{\"0\":{\"173\":1},\"1\":{\"173\":1}}],[\"files\",{\"0\":{\"163\":1},\"1\":{\"163\":10,\"281\":1}}],[\"file\",{\"1\":{\"56\":1,\"61\":2,\"64\":1,\"67\":1,\"69\":1,\"72\":1,\"75\":1,\"82\":1,\"84\":2,\"86\":1,\"90\":1,\"97\":5,\"103\":1,\"107\":1,\"113\":1,\"124\":1,\"150\":1,\"159\":1,\"181\":1,\"201\":1,\"215\":1,\"225\":1,\"233\":1,\"238\":1,\"246\":1,\"278\":1,\"286\":4,\"292\":1}}],[\"friend\",{\"1\":{\"177\":1}}],[\"friday\",{\"1\":{\"168\":1}}],[\"frameworks\",{\"1\":{\"197\":1}}],[\"framework\",{\"1\":{\"124\":1}}],[\"frame\",{\"1\":{\"115\":1}}],[\"free\",{\"1\":{\"61\":1}}],[\"fromarray\",{\"1\":{\"231\":2}}],[\"from\",{\"1\":{\"49\":2,\"176\":2,\"240\":1}}],[\"flatmapresult\",{\"1\":{\"264\":2}}],[\"flatmap是将每个元素都映射为一个集合\",{\"1\":{\"264\":1}}],[\"flatmap\",{\"1\":{\"264\":8,\"268\":1}}],[\"floatvector\",{\"1\":{\"231\":4}}],[\"floating\",{\"1\":{\"216\":1}}],[\"float\",{\"1\":{\"187\":2,\"231\":6}}],[\"flowable\",{\"1\":{\"61\":2}}],[\"flow\",{\"1\":{\"61\":5,\"289\":6}}],[\"flight\",{\"1\":{\"158\":1}}],[\"flush\",{\"1\":{\"49\":2}}],[\"f4\",{\"1\":{\"58\":1}}],[\"f10\",{\"1\":{\"56\":1,\"115\":1}}],[\"f2\",{\"1\":{\"56\":1,\"58\":1}}],[\"f3\",{\"1\":{\"56\":1,\"58\":1}}],[\"following\",{\"1\":{\"229\":1}}],[\"foo\",{\"1\":{\"162\":2,\"219\":2}}],[\"found\",{\"1\":{\"146\":2,\"150\":1,\"159\":1,\"181\":1,\"201\":1,\"215\":1,\"225\":1,\"233\":1,\"238\":1,\"246\":1,\"278\":1,\"292\":1}}],[\"font\",{\"1\":{\"32\":1}}],[\"fonts\",{\"0\":{\"32\":1},\"1\":{\"32\":1}}],[\"foreach遍历\",{\"1\":{\"260\":1}}],[\"foreach\",{\"1\":{\"254\":4,\"259\":1,\"260\":4,\"261\":1,\"287\":4}}],[\"foreg\",{\"1\":{\"253\":1}}],[\"foreign\",{\"0\":{\"233\":1},\"1\":{\"216\":1,\"226\":1,\"234\":1,\"235\":1,\"239\":1}}],[\"forkjoinpool\",{\"1\":{\"261\":4}}],[\"forkjoin\",{\"1\":{\"261\":2}}],[\"fork\",{\"1\":{\"238\":2,\"245\":2}}],[\"forremoval\",{\"1\":{\"207\":3}}],[\"forremoval=true\",{\"1\":{\"176\":3}}],[\"force\",{\"1\":{\"115\":1}}],[\"form\",{\"1\":{\"179\":1}}],[\"formatdate\",{\"1\":{\"273\":2}}],[\"formatted\",{\"1\":{\"176\":2,\"219\":6,\"242\":6}}],[\"formatterpatternswitch\",{\"1\":{\"219\":1,\"242\":1}}],[\"formatter插件\",{\"1\":{\"80\":1}}],[\"formatter\",{\"1\":{\"61\":2,\"219\":1,\"242\":1}}],[\"format\",{\"1\":{\"164\":1,\"219\":8,\"242\":8,\"270\":3,\"271\":22,\"273\":4,\"274\":7,\"276\":2}}],[\"formulae\",{\"1\":{\"10\":1,\"18\":2,\"38\":1}}],[\"formula\",{\"1\":{\"10\":1}}],[\"for\",{\"1\":{\"8\":1,\"49\":2,\"64\":1,\"69\":1,\"72\":1,\"82\":1,\"84\":1,\"86\":1,\"91\":1,\"97\":1,\"142\":2,\"146\":1,\"207\":2,\"216\":3,\"226\":2,\"228\":1,\"231\":3,\"234\":1,\"235\":2,\"254\":1,\"261\":1,\"264\":1,\"292\":1}}],[\"fssl\",{\"1\":{\"14\":2,\"133\":1}}],[\"f\",{\"1\":{\"3\":2,\"58\":1,\"140\":2,\"185\":1,\"219\":2,\"242\":2,\"248\":2,\"253\":2,\"255\":2,\"263\":1,\"287\":1}}],[\"iterate\",{\"1\":{\"287\":9}}],[\"itermcolors文件\",{\"1\":{\"128\":1}}],[\"iterm\",{\"1\":{\"128\":2}}],[\"iterm2常用操作包括主题选择\",{\"1\":{\"127\":1}}],[\"iterm2是一款相对比较好用的终端工具\",{\"1\":{\"127\":1}}],[\"iterm2介绍\",{\"0\":{\"127\":1}}],[\"iterm2\",{\"0\":{\"126\":1,\"140\":1,\"298\":1},\"1\":{\"127\":3,\"128\":1,\"129\":1}}],[\"itemevent\",{\"1\":{\"253\":1}}],[\"itemstatechanged\",{\"1\":{\"253\":1}}],[\"itemlistener\",{\"1\":{\"253\":1}}],[\"it\",{\"1\":{\"253\":1}}],[\"illegalstateexception\",{\"1\":{\"260\":1}}],[\"illegal\",{\"1\":{\"212\":1}}],[\"ibm\",{\"1\":{\"181\":1}}],[\"isnotempty\",{\"1\":{\"263\":1}}],[\"ispresent\",{\"1\":{\"229\":2,\"264\":2,\"265\":1,\"267\":1}}],[\"is\",{\"1\":{\"177\":1,\"179\":3,\"181\":2,\"184\":1,\"207\":1,\"253\":1}}],[\"issues\",{\"1\":{\"159\":1}}],[\"isempty\",{\"1\":{\"154\":1,\"185\":1,\"192\":2,\"260\":1}}],[\"isblank\",{\"1\":{\"153\":1}}],[\"ids\",{\"1\":{\"276\":1}}],[\"id`\",{\"1\":{\"176\":4}}],[\"id\",{\"1\":{\"142\":1,\"288\":1}}],[\"ide\",{\"1\":{\"62\":1,\"72\":1,\"103\":1,\"107\":1,\"211\":1,\"280\":3}}],[\"ide激活\",{\"0\":{\"54\":1}}],[\"idea需安装插件easy\",{\"1\":{\"99\":1}}],[\"idea设置新建类时\",{\"0\":{\"97\":1}}],[\"idea每次打开新项目时\",{\"1\":{\"75\":1}}],[\"idea这里会自动识别\",{\"1\":{\"72\":1}}],[\"ideaiu\",{\"1\":{\"72\":1,\"107\":1}}],[\"ideavim\",{\"1\":{\"62\":1}}],[\"ideajad\",{\"1\":{\"61\":1}}],[\"idea\",{\"0\":{\"51\":1,\"52\":1,\"61\":1,\"297\":1},\"1\":{\"58\":1,\"61\":10,\"62\":3,\"64\":3,\"67\":3,\"69\":1,\"72\":1,\"73\":1,\"75\":3,\"82\":1,\"84\":1,\"86\":1,\"88\":1,\"91\":2,\"92\":1,\"97\":1,\"103\":1,\"113\":1,\"115\":1,\"116\":1,\"117\":1,\"118\":2,\"119\":1,\"121\":1,\"124\":1,\"125\":1,\"145\":1,\"226\":1}}],[\"identified\",{\"1\":{\"49\":3}}],[\"i==0\",{\"1\":{\"91\":1}}],[\"i++\",{\"1\":{\"91\":1,\"207\":1,\"231\":2,\"235\":2}}],[\"i\",{\"1\":{\"91\":4,\"156\":4,\"184\":1,\"207\":2,\"219\":4,\"231\":19,\"235\":8,\"242\":4,\"253\":2,\"256\":3,\"287\":6,\"291\":1}}],[\"implicitallocator\",{\"1\":{\"235\":1}}],[\"implementation\",{\"1\":{\"179\":1}}],[\"implements\",{\"1\":{\"172\":1,\"187\":1,\"248\":1,\"284\":1}}],[\"import\",{\"1\":{\"86\":1,\"128\":1}}],[\"immutablecollections\",{\"1\":{\"145\":1}}],[\"images\",{\"1\":{\"281\":1}}],[\"image\",{\"1\":{\"62\":1}}],[\"img\",{\"1\":{\"18\":1,\"20\":1,\"37\":1,\"38\":1}}],[\"iedis\",{\"1\":{\"61\":1}}],[\"ignore\",{\"1\":{\"61\":1}}],[\"icon\",{\"1\":{\"61\":1}}],[\"icons\",{\"1\":{\"61\":2}}],[\"ifpresentorelse\",{\"1\":{\"287\":4}}],[\"ifpresent\",{\"1\":{\"263\":1,\"265\":1,\"287\":1}}],[\"ifn\",{\"1\":{\"58\":1}}],[\"if\",{\"1\":{\"58\":1,\"91\":2,\"169\":2,\"185\":1,\"210\":2,\"219\":7,\"229\":1,\"242\":6,\"263\":2,\"264\":3,\"265\":1,\"266\":3,\"267\":1}}],[\"ipc\",{\"1\":{\"214\":1}}],[\"ip地址\",{\"1\":{\"112\":1}}],[\"ip\",{\"1\":{\"49\":5,\"214\":3}}],[\"invocation\",{\"1\":{\"266\":1}}],[\"invoke\",{\"1\":{\"235\":1,\"266\":1,\"290\":2,\"291\":1}}],[\"inetaddress\",{\"1\":{\"232\":1}}],[\"indirectly\",{\"1\":{\"240\":1}}],[\"indianapolis\",{\"1\":{\"176\":2}}],[\"index\",{\"1\":{\"181\":1}}],[\"independent\",{\"1\":{\"177\":1}}],[\"indent\",{\"1\":{\"162\":3}}],[\"inputstream\",{\"1\":{\"291\":1}}],[\"input\",{\"1\":{\"162\":2}}],[\"inc\",{\"1\":{\"207\":1}}],[\"incubator\",{\"1\":{\"152\":1,\"208\":1}}],[\"includes\",{\"1\":{\"97\":1}}],[\"intsummarystatistics\",{\"1\":{\"260\":1}}],[\"intfunction<a\",{\"1\":{\"259\":1}}],[\"int\",{\"1\":{\"207\":2,\"211\":1,\"219\":2,\"231\":3,\"235\":2,\"242\":2,\"253\":1,\"256\":1,\"263\":3,\"264\":1,\"273\":2}}],[\"intoarray\",{\"1\":{\"231\":1}}],[\"into\",{\"1\":{\"115\":2}}],[\"internals\",{\"1\":{\"216\":1}}],[\"internet\",{\"1\":{\"214\":1,\"226\":1}}],[\"interface提供的方式实现\",{\"1\":{\"248\":2}}],[\"interfacenewimpl\",{\"1\":{\"248\":3}}],[\"interfacenew1接口没有继承关系的话\",{\"1\":{\"248\":1}}],[\"interfacenew1接口\",{\"1\":{\"248\":1}}],[\"interfacenew1\",{\"1\":{\"248\":4}}],[\"interfacenew\",{\"1\":{\"248\":6}}],[\"interfaces\",{\"1\":{\"228\":1,\"249\":1}}],[\"interface\",{\"0\":{\"248\":1,\"249\":1},\"1\":{\"192\":1,\"232\":1,\"235\":1,\"247\":1,\"248\":13,\"253\":3,\"255\":2,\"278\":2,\"285\":1}}],[\"integerlist2\",{\"1\":{\"287\":2}}],[\"integerlist\",{\"1\":{\"287\":2}}],[\"integer\",{\"1\":{\"207\":5,\"219\":2,\"242\":2,\"253\":6,\"256\":2,\"263\":1}}],[\"integration\",{\"1\":{\"61\":1}}],[\"intellijad\",{\"1\":{\"61\":1}}],[\"intellijidea2020\",{\"1\":{\"110\":1}}],[\"intellijidea2021\",{\"1\":{\"53\":1}}],[\"intellijidea2022\",{\"1\":{\"53\":1,\"125\":1}}],[\"intellij\",{\"0\":{\"51\":1,\"52\":1,\"97\":1},\"1\":{\"62\":1,\"226\":1}}],[\"intel\",{\"1\":{\"13\":1}}],[\"in\",{\"1\":{\"58\":1,\"61\":1,\"107\":2,\"179\":2,\"181\":2,\"184\":2,\"211\":1,\"226\":1,\"240\":2,\"292\":1}}],[\"inner\",{\"1\":{\"211\":2}}],[\"inn\",{\"1\":{\"58\":1}}],[\"instance\",{\"1\":{\"264\":1}}],[\"instanceof\",{\"0\":{\"169\":1,\"189\":1,\"200\":1,\"210\":1},\"1\":{\"169\":4,\"200\":1,\"210\":4,\"219\":8,\"241\":1,\"242\":8}}],[\"install\",{\"1\":{\"13\":1,\"14\":3,\"15\":2,\"26\":2,\"31\":1,\"32\":1,\"40\":1,\"41\":1,\"44\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"61\":1,\"127\":1,\"133\":4,\"137\":1}}],[\"instrument\",{\"1\":{\"107\":1}}],[\"inspector\",{\"1\":{\"61\":1}}],[\"insert\",{\"1\":{\"58\":1,\"185\":1}}],[\"info\",{\"1\":{\"22\":1,\"26\":1,\"281\":2,\"288\":1}}],[\"initialized\",{\"1\":{\"211\":1}}],[\"initialization\",{\"1\":{\"107\":1}}],[\"initsign\",{\"1\":{\"195\":1}}],[\"init\",{\"1\":{\"3\":1,\"107\":1}}],[\"ioexception\",{\"1\":{\"163\":1}}],[\"io\",{\"1\":{\"3\":3,\"257\":1,\"284\":1}}],[\"hh\",{\"1\":{\"270\":1,\"271\":7,\"276\":2}}],[\"history\",{\"1\":{\"292\":2}}],[\"hidden\",{\"0\":{\"197\":1}}],[\"highlighting\",{\"1\":{\"137\":6}}],[\"highlightbracketpair\",{\"1\":{\"61\":1}}],[\"hasnext\",{\"1\":{\"287\":1}}],[\"has\",{\"1\":{\"260\":1}}],[\"hashmap<>\",{\"1\":{\"254\":1}}],[\"hashmap<string\",{\"1\":{\"142\":1}}],[\"hashmap\",{\"1\":{\"247\":1}}],[\"hashcode\",{\"1\":{\"187\":2,\"207\":1}}],[\"handle\",{\"1\":{\"291\":1}}],[\"handles\",{\"1\":{\"226\":1}}],[\"hangzhou\",{\"1\":{\"112\":1}}],[\"htm\",{\"1\":{\"150\":1,\"181\":1}}],[\"html\",{\"1\":{\"127\":1,\"159\":1,\"176\":2,\"181\":2,\"292\":1}}],[\"httpresponse\",{\"1\":{\"152\":3}}],[\"httpresponse<string>\",{\"1\":{\"152\":1}}],[\"httprequest\",{\"1\":{\"152\":1}}],[\"httpclient\",{\"1\":{\"152\":1}}],[\"http\",{\"0\":{\"152\":1},\"1\":{\"38\":1,\"151\":1,\"152\":5,\"228\":1}}],[\"https\",{\"1\":{\"3\":2,\"14\":4,\"18\":1,\"36\":2,\"38\":1,\"48\":2,\"50\":3,\"61\":1,\"127\":1,\"128\":3,\"133\":5,\"137\":1,\"142\":1,\"150\":3,\"152\":1,\"159\":2,\"181\":5,\"236\":1,\"244\":1,\"279\":1,\"292\":4}}],[\"hy000\",{\"1\":{\"49\":1}}],[\"h\",{\"1\":{\"26\":1,\"140\":1}}],[\"heap\",{\"1\":{\"158\":1}}],[\"header\",{\"1\":{\"97\":2}}],[\"head\",{\"1\":{\"14\":2,\"91\":2}}],[\"here`命令行输入命令记住密码\",{\"1\":{\"65\":1}}],[\"hello\",{\"1\":{\"280\":1}}],[\"helloworld\",{\"0\":{\"1\":1}}],[\"helper\",{\"1\":{\"61\":1,\"65\":1}}],[\"help\",{\"1\":{\"14\":1,\"73\":1,\"105\":1}}],[\"how\",{\"1\":{\"229\":1}}],[\"howtodoinjava\",{\"1\":{\"150\":1}}],[\"howell\",{\"1\":{\"9\":1}}],[\"hotspot\",{\"1\":{\"148\":2,\"203\":1,\"204\":1,\"206\":1,\"225\":1}}],[\"host\",{\"1\":{\"49\":1}}],[\"home环境变量之后\",{\"1\":{\"72\":1}}],[\"home=$\",{\"1\":{\"45\":1}}],[\"home路径\",{\"1\":{\"45\":1}}],[\"home\",{\"0\":{\"72\":1},\"1\":{\"45\":10,\"46\":2,\"72\":1}}],[\"homebrew介绍\",{\"0\":{\"9\":1}}],[\"homebrew\",{\"0\":{\"8\":1,\"10\":1,\"11\":1,\"12\":1,\"28\":1,\"32\":1,\"295\":1},\"1\":{\"8\":2,\"9\":4,\"10\":4,\"14\":11,\"15\":2,\"18\":2,\"23\":1,\"27\":1,\"28\":2,\"29\":1,\"30\":1,\"31\":3,\"32\":2,\"34\":2,\"35\":3,\"36\":4,\"37\":2,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"44\":1,\"50\":4}}],[\"hombrew\",{\"0\":{\"27\":1},\"1\":{\"27\":1}}],[\"mm\",{\"1\":{\"270\":4,\"271\":14,\"272\":1,\"273\":2,\"274\":1,\"276\":4}}],[\"mul\",{\"1\":{\"231\":2}}],[\"musl\",{\"1\":{\"214\":3}}],[\"must\",{\"1\":{\"179\":1}}],[\"msi\",{\"1\":{\"208\":1}}],[\"msg\",{\"1\":{\"195\":2}}],[\"mlfhna8tc6d\",{\"1\":{\"195\":1}}],[\"mwf\",{\"1\":{\"185\":1}}],[\"mkyong\",{\"1\":{\"176\":2,\"181\":1}}],[\"mb\",{\"1\":{\"155\":1}}],[\"mp\",{\"1\":{\"142\":1}}],[\"md\",{\"1\":{\"62\":2}}],[\"modules\",{\"1\":{\"281\":1}}],[\"module\",{\"1\":{\"281\":8}}],[\"mode\",{\"1\":{\"44\":1,\"62\":1}}],[\"mouse\",{\"1\":{\"235\":2}}],[\"month\",{\"1\":{\"274\":3}}],[\"monday\",{\"1\":{\"168\":1}}],[\"mongo\",{\"1\":{\"61\":1}}],[\"mongo4idea\",{\"1\":{\"61\":1}}],[\"momo\",{\"1\":{\"61\":1}}],[\"melon\",{\"1\":{\"264\":3}}],[\"mercurial\",{\"1\":{\"214\":3}}],[\"mergedstring\",{\"1\":{\"260\":1}}],[\"merge\",{\"1\":{\"193\":1}}],[\"means\",{\"1\":{\"179\":1}}],[\"metaspace\",{\"1\":{\"206\":3}}],[\"methodprivate\",{\"1\":{\"285\":1}}],[\"methodparameters\",{\"1\":{\"91\":1}}],[\"methods\",{\"1\":{\"240\":1}}],[\"methodhandles\",{\"1\":{\"290\":1,\"291\":1}}],[\"methodhandle\",{\"1\":{\"235\":1,\"290\":1}}],[\"method\",{\"1\":{\"91\":2,\"226\":1,\"230\":1,\"240\":2,\"249\":1,\"291\":1}}],[\"methodreturntype\",{\"1\":{\"91\":1}}],[\"metricsreloaded\",{\"1\":{\"62\":1}}],[\"memoryaddress\",{\"1\":{\"235\":2,\"243\":1}}],[\"memoryaddress和segmentallocator\",{\"1\":{\"235\":1}}],[\"memorysession拆分为arena和segmentscope\",{\"1\":{\"243\":1}}],[\"memorysession\",{\"1\":{\"235\":1}}],[\"memorysegment\",{\"1\":{\"235\":3,\"243\":1}}],[\"memorylayout\",{\"1\":{\"235\":1,\"243\":1}}],[\"memory\",{\"0\":{\"233\":1},\"1\":{\"61\":1,\"216\":1,\"226\":1,\"234\":1,\"235\":1,\"239\":1}}],[\"message\",{\"1\":{\"3\":1}}],[\"myinterface\",{\"1\":{\"285\":1}}],[\"my\",{\"0\":{\"130\":1,\"131\":1,\"134\":1,\"135\":1},\"1\":{\"133\":2,\"134\":2,\"135\":2,\"136\":1,\"137\":1,\"174\":2,\"281\":4}}],[\"mybatisx\",{\"1\":{\"61\":1}}],[\"mybatis\",{\"1\":{\"61\":4,\"62\":1}}],[\"mybatisplus\",{\"1\":{\"61\":1}}],[\"mybatiscodehelperpro\",{\"1\":{\"61\":1}}],[\"mysql的所有用户信息\",{\"1\":{\"49\":1}}],[\"mysql的安装\",{\"0\":{\"49\":1}}],[\"mysql新用户赋予权限\",{\"1\":{\"49\":1}}],[\"mysql创建新的用户\",{\"1\":{\"49\":1}}],[\"mysql在zsh环境变量配置\",{\"1\":{\"49\":1}}],[\"mysqld\",{\"1\":{\"49\":1}}],[\"mysql\",{\"1\":{\"25\":1,\"49\":13}}],[\"mvn\",{\"1\":{\"46\":1}}],[\"misc\",{\"1\":{\"209\":1,\"212\":1,\"235\":1,\"290\":1}}],[\"mismatch\",{\"1\":{\"163\":8}}],[\"missing\",{\"1\":{\"8\":1,\"107\":1,\"146\":1}}],[\"mind\",{\"1\":{\"61\":1}}],[\"mini\",{\"1\":{\"61\":1}}],[\"mixed\",{\"1\":{\"44\":1}}],[\"mirrors\",{\"1\":{\"14\":4,\"35\":2,\"36\":2}}],[\"marked\",{\"1\":{\"207\":1}}],[\"mark\",{\"1\":{\"190\":1}}],[\"markdown\",{\"1\":{\"61\":2,\"62\":1}}],[\"main>>5\",{\"1\":{\"261\":1}}],[\"main\",{\"1\":{\"184\":4,\"248\":1,\"264\":2}}],[\"mail\",{\"1\":{\"61\":1}}],[\"may\",{\"1\":{\"179\":1}}],[\"mage\",{\"1\":{\"129\":1}}],[\"math\",{\"1\":{\"142\":1}}],[\"material\",{\"1\":{\"61\":2}}],[\"match\",{\"1\":{\"58\":1}}],[\"matching\",{\"1\":{\"45\":1,\"216\":1,\"226\":1,\"234\":1}}],[\"mapresult\",{\"1\":{\"264\":2}}],[\"mapandflatmapexample\",{\"1\":{\"264\":1}}],[\"maptoint\",{\"1\":{\"260\":1}}],[\"map<integer\",{\"1\":{\"254\":1}}],[\"map<string\",{\"1\":{\"173\":2}}],[\"map\",{\"1\":{\"61\":2,\"142\":1,\"145\":1,\"254\":3,\"259\":1,\"260\":3,\"263\":2,\"264\":9,\"268\":2,\"283\":3}}],[\"mapper\",{\"1\":{\"61\":3,\"259\":1}}],[\"manifest\",{\"1\":{\"107\":1}}],[\"manipulation\",{\"1\":{\"61\":1}}],[\"manage\",{\"1\":{\"103\":1}}],[\"manager\",{\"1\":{\"8\":1,\"199\":3,\"216\":1}}],[\"manpage\",{\"1\":{\"50\":2}}],[\"maven配置\",{\"0\":{\"68\":1,\"69\":1}}],[\"maven在zsh环境变量配置\",{\"1\":{\"46\":1}}],[\"maven\",{\"1\":{\"46\":5,\"61\":4,\"69\":1}}],[\"maven的安装\",{\"0\":{\"46\":1}}],[\"mac\",{\"1\":{\"46\":2,\"53\":1,\"61\":2,\"127\":1,\"227\":1}}],[\"machines\",{\"1\":{\"45\":1}}],[\"macappstore\",{\"1\":{\"38\":1}}],[\"macos常用快捷键\",{\"0\":{\"59\":1}}],[\"macos版本为mojave\",{\"1\":{\"13\":1}}],[\"macos\",{\"1\":{\"8\":3,\"9\":1,\"10\":1,\"26\":2,\"148\":1,\"190\":1,\"208\":1,\"216\":4}}],[\"maxsize\",{\"1\":{\"259\":2}}],[\"maxgcpausemillis=200\",{\"1\":{\"75\":1}}],[\"max\",{\"1\":{\"9\":1}}],[\"master\",{\"1\":{\"3\":2,\"133\":3}}],[\"m\",{\"1\":{\"3\":1,\"185\":1}}],[\"availability\",{\"1\":{\"279\":1}}],[\"avh\",{\"1\":{\"61\":1}}],[\"abc\",{\"1\":{\"260\":4,\"261\":2}}],[\"abstract\",{\"1\":{\"199\":1,\"248\":6,\"249\":1}}],[\"a>\",{\"1\":{\"259\":1}}],[\"as\",{\"1\":{\"281\":3}}],[\"asia\",{\"1\":{\"276\":5}}],[\"aslist\",{\"1\":{\"253\":1,\"254\":1,\"260\":3,\"261\":2,\"264\":1}}],[\"assert\",{\"1\":{\"235\":1}}],[\"assertequals\",{\"1\":{\"163\":2}}],[\"assistant\",{\"1\":{\"61\":2}}],[\"anymatch\",{\"1\":{\"259\":1}}],[\"annotation\",{\"1\":{\"250\":1}}],[\"and\",{\"1\":{\"61\":1,\"97\":2,\"107\":1,\"113\":1,\"150\":1,\"159\":2,\"177\":1,\"179\":2,\"207\":1,\"216\":1,\"228\":1,\"266\":1,\"281\":2,\"292\":1}}],[\"aarch64\",{\"1\":{\"214\":3,\"216\":2}}],[\"after2\",{\"1\":{\"273\":1}}],[\"after\",{\"1\":{\"273\":4}}],[\"afterday\",{\"1\":{\"273\":1}}],[\"af\",{\"1\":{\"214\":1}}],[\"atzone\",{\"1\":{\"276\":1}}],[\"at\",{\"1\":{\"179\":1,\"184\":2}}],[\"atomic\",{\"1\":{\"290\":1}}],[\"atomicinteger\",{\"1\":{\"207\":1}}],[\"atom\",{\"1\":{\"61\":1,\"62\":1}}],[\"age\",{\"1\":{\"176\":2,\"211\":3,\"263\":6}}],[\"agent\",{\"1\":{\"107\":3}}],[\"aot\",{\"0\":{\"222\":1},\"1\":{\"148\":1,\"216\":2,\"222\":2}}],[\"aop\",{\"1\":{\"124\":1}}],[\"ahead\",{\"1\":{\"148\":1}}],[\"author\",{\"1\":{\"91\":1,\"92\":1,\"96\":1,\"97\":2,\"100\":2}}],[\"autosuggestions\",{\"1\":{\"138\":3}}],[\"automatically\",{\"1\":{\"88\":1}}],[\"auto\",{\"1\":{\"86\":1}}],[\"accept\",{\"1\":{\"265\":2}}],[\"access\",{\"1\":{\"212\":1}}],[\"acejump\",{\"1\":{\"62\":1}}],[\"action\",{\"1\":{\"259\":1,\"287\":1}}],[\"actions插件\",{\"1\":{\"82\":1}}],[\"actions\",{\"1\":{\"61\":1,\"82\":1}}],[\"activation\",{\"1\":{\"216\":1}}],[\"activate\",{\"1\":{\"62\":1}}],[\"ai\",{\"1\":{\"61\":1}}],[\"aixcoder\",{\"1\":{\"61\":1}}],[\"arm64\",{\"1\":{\"214\":1}}],[\"are\",{\"1\":{\"179\":1}}],[\"args\",{\"1\":{\"176\":2,\"248\":1,\"264\":2}}],[\"article\",{\"1\":{\"163\":3}}],[\"arthas\",{\"1\":{\"61\":2}}],[\"arrays\",{\"1\":{\"235\":1,\"253\":1,\"254\":1,\"259\":1,\"260\":3,\"261\":2,\"264\":3}}],[\"array\",{\"1\":{\"142\":1,\"257\":1,\"260\":1,\"264\":4}}],[\"arraylist<>\",{\"1\":{\"142\":1,\"145\":1}}],[\"archived\",{\"1\":{\"279\":1}}],[\"archiveclassesatexit=my\",{\"1\":{\"174\":1}}],[\"arch\",{\"1\":{\"46\":1}}],[\"already\",{\"1\":{\"260\":1}}],[\"always\",{\"1\":{\"216\":1}}],[\"alpine\",{\"1\":{\"214\":3}}],[\"algorithm\",{\"1\":{\"195\":1}}],[\"aliyuncs\",{\"1\":{\"112\":1}}],[\"alibaba\",{\"1\":{\"61\":2}}],[\"alt\",{\"1\":{\"61\":5,\"115\":4}}],[\"alt+\",{\"1\":{\"58\":2}}],[\"allmatch\",{\"1\":{\"259\":1}}],[\"allocateutf8string\",{\"1\":{\"235\":1}}],[\"allocatearray\",{\"1\":{\"235\":1}}],[\"allocator\",{\"1\":{\"235\":3}}],[\"all\",{\"1\":{\"49\":2,\"179\":1,\"228\":1,\"292\":1}}],[\"administrator\",{\"1\":{\"110\":1}}],[\"adoptopenjdk8\",{\"1\":{\"44\":3}}],[\"adoptopenjdk\",{\"1\":{\"44\":5,\"45\":6,\"46\":2}}],[\"additemlistener\",{\"1\":{\"253\":2}}],[\"additional\",{\"1\":{\"179\":1}}],[\"addressoptional\",{\"1\":{\"264\":3}}],[\"address\",{\"1\":{\"226\":1,\"235\":3,\"264\":4}}],[\"add\",{\"1\":{\"3\":1,\"212\":1,\"231\":1,\"273\":1}}],[\"apline\",{\"1\":{\"214\":2}}],[\"api集成到\",{\"1\":{\"203\":1,\"225\":1,\"231\":1,\"237\":1,\"246\":1}}],[\"api\",{\"0\":{\"203\":1,\"209\":1,\"218\":1,\"224\":1,\"225\":1,\"229\":1,\"231\":1,\"233\":1,\"235\":1,\"237\":1,\"243\":1,\"246\":1,\"269\":1,\"288\":1},\"1\":{\"61\":1,\"62\":1,\"152\":2,\"172\":2,\"201\":2,\"203\":5,\"207\":5,\"208\":1,\"209\":6,\"212\":3,\"214\":4,\"216\":5,\"218\":2,\"223\":1,\"224\":4,\"225\":5,\"226\":5,\"230\":1,\"231\":5,\"233\":4,\"234\":3,\"235\":8,\"237\":2,\"238\":2,\"239\":3,\"243\":4,\"245\":2,\"246\":4,\"260\":1,\"274\":1,\"277\":2,\"278\":1,\"290\":1,\"291\":1}}],[\"app\",{\"1\":{\"174\":4}}],[\"appcds\",{\"1\":{\"147\":1,\"174\":2}}],[\"applications\",{\"1\":{\"127\":1}}],[\"application\",{\"1\":{\"53\":1,\"147\":1}}],[\"applet\",{\"0\":{\"218\":1},\"1\":{\"216\":2,\"218\":2,\"223\":1}}],[\"apple\",{\"1\":{\"13\":1,\"264\":3}}],[\"appdata\",{\"1\":{\"53\":1,\"110\":1,\"125\":1}}],[\"apt\",{\"1\":{\"8\":1}}],[\"a\",{\"1\":{\"3\":1,\"107\":1,\"140\":1,\"142\":1,\"153\":2,\"177\":2,\"179\":3,\"184\":2,\"185\":2,\"207\":1,\"211\":2,\"231\":10,\"240\":1,\"253\":1,\"259\":3,\"281\":2}}],[\">v==1\",{\"1\":{\"268\":1}}],[\">打印元素\",{\"1\":{\"260\":1}}],[\">system\",{\"1\":{\"254\":1,\"261\":1}}],[\">background\",{\"1\":{\"129\":1}}],[\">editor\",{\"1\":{\"97\":1}}],[\">失败\",{\"1\":{\"96\":1}}],[\">成功\",{\"1\":{\"96\":1}}],[\">material\",{\"1\":{\"61\":1}}],[\">maven\",{\"1\":{\"61\":1}}],[\">gsonformatplus\",{\"1\":{\"61\":1}}],[\">generate\",{\"1\":{\"61\":1}}],[\">keymap\",{\"1\":{\"59\":2}}],[\">>\",{\"1\":{\"14\":2,\"46\":1,\"48\":1,\"261\":1}}],[\">\",{\"1\":{\"3\":1,\"17\":2,\"56\":2,\"58\":5,\"61\":6,\"64\":2,\"67\":2,\"69\":2,\"72\":2,\"73\":1,\"75\":2,\"82\":2,\"84\":2,\"86\":2,\"90\":3,\"91\":4,\"92\":2,\"96\":2,\"97\":5,\"101\":1,\"103\":1,\"105\":1,\"112\":2,\"113\":6,\"124\":4,\"125\":1,\"128\":2,\"129\":1,\"142\":1,\"146\":1,\"156\":2,\"162\":1,\"168\":4,\"173\":2,\"181\":1,\"185\":3,\"207\":1,\"219\":10,\"240\":2,\"242\":5,\"251\":2,\"253\":5,\"254\":1,\"256\":1,\"259\":1,\"260\":5,\"263\":3,\"264\":5,\"268\":2,\"275\":3,\"287\":7}}],[\"citywithoutflatmap\",{\"1\":{\"264\":5}}],[\"city\",{\"1\":{\"264\":2}}],[\"cityusingflatmap\",{\"1\":{\"264\":2}}],[\"cgi\",{\"1\":{\"228\":1}}],[\"cglibaopproxy\",{\"1\":{\"124\":1}}],[\"cwd\",{\"1\":{\"228\":1}}],[\"cms\",{\"1\":{\"155\":1,\"190\":1,\"282\":1}}],[\"c2\",{\"1\":{\"148\":3}}],[\"c1\",{\"1\":{\"148\":1}}],[\"c++98\",{\"1\":{\"204\":1}}],[\"c++14\",{\"1\":{\"204\":1}}],[\"c++\",{\"0\":{\"204\":1},\"1\":{\"148\":1,\"188\":2,\"204\":2,\"283\":3}}],[\"cp\",{\"1\":{\"134\":2,\"174\":2}}],[\"cpu\",{\"1\":{\"13\":2,\"203\":2,\"225\":2,\"231\":1,\"246\":1}}],[\"cst\",{\"1\":{\"276\":2}}],[\"cstringptr\",{\"1\":{\"235\":2}}],[\"cstring\",{\"1\":{\"235\":2}}],[\"csh\",{\"1\":{\"132\":1}}],[\"csdn\",{\"1\":{\"61\":1}}],[\"czq\",{\"1\":{\"92\":1}}],[\"current\",{\"1\":{\"288\":1}}],[\"currentprocess\",{\"1\":{\"288\":3}}],[\"currentthread\",{\"1\":{\"261\":1}}],[\"currenttimemillis\",{\"1\":{\"217\":1}}],[\"currcal\",{\"1\":{\"274\":2}}],[\"curve\",{\"1\":{\"195\":1}}],[\"cursor\",{\"1\":{\"115\":1}}],[\"curl\",{\"1\":{\"14\":2,\"133\":2}}],[\"custom\",{\"1\":{\"73\":1,\"105\":1,\"136\":1,\"137\":2,\"138\":1}}],[\"credential\",{\"1\":{\"65\":1}}],[\"createtempfile\",{\"1\":{\"163\":4}}],[\"created\",{\"1\":{\"97\":1}}],[\"create\",{\"1\":{\"49\":3,\"152\":1,\"217\":1}}],[\"chronounit\",{\"1\":{\"273\":2}}],[\"cherry\",{\"1\":{\"264\":3}}],[\"checkstyle\",{\"1\":{\"61\":1}}],[\"char\",{\"1\":{\"284\":1}}],[\"charsequence\",{\"0\":{\"192\":1},\"1\":{\"192\":2,\"284\":1}}],[\"changes\",{\"1\":{\"215\":1}}],[\"channels\",{\"1\":{\"214\":1}}],[\"chsh\",{\"1\":{\"13\":1,\"133\":1}}],[\"ctrl\",{\"0\":{\"82\":1},\"1\":{\"58\":2,\"61\":3,\"140\":7}}],[\"ctrl+\",{\"0\":{\"99\":1},\"1\":{\"61\":1}}],[\"ctrl+shift+alt+u\",{\"1\":{\"58\":1}}],[\"ctrl+shift+o\",{\"1\":{\"58\":1}}],[\"ctrl+shift+y\",{\"1\":{\"58\":1}}],[\"ctrl+shift+v\",{\"1\":{\"58\":1}}],[\"ctrl+f9\",{\"1\":{\"58\":1,\"61\":2}}],[\"ctrl+e\",{\"1\":{\"58\":1}}],[\"ctrl+alt+b\",{\"1\":{\"58\":1}}],[\"ctrl+alt+l\",{\"1\":{\"58\":1}}],[\"ctrl+alt+下键\",{\"1\":{\"58\":1}}],[\"ctrl+alt+t\",{\"1\":{\"58\":1}}],[\"ctrl+alt+\",{\"1\":{\"56\":1,\"61\":1,\"99\":1}}],[\"ctrl+鼠标滚轮向下滚\",{\"1\":{\"56\":1}}],[\"ctrl+鼠标滚轮向上滚\",{\"1\":{\"56\":1}}],[\"ctrl+d\",{\"1\":{\"56\":1,\"58\":1}}],[\"clear\",{\"1\":{\"274\":1}}],[\"cleanup\",{\"1\":{\"23\":2,\"26\":1}}],[\"closed\",{\"1\":{\"260\":1}}],[\"close\",{\"1\":{\"238\":1,\"245\":1}}],[\"clone\",{\"1\":{\"128\":1,\"133\":1,\"137\":1,\"138\":1}}],[\"cloud\",{\"1\":{\"61\":1}}],[\"client\",{\"0\":{\"152\":1},\"1\":{\"62\":1,\"151\":1,\"152\":6}}],[\"classes\",{\"0\":{\"197\":1},\"1\":{\"199\":1,\"216\":1}}],[\"classname\",{\"1\":{\"194\":1}}],[\"classloader\",{\"1\":{\"173\":1}}],[\"class或者其它class文件\",{\"1\":{\"124\":1}}],[\"class\",{\"1\":{\"45\":1,\"61\":2,\"92\":1,\"147\":2,\"150\":2,\"157\":1,\"172\":1,\"187\":3,\"199\":3,\"211\":2,\"248\":8,\"253\":1,\"255\":2,\"263\":2,\"264\":1,\"270\":3,\"284\":1}}],[\"count++\",{\"1\":{\"207\":1}}],[\"count\",{\"1\":{\"153\":1,\"207\":2,\"259\":1,\"260\":3,\"261\":4,\"287\":2}}],[\"count=null\",{\"1\":{\"142\":1}}],[\"collection\",{\"1\":{\"257\":1}}],[\"collections\",{\"1\":{\"253\":3,\"256\":1}}],[\"collection<\",{\"1\":{\"145\":1}}],[\"collector<\",{\"1\":{\"259\":1}}],[\"collector对此流的元素进行归纳\",{\"1\":{\"259\":1}}],[\"collector\",{\"1\":{\"155\":1,\"259\":1,\"282\":1}}],[\"collectors\",{\"1\":{\"145\":3,\"153\":1,\"260\":3,\"264\":2}}],[\"collect\",{\"1\":{\"145\":2,\"153\":1,\"259\":1,\"260\":4,\"264\":2}}],[\"coll\",{\"1\":{\"145\":2}}],[\"colored\",{\"1\":{\"155\":1}}],[\"colors\",{\"1\":{\"128\":1}}],[\"color\",{\"1\":{\"113\":2,\"128\":2}}],[\"copyof\",{\"1\":{\"145\":2}}],[\"copy\",{\"1\":{\"61\":2}}],[\"codota\",{\"1\":{\"61\":2}}],[\"coding\",{\"1\":{\"61\":1}}],[\"codefx\",{\"1\":{\"142\":1}}],[\"codestyle\",{\"1\":{\"80\":2}}],[\"codehelper\",{\"1\":{\"62\":1}}],[\"codeglance\",{\"1\":{\"61\":1}}],[\"code\",{\"0\":{\"78\":1},\"1\":{\"32\":2,\"61\":4,\"62\":1,\"80\":1,\"97\":2,\"179\":1,\"210\":2,\"219\":6,\"226\":1,\"229\":6,\"242\":4,\"264\":1,\"266\":1}}],[\"concat\",{\"1\":{\"259\":1,\"260\":2}}],[\"concurrency\",{\"1\":{\"234\":1,\"239\":1}}],[\"concurrent\",{\"1\":{\"172\":1,\"190\":1,\"238\":1,\"245\":1,\"289\":1,\"290\":1}}],[\"constructor\",{\"1\":{\"230\":1}}],[\"constant\",{\"1\":{\"211\":1}}],[\"consolidated\",{\"1\":{\"215\":1}}],[\"console\",{\"1\":{\"61\":2,\"95\":1}}],[\"consumer<\",{\"1\":{\"259\":1,\"265\":1,\"287\":1}}],[\"consumer<string>\",{\"1\":{\"156\":2}}],[\"consumer\",{\"1\":{\"156\":2,\"265\":2,\"287\":2}}],[\"converter\",{\"1\":{\"61\":1}}],[\"context\",{\"1\":{\"216\":1}}],[\"contents\",{\"1\":{\"45\":4,\"46\":1}}],[\"contains\",{\"1\":{\"179\":1}}],[\"controller\",{\"1\":{\"61\":1}}],[\"connect\",{\"1\":{\"49\":1}}],[\"configrations\",{\"1\":{\"101\":1}}],[\"configuration\",{\"1\":{\"75\":4}}],[\"config\",{\"1\":{\"48\":4,\"65\":1}}],[\"core\",{\"1\":{\"14\":3,\"35\":2,\"36\":2,\"226\":1}}],[\"completablefuture类增强\",{\"1\":{\"291\":1}}],[\"completeasync\",{\"1\":{\"291\":1}}],[\"completeablefuture\",{\"1\":{\"152\":1}}],[\"complete\",{\"1\":{\"179\":1}}],[\"comparable<string>\",{\"1\":{\"284\":1}}],[\"comparator进行排序\",{\"1\":{\"259\":1}}],[\"comparator<\",{\"1\":{\"259\":1}}],[\"comparator<t>\",{\"1\":{\"253\":1}}],[\"comparator<integer>\",{\"1\":{\"253\":2}}],[\"comparator\",{\"1\":{\"253\":3,\"259\":1}}],[\"compare\",{\"1\":{\"253\":1}}],[\"comparison\",{\"1\":{\"159\":2}}],[\"compute\",{\"1\":{\"193\":1}}],[\"computeifpresent\",{\"1\":{\"193\":1}}],[\"computeifabsent\",{\"1\":{\"193\":1}}],[\"compile\",{\"1\":{\"179\":1}}],[\"compiler\",{\"1\":{\"88\":1,\"148\":1,\"216\":1}}],[\"common\",{\"1\":{\"264\":1}}],[\"commonpool\",{\"1\":{\"261\":3}}],[\"command\",{\"1\":{\"128\":1,\"140\":14,\"179\":1}}],[\"command+f12\",{\"1\":{\"59\":1}}],[\"command+\",{\"1\":{\"59\":3}}],[\"commit\",{\"1\":{\"3\":1,\"61\":1}}],[\"com\",{\"1\":{\"3\":3,\"14\":2,\"50\":1,\"112\":2,\"127\":1,\"128\":3,\"133\":5,\"137\":1,\"138\":1,\"142\":1,\"150\":3,\"159\":1,\"181\":5,\"236\":1,\"244\":1,\"281\":3,\"292\":3}}],[\"cnpm\",{\"1\":{\"48\":2}}],[\"cn\",{\"1\":{\"14\":4,\"35\":2,\"36\":2,\"46\":1,\"112\":1,\"152\":1,\"181\":1}}],[\"cname\",{\"1\":{\"3\":1}}],[\"c\",{\"1\":{\"14\":2,\"36\":2,\"107\":1,\"125\":1,\"133\":3,\"142\":1,\"184\":2,\"214\":1,\"231\":5,\"235\":2,\"274\":3}}],[\"ca\",{\"1\":{\"273\":3,\"274\":4}}],[\"calendar\",{\"1\":{\"273\":3,\"274\":19}}],[\"called\",{\"1\":{\"240\":1}}],[\"call\",{\"1\":{\"240\":1}}],[\"car\",{\"1\":{\"235\":2}}],[\"cache\",{\"1\":{\"146\":1}}],[\"camelcase\",{\"1\":{\"61\":2}}],[\"case\",{\"0\":{\"94\":1},\"1\":{\"58\":1,\"61\":3,\"94\":1,\"168\":4,\"177\":2,\"185\":2,\"219\":7,\"242\":4}}],[\"caskbrew\",{\"1\":{\"40\":1}}],[\"caskrrom\",{\"1\":{\"38\":1}}],[\"caskroom\",{\"0\":{\"31\":1,\"38\":1},\"1\":{\"31\":3,\"38\":1}}],[\"cask\",{\"0\":{\"32\":1},\"1\":{\"10\":2,\"26\":2,\"31\":1,\"32\":2,\"38\":1,\"40\":1,\"41\":1,\"44\":2,\"127\":1}}],[\"cannot\",{\"1\":{\"184\":1,\"211\":1}}],[\"can\",{\"1\":{\"49\":1}}],[\"cakebrew\",{\"0\":{\"40\":1},\"1\":{\"39\":1,\"40\":4}}],[\"catch\",{\"1\":{\"58\":1}}],[\"cat\",{\"1\":{\"13\":1,\"132\":1,\"235\":2}}],[\"cellar\",{\"1\":{\"10\":2,\"46\":1}}],[\"cds\",{\"0\":{\"147\":1,\"174\":1},\"1\":{\"141\":1,\"147\":6,\"174\":3}}],[\"cd\",{\"1\":{\"3\":2,\"14\":2,\"35\":2}}],[\"dd\",{\"1\":{\"270\":1,\"271\":7,\"272\":1,\"273\":2,\"274\":1,\"276\":2}}],[\"ddthh\",{\"1\":{\"270\":1}}],[\"dmg\",{\"1\":{\"208\":1}}],[\"djdk\",{\"1\":{\"172\":1}}],[\"df5e1780aa91\",{\"1\":{\"150\":1}}],[\"dfile\",{\"1\":{\"73\":1,\"101\":1}}],[\"dayofweek\",{\"1\":{\"274\":1}}],[\"day\",{\"1\":{\"168\":1,\"185\":3,\"273\":4,\"274\":7}}],[\"dash\",{\"1\":{\"132\":1}}],[\"date2\",{\"1\":{\"273\":8}}],[\"dates2\",{\"1\":{\"273\":3}}],[\"dates1\",{\"1\":{\"273\":3}}],[\"date1\",{\"1\":{\"272\":1,\"273\":8}}],[\"datetimestr\",{\"1\":{\"271\":2}}],[\"datetimeformatter\",{\"1\":{\"271\":4}}],[\"datetime\",{\"1\":{\"271\":6,\"272\":1}}],[\"date的代码该改改了\",{\"1\":{\"269\":1}}],[\"date强有力的补充\",{\"1\":{\"269\":1}}],[\"date\",{\"0\":{\"269\":1},\"1\":{\"91\":2,\"92\":2,\"96\":2,\"97\":4,\"100\":2,\"269\":5,\"270\":1,\"271\":8,\"272\":5,\"273\":4,\"274\":1,\"275\":3,\"276\":12,\"277\":5,\"278\":1}}],[\"datagramsocket\",{\"1\":{\"201\":1}}],[\"data\",{\"1\":{\"61\":1,\"147\":2,\"150\":2}}],[\"datadir=\",{\"1\":{\"49\":1}}],[\"dracula\",{\"1\":{\"128\":3}}],[\"draculatheme\",{\"1\":{\"128\":1}}],[\"dropwhile\",{\"1\":{\"287\":3}}],[\"drop\",{\"1\":{\"49\":3,\"115\":1}}],[\"d\",{\"1\":{\"112\":1,\"140\":2,\"219\":8,\"242\":8,\"263\":2,\"268\":2,\"273\":2}}],[\"directly\",{\"1\":{\"240\":1}}],[\"digital\",{\"1\":{\"195\":1}}],[\"different\",{\"1\":{\"179\":1}}],[\"dialog\",{\"1\":{\"64\":2}}],[\"distinct\",{\"1\":{\"259\":1}}],[\"disturl\",{\"1\":{\"48\":2}}],[\"dist\",{\"1\":{\"3\":2,\"48\":1}}],[\"during\",{\"1\":{\"107\":1}}],[\"duplicate\",{\"1\":{\"59\":1}}],[\"dump\",{\"1\":{\"37\":1}}],[\"deny\",{\"1\":{\"212\":1}}],[\"declared\",{\"1\":{\"211\":1}}],[\"decompile\",{\"1\":{\"61\":1}}],[\"deb\",{\"1\":{\"208\":1}}],[\"debug跳过class文件\",{\"0\":{\"123\":1,\"124\":1}}],[\"debugger\",{\"1\":{\"61\":1,\"124\":1}}],[\"debug\",{\"0\":{\"114\":1},\"1\":{\"56\":1,\"61\":1,\"115\":1,\"116\":1,\"117\":1,\"118\":2,\"119\":1,\"121\":1,\"124\":1}}],[\"deserialization\",{\"1\":{\"216\":1}}],[\"design\",{\"1\":{\"179\":1}}],[\"descriptor\",{\"1\":{\"281\":1}}],[\"description\",{\"1\":{\"92\":1,\"96\":1,\"97\":1,\"100\":1}}],[\"desclanguage\",{\"1\":{\"177\":1}}],[\"de72\",{\"1\":{\"107\":2}}],[\"deprecate\",{\"1\":{\"216\":2,\"226\":1}}],[\"deprecated\",{\"1\":{\"107\":1,\"176\":3,\"207\":6}}],[\"deployment\",{\"1\":{\"124\":1}}],[\"deploy\",{\"0\":{\"293\":1},\"1\":{\"4\":3,\"5\":2}}],[\"def2\",{\"1\":{\"248\":1}}],[\"def\",{\"1\":{\"91\":2,\"248\":5,\"260\":1,\"261\":1}}],[\"default2方法\",{\"1\":{\"248\":1}}],[\"default方法\",{\"1\":{\"248\":2}}],[\"default修饰的方法\",{\"1\":{\"248\":1}}],[\"defaultlookup\",{\"1\":{\"235\":1}}],[\"default\",{\"1\":{\"46\":1,\"94\":1,\"177\":2,\"185\":1,\"192\":1,\"219\":3,\"226\":1,\"228\":1,\"242\":1,\"248\":3,\"259\":2}}],[\"develop\",{\"0\":{\"296\":1}}],[\"developerworks\",{\"1\":{\"181\":1}}],[\"dev\",{\"1\":{\"72\":1,\"107\":1}}],[\"deep\",{\"1\":{\"62\":1}}],[\"delete\",{\"1\":{\"49\":1,\"59\":1}}],[\"dog\",{\"1\":{\"235\":2,\"263\":9}}],[\"downcallhandle\",{\"1\":{\"235\":1}}],[\"downloads\",{\"1\":{\"127\":1}}],[\"domain\",{\"1\":{\"214\":6}}],[\"domain=https\",{\"1\":{\"14\":2}}],[\"double\",{\"1\":{\"187\":6,\"207\":1,\"219\":4,\"242\":4}}],[\"documentation\",{\"1\":{\"226\":1}}],[\"docker\",{\"1\":{\"112\":1}}],[\"doc\",{\"1\":{\"61\":1}}],[\"doctor\",{\"1\":{\"26\":1,\"27\":1}}],[\"docs\",{\"1\":{\"3\":1,\"50\":1,\"150\":1}}],[\"dnf\",{\"1\":{\"8\":1}}],[\"bjsdf\",{\"1\":{\"276\":3}}],[\"block\",{\"1\":{\"185\":1}}],[\"bd05\",{\"1\":{\"150\":1}}],[\"boot\",{\"1\":{\"216\":1}}],[\"bootstrap\",{\"1\":{\"147\":1}}],[\"boolean\",{\"1\":{\"192\":1,\"259\":2,\"261\":1,\"265\":1}}],[\"body\",{\"1\":{\"152\":2}}],[\"bodyhandlers\",{\"1\":{\"152\":2}}],[\"bottles\",{\"1\":{\"14\":2}}],[\"bottle\",{\"1\":{\"10\":2,\"14\":2}}],[\"b\",{\"1\":{\"140\":1,\"142\":1,\"184\":2,\"228\":2,\"231\":7,\"259\":1}}],[\"between\",{\"1\":{\"273\":1}}],[\"been\",{\"1\":{\"260\":1}}],[\"because\",{\"1\":{\"184\":1}}],[\"best\",{\"1\":{\"177\":1}}],[\"be\",{\"1\":{\"107\":1,\"211\":1}}],[\"bean\",{\"1\":{\"61\":2}}],[\"banana\",{\"1\":{\"264\":3}}],[\"base64\",{\"1\":{\"195\":1}}],[\"bash\",{\"1\":{\"4\":2,\"14\":5,\"65\":1,\"132\":1}}],[\"baeldung\",{\"1\":{\"150\":1,\"181\":1,\"292\":2}}],[\"bat文件最后一行添加pause\",{\"1\":{\"107\":1}}],[\"background\",{\"1\":{\"62\":1}}],[\"barriers\",{\"1\":{\"155\":1}}],[\"bar\",{\"1\":{\"62\":1,\"162\":2,\"219\":2}}],[\"bpmn\",{\"1\":{\"61\":1}}],[\"break\",{\"1\":{\"94\":2,\"168\":3,\"185\":1}}],[\"brew查找mysql版本\",{\"1\":{\"49\":1}}],[\"brew查找maven版本\",{\"1\":{\"46\":1}}],[\"brewfile\",{\"0\":{\"37\":1},\"1\":{\"37\":2}}],[\"brew\",{\"1\":{\"14\":5,\"15\":2,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":2,\"25\":6,\"26\":16,\"27\":1,\"28\":1,\"29\":1,\"31\":1,\"32\":2,\"35\":3,\"36\":3,\"37\":2,\"38\":2,\"40\":1,\"41\":2,\"44\":2,\"46\":2,\"47\":4,\"48\":4,\"49\":3,\"50\":3,\"61\":1,\"127\":1,\"133\":1,\"137\":1}}],[\"browsewordatcaret\",{\"1\":{\"62\":1}}],[\"brackets\",{\"1\":{\"61\":1}}],[\"byte\",{\"1\":{\"195\":2,\"284\":2}}],[\"bytecode\",{\"1\":{\"61\":2}}],[\"by\",{\"1\":{\"49\":3,\"97\":1,\"176\":2,\"226\":1,\"228\":1}}],[\"b10\",{\"1\":{\"44\":2}}],[\"biased\",{\"1\":{\"201\":1}}],[\"bit\",{\"1\":{\"13\":1,\"44\":1,\"107\":1}}],[\"binding\",{\"1\":{\"228\":1}}],[\"bin下的idea\",{\"1\":{\"107\":1}}],[\"bin\",{\"1\":{\"3\":1,\"13\":1,\"14\":2,\"45\":1,\"46\":1,\"48\":1,\"49\":2,\"132\":8,\"133\":1}}],[\"button\",{\"1\":{\"253\":3}}],[\"but\",{\"1\":{\"179\":1}}],[\"buff\",{\"1\":{\"61\":1}}],[\"bug\",{\"1\":{\"48\":1,\"61\":1}}],[\"bundle\",{\"1\":{\"10\":1,\"37\":3}}],[\"builder\",{\"1\":{\"259\":1}}],[\"builder<t>\",{\"1\":{\"259\":1}}],[\"build\",{\"1\":{\"3\":1,\"44\":2,\"88\":1,\"124\":1,\"152\":1}}],[\"bsd\",{\"1\":{\"9\":1}}],[\"effectively\",{\"1\":{\"286\":3}}],[\"each\",{\"1\":{\"261\":1}}],[\"easy\",{\"1\":{\"61\":1}}],[\"erlang\",{\"1\":{\"236\":1,\"244\":1}}],[\"errors\",{\"1\":{\"113\":1}}],[\"error\",{\"1\":{\"49\":1,\"107\":2}}],[\"es6\",{\"1\":{\"201\":1,\"291\":1}}],[\"equalsandhashcode注解\",{\"1\":{\"187\":1}}],[\"equals\",{\"1\":{\"187\":1,\"235\":1,\"259\":1,\"260\":2}}],[\"epsilon\",{\"1\":{\"158\":1}}],[\"employee\",{\"1\":{\"199\":3}}],[\"emptyaction\",{\"1\":{\"287\":1}}],[\"empty\",{\"1\":{\"154\":1,\"264\":6,\"267\":1,\"287\":4}}],[\"emacs\",{\"1\":{\"62\":1}}],[\"e>\",{\"1\":{\"145\":1}}],[\"evaluate\",{\"1\":{\"115\":1}}],[\"else\",{\"1\":{\"91\":2,\"185\":1,\"219\":3,\"242\":3,\"264\":2,\"266\":1,\"267\":1}}],[\"ed25519\",{\"1\":{\"195\":2}}],[\"edwards\",{\"1\":{\"195\":1}}],[\"eddsa\",{\"0\":{\"195\":1},\"1\":{\"195\":1}}],[\"editor\",{\"1\":{\"90\":1,\"91\":2,\"92\":1,\"97\":1,\"113\":2}}],[\"edit\",{\"1\":{\"73\":1,\"101\":1,\"105\":1}}],[\"edu\",{\"1\":{\"14\":4,\"35\":2,\"36\":2}}],[\"ecdsa\",{\"1\":{\"195\":2}}],[\"ecs\",{\"1\":{\"61\":1}}],[\"eclipse\",{\"1\":{\"61\":2}}],[\"echo\",{\"1\":{\"3\":1,\"13\":1,\"14\":2,\"45\":2,\"46\":1,\"48\":1,\"132\":1}}],[\"exist\",{\"1\":{\"179\":1}}],[\"exclution\",{\"1\":{\"124\":1}}],[\"exceptionsupplier\",{\"1\":{\"266\":2}}],[\"exceptions\",{\"1\":{\"238\":1,\"245\":1}}],[\"exception\",{\"1\":{\"93\":1,\"184\":2}}],[\"example\",{\"1\":{\"96\":1}}],[\"execution\",{\"1\":{\"115\":1}}],[\"exe\",{\"1\":{\"61\":1,\"110\":1,\"208\":1}}],[\"extends\",{\"1\":{\"145\":1,\"172\":1,\"199\":2,\"255\":1,\"259\":3,\"266\":3,\"287\":2}}],[\"extension\",{\"1\":{\"61\":1}}],[\"extra\",{\"1\":{\"61\":1}}],[\"experimental\",{\"1\":{\"216\":1}}],[\"expression\",{\"1\":{\"115\":1,\"211\":1,\"240\":1,\"251\":1}}],[\"expander\",{\"1\":{\"61\":1}}],[\"explorer\",{\"1\":{\"58\":1}}],[\"exports\",{\"1\":{\"281\":4}}],[\"export\",{\"1\":{\"14\":2,\"45\":3,\"46\":1,\"48\":1,\"49\":1,\"103\":1,\"281\":1}}],[\"ex\",{\"1\":{\"58\":1,\"61\":1,\"99\":1}}],[\"en\",{\"1\":{\"292\":1}}],[\"encapsulate\",{\"1\":{\"216\":1}}],[\"encodetostring\",{\"1\":{\"195\":1}}],[\"encodedstring\",{\"1\":{\"195\":2}}],[\"encodings\",{\"1\":{\"84\":1}}],[\"encoding=utf\",{\"1\":{\"73\":1,\"101\":1}}],[\"encoding\",{\"1\":{\"46\":1}}],[\"enhanced\",{\"1\":{\"216\":1}}],[\"enhancements\",{\"1\":{\"150\":1}}],[\"enable\",{\"1\":{\"167\":1}}],[\"entry\",{\"1\":{\"146\":1}}],[\"enter\",{\"1\":{\"140\":2}}],[\"environment\",{\"1\":{\"44\":1}}],[\"env\",{\"1\":{\"3\":1}}],[\"etc\",{\"1\":{\"13\":1,\"132\":1}}],[\"e\",{\"1\":{\"3\":1,\"10\":1,\"140\":1,\"253\":4}}],[\"slf4j\",{\"1\":{\"291\":1}}],[\"slogan\",{\"1\":{\"8\":1}}],[\"sdfdt\",{\"1\":{\"271\":2}}],[\"sdft\",{\"1\":{\"271\":2}}],[\"sdf\",{\"1\":{\"271\":2,\"272\":2}}],[\"sss\",{\"1\":{\"270\":1}}],[\"ss\",{\"1\":{\"270\":2,\"271\":7,\"276\":2}}],[\"skip\",{\"1\":{\"259\":1}}],[\"sf\",{\"1\":{\"255\":2}}],[\"sm2\",{\"1\":{\"248\":1}}],[\"sm\",{\"1\":{\"248\":1}}],[\"snippet\",{\"1\":{\"229\":3}}],[\"snippets\",{\"1\":{\"226\":1}}],[\"snake\",{\"1\":{\"61\":2}}],[\"sweep\",{\"1\":{\"190\":1}}],[\"swi\",{\"1\":{\"94\":1}}],[\"switch\",{\"0\":{\"94\":1,\"168\":1,\"177\":2,\"185\":1,\"219\":1,\"242\":1},\"1\":{\"64\":2,\"94\":1,\"168\":3,\"177\":4,\"185\":3,\"216\":2,\"219\":5,\"226\":2,\"234\":2,\"239\":1,\"241\":1,\"242\":4}}],[\"symbollookup\",{\"1\":{\"235\":1}}],[\"synchronized\",{\"1\":{\"207\":4}}],[\"syntax\",{\"1\":{\"137\":6,\"139\":1}}],[\"systemdefault\",{\"1\":{\"276\":1}}],[\"system\",{\"1\":{\"142\":1,\"152\":2,\"154\":1,\"156\":2,\"162\":3,\"164\":1,\"168\":4,\"169\":2,\"185\":1,\"188\":2,\"195\":1,\"217\":1,\"219\":6,\"229\":1,\"248\":5,\"253\":3,\"254\":3,\"260\":8,\"261\":2,\"263\":2,\"264\":6,\"271\":6,\"273\":5,\"274\":3,\"276\":7,\"281\":1,\"287\":9,\"288\":2,\"291\":2}}],[\"src\",{\"1\":{\"142\":1}}],[\"scanner\",{\"1\":{\"286\":7}}],[\"scavenge\",{\"1\":{\"282\":1}}],[\"scalarcomputation\",{\"1\":{\"231\":1}}],[\"scala\",{\"1\":{\"142\":1}}],[\"scopedvalue\",{\"1\":{\"240\":1}}],[\"scopedvalue<>\",{\"1\":{\"240\":1}}],[\"scopedvalue<\",{\"1\":{\"240\":1}}],[\"scoped\",{\"1\":{\"239\":1,\"240\":1}}],[\"scope\",{\"1\":{\"238\":4,\"245\":4}}],[\"scheme\",{\"1\":{\"113\":1}}],[\"scripts\",{\"1\":{\"4\":1}}],[\"szq\",{\"1\":{\"96\":1}}],[\"single\",{\"1\":{\"249\":1}}],[\"since\",{\"1\":{\"207\":2}}],[\"since=\",{\"1\":{\"176\":3,\"207\":1}}],[\"simpledateformat\",{\"1\":{\"271\":6,\"272\":3,\"273\":4,\"274\":2,\"276\":4}}],[\"simple\",{\"1\":{\"226\":1}}],[\"simd\",{\"1\":{\"203\":1,\"225\":1}}],[\"sign\",{\"1\":{\"195\":1}}],[\"signature\",{\"1\":{\"195\":3}}],[\"sig\",{\"1\":{\"195\":4}}],[\"size\",{\"1\":{\"91\":1}}],[\"silicon\",{\"1\":{\"13\":1}}],[\"spi\",{\"0\":{\"232\":1},\"1\":{\"226\":1,\"232\":1}}],[\"sphp\",{\"1\":{\"188\":1}}],[\"species\",{\"1\":{\"231\":6}}],[\"specific\",{\"1\":{\"216\":1,\"281\":1}}],[\"specification\",{\"1\":{\"179\":1}}],[\"specify\",{\"1\":{\"179\":1}}],[\"special\",{\"1\":{\"61\":1}}],[\"spring\",{\"1\":{\"216\":2}}],[\"springframework\",{\"1\":{\"124\":1}}],[\"springboot\",{\"1\":{\"75\":2}}],[\"split\",{\"1\":{\"91\":1}}],[\"such\",{\"1\":{\"281\":1}}],[\"summarystatistics\",{\"1\":{\"260\":1}}],[\"supplier\",{\"1\":{\"287\":3}}],[\"supplier<\",{\"1\":{\"266\":2,\"287\":1}}],[\"support\",{\"1\":{\"53\":1,\"62\":1,\"151\":1}}],[\"superf\",{\"1\":{\"255\":1}}],[\"super\",{\"1\":{\"248\":1,\"255\":1,\"259\":7,\"265\":1,\"267\":1,\"287\":2}}],[\"subscription\",{\"1\":{\"289\":1}}],[\"subscriber\",{\"1\":{\"289\":1}}],[\"subdirectories\",{\"1\":{\"228\":1}}],[\"sublime\",{\"1\":{\"62\":1}}],[\"sublimetext\",{\"1\":{\"61\":1}}],[\"sun\",{\"1\":{\"209\":1,\"212\":1,\"235\":1,\"290\":1}}],[\"sunday\",{\"1\":{\"168\":1,\"185\":1,\"274\":1}}],[\"sql\",{\"1\":{\"61\":3,\"176\":2,\"257\":1,\"269\":1}}],[\"sam\",{\"1\":{\"249\":1}}],[\"saturday\",{\"1\":{\"168\":1}}],[\"save\",{\"1\":{\"61\":1,\"82\":1}}],[\"safe\",{\"1\":{\"49\":1}}],[\"sorted\",{\"1\":{\"259\":1,\"260\":2}}],[\"sort\",{\"1\":{\"253\":3,\"256\":1}}],[\"some\",{\"1\":{\"240\":1}}],[\"soft\",{\"1\":{\"72\":2,\"107\":2}}],[\"sonarlint\",{\"1\":{\"61\":1}}],[\"sock\",{\"1\":{\"49\":1}}],[\"socketimpl\",{\"1\":{\"172\":1}}],[\"socketapi\",{\"0\":{\"172\":1}}],[\"socket\",{\"1\":{\"49\":1,\"172\":3}}],[\"source\",{\"1\":{\"14\":2,\"32\":2,\"45\":1,\"61\":1,\"137\":1,\"229\":1}}],[\"stdlib\",{\"1\":{\"235\":2}}],[\"stepping\",{\"1\":{\"124\":2}}],[\"step\",{\"1\":{\"115\":4}}],[\"store\",{\"1\":{\"65\":1}}],[\"stop\",{\"1\":{\"25\":1,\"155\":1}}],[\"strongly\",{\"1\":{\"216\":1}}],[\"str2\",{\"1\":{\"188\":2}}],[\"str\",{\"1\":{\"169\":4,\"188\":1}}],[\"strict\",{\"1\":{\"216\":1}}],[\"stripindent\",{\"1\":{\"176\":2}}],[\"striptrailing\",{\"1\":{\"153\":1}}],[\"stripleading\",{\"1\":{\"153\":1}}],[\"strip\",{\"1\":{\"153\":1}}],[\"strings2\",{\"1\":{\"260\":2}}],[\"stringstream\",{\"1\":{\"260\":2,\"287\":2}}],[\"strings\",{\"1\":{\"253\":4,\"254\":4,\"256\":1,\"260\":10,\"261\":2}}],[\"string>\",{\"1\":{\"142\":1,\"254\":1}}],[\"string\",{\"0\":{\"153\":1,\"162\":1,\"284\":1},\"1\":{\"61\":1,\"156\":1,\"162\":2,\"164\":1,\"169\":4,\"176\":9,\"177\":2,\"185\":1,\"188\":3,\"195\":2,\"210\":4,\"219\":21,\"235\":2,\"242\":19,\"248\":1,\"254\":1,\"260\":7,\"264\":10,\"271\":10,\"273\":3,\"274\":2,\"284\":3}}],[\"structuredtaskscope<object>\",{\"1\":{\"238\":1,\"245\":1}}],[\"structuredtaskscope\",{\"1\":{\"238\":2,\"245\":2}}],[\"structured\",{\"1\":{\"234\":1,\"239\":1}}],[\"structure\",{\"1\":{\"67\":2}}],[\"streams\",{\"0\":{\"289\":1},\"1\":{\"289\":1}}],[\"stream的构建器\",{\"1\":{\"259\":1}}],[\"stream<integer>\",{\"1\":{\"261\":1}}],[\"stream<string>\",{\"1\":{\"260\":3,\"287\":2}}],[\"stream<\",{\"1\":{\"259\":2}}],[\"stream<r>\",{\"1\":{\"259\":1}}],[\"stream<t>\",{\"1\":{\"259\":8,\"287\":2}}],[\"stream<e>\",{\"1\":{\"259\":2}}],[\"stream常用方法\",{\"1\":{\"259\":1}}],[\"stream依然不存储数据\",{\"1\":{\"257\":1}}],[\"stream调试\",{\"0\":{\"121\":1}}],[\"stream\",{\"0\":{\"257\":1,\"287\":1},\"1\":{\"61\":2,\"145\":3,\"257\":1,\"258\":1,\"259\":3,\"260\":19,\"261\":8,\"262\":4,\"264\":4,\"278\":1,\"279\":1,\"287\":12}}],[\"style\",{\"0\":{\"78\":1},\"1\":{\"61\":1,\"79\":1,\"164\":1}}],[\"stable\",{\"1\":{\"284\":2}}],[\"statements\",{\"1\":{\"251\":1}}],[\"static<t>\",{\"1\":{\"259\":3,\"264\":1,\"287\":2}}],[\"staticf\",{\"1\":{\"255\":2}}],[\"static修饰的方法\",{\"1\":{\"248\":1}}],[\"static修饰\",{\"1\":{\"248\":1}}],[\"static\",{\"1\":{\"145\":1,\"163\":1,\"177\":1,\"211\":3,\"219\":4,\"231\":1,\"240\":1,\"242\":2,\"248\":4,\"253\":2,\"255\":1,\"259\":1,\"264\":6}}],[\"statistics\",{\"1\":{\"260\":1}}],[\"statistic\",{\"1\":{\"61\":1}}],[\"standardcharsets\",{\"1\":{\"195\":1}}],[\"stackoverflow\",{\"1\":{\"62\":1}}],[\"start\",{\"1\":{\"25\":1,\"49\":1,\"207\":1,\"253\":2,\"281\":1}}],[\"s\",{\"0\":{\"82\":1},\"1\":{\"13\":1,\"61\":1,\"91\":1,\"133\":1,\"177\":1,\"185\":1,\"188\":1,\"195\":2,\"210\":4,\"219\":15,\"242\":10,\"253\":1,\"254\":4,\"260\":4,\"264\":2,\"271\":6}}],[\"seed\",{\"1\":{\"287\":2}}],[\"serializable\",{\"1\":{\"284\":1}}],[\"servlet\",{\"1\":{\"228\":1}}],[\"service\",{\"1\":{\"232\":1}}],[\"services\",{\"0\":{\"294\":1},\"1\":{\"25\":6,\"49\":1}}],[\"serving\",{\"1\":{\"228\":1}}],[\"server\",{\"1\":{\"44\":1,\"49\":1,\"107\":1,\"214\":1,\"226\":1}}],[\"session\",{\"1\":{\"263\":1}}],[\"segmentallocator\",{\"1\":{\"235\":1}}],[\"semantics\",{\"1\":{\"216\":1}}],[\"se\",{\"1\":{\"210\":3,\"211\":4}}],[\"sealed\",{\"1\":{\"199\":5,\"216\":1}}],[\"searck\",{\"1\":{\"26\":1}}],[\"search搜索\",{\"1\":{\"61\":1}}],[\"search\",{\"1\":{\"17\":1,\"44\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"61\":3}}],[\"sendasync\",{\"1\":{\"152\":1}}],[\"send\",{\"1\":{\"152\":1}}],[\"security\",{\"1\":{\"216\":1}}],[\"secured\",{\"1\":{\"177\":1}}],[\"second\",{\"1\":{\"210\":1,\"211\":1}}],[\"sec\",{\"1\":{\"61\":1}}],[\"sequencediagram\",{\"1\":{\"61\":2}}],[\"select\",{\"1\":{\"13\":1,\"49\":3,\"176\":2}}],[\"setatindex\",{\"1\":{\"235\":1}}],[\"setup\",{\"1\":{\"64\":1,\"67\":1,\"69\":1,\"72\":1,\"75\":1,\"82\":1,\"84\":1,\"86\":1,\"97\":1}}],[\"settimezone\",{\"1\":{\"276\":2}}],[\"setting\",{\"1\":{\"61\":1,\"103\":1}}],[\"settings\",{\"1\":{\"56\":1,\"64\":1,\"69\":1,\"72\":1,\"82\":1,\"84\":1,\"86\":1,\"90\":1,\"97\":1,\"103\":1,\"113\":1,\"124\":1}}],[\"setter\",{\"1\":{\"58\":1,\"61\":1}}],[\"set\",{\"1\":{\"3\":1,\"14\":2,\"35\":2,\"36\":2,\"48\":2,\"49\":1,\"61\":2,\"62\":1,\"67\":1,\"75\":3,\"82\":1,\"139\":2,\"145\":1,\"274\":3,\"283\":2}}],[\"sha3\",{\"1\":{\"291\":4}}],[\"sha\",{\"1\":{\"291\":1}}],[\"shanghai\",{\"1\":{\"276\":3}}],[\"shape\",{\"1\":{\"187\":1}}],[\"sharing\",{\"1\":{\"147\":2,\"150\":2}}],[\"sharedarchivefile=my\",{\"1\":{\"174\":1}}],[\"share\",{\"1\":{\"137\":1}}],[\"shenandoah\",{\"0\":{\"165\":1},\"1\":{\"165\":1}}],[\"shell注释\",{\"0\":{\"96\":1}}],[\"shells\",{\"1\":{\"13\":1,\"132\":1}}],[\"short\",{\"1\":{\"164\":1,\"276\":1}}],[\"shows\",{\"1\":{\"229\":1}}],[\"show\",{\"1\":{\"49\":1,\"58\":1,\"61\":1,\"115\":1,\"255\":1}}],[\"shifter\",{\"1\":{\"62\":1}}],[\"shift\",{\"1\":{\"61\":5,\"115\":2,\"140\":2}}],[\"shift+shift\",{\"1\":{\"58\":1}}],[\"sh\",{\"0\":{\"3\":1},\"1\":{\"3\":1,\"4\":2,\"14\":2,\"18\":1,\"38\":1,\"50\":2,\"96\":2,\"132\":1,\"133\":6}}],[\"确保脚本抛出遇到的错误\",{\"1\":{\"3\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
